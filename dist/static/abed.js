/* Generated by Spago v0.93.39 */
(() => {
  // output/Control.Bind/foreign.js
  var arrayBind = function(arr) {
    return function(f) {
      var result = [];
      for (var i2 = 0, l2 = arr.length; i2 < l2; i2++) {
        Array.prototype.push.apply(result, f(arr[i2]));
      }
      return result;
    };
  };

  // output/Control.Apply/foreign.js
  var arrayApply = function(fs) {
    return function(xs) {
      var l2 = fs.length;
      var k = xs.length;
      var result = new Array(l2 * k);
      var n = 0;
      for (var i2 = 0; i2 < l2; i2++) {
        var f = fs[i2];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g2) {
        return function(x2) {
          return f(g2(x2));
        };
      };
    }
  };
  var compose = function(dict) {
    return dict.compose;
  };
  var composeFlipped = function(dictSemigroupoid) {
    var compose1 = compose(dictSemigroupoid);
    return function(f) {
      return function(g2) {
        return compose1(g2)(f);
      };
    };
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x2) {
      return x2;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var flip = function(f) {
    return function(b2) {
      return function(a3) {
        return f(a3)(b2);
      };
    };
  };
  var $$const = function(a3) {
    return function(v2) {
      return a3;
    };
  };
  var applyFlipped = function(x2) {
    return function(f) {
      return f(x2);
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l2 = arr.length;
      var result = new Array(l2);
      for (var i2 = 0; i2 < l2; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  }();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map123(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return function(f) {
      return function(x2) {
        return map123($$const(x2))(f);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return function(x2) {
      return map123($$const(x2));
    };
  };
  var functorFn = {
    map: /* @__PURE__ */ compose(semigroupoidFn)
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var applyFn = {
    apply: function(f) {
      return function(g2) {
        return function(x2) {
          return f(x2)(g2(x2));
        };
      };
    },
    Functor0: function() {
      return functorFn;
    }
  };
  var applyArray = {
    apply: arrayApply,
    Functor0: function() {
      return functorArray;
    }
  };
  var apply = function(dict) {
    return dict.apply;
  };
  var applyFirst = function(dictApply) {
    var apply12 = apply(dictApply);
    var map65 = map(dictApply.Functor0());
    return function(a3) {
      return function(b2) {
        return apply12(map65($$const)(a3))(b2);
      };
    };
  };
  var applySecond = function(dictApply) {
    var apply12 = apply(dictApply);
    var map65 = map(dictApply.Functor0());
    return function(a3) {
      return function(b2) {
        return apply12(map65($$const(identity2))(a3))(b2);
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure116 = pure(dictApplicative);
    return function(v2) {
      return function(v1) {
        if (!v2) {
          return v1;
        }
        ;
        if (v2) {
          return pure116(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v2.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure116 = pure(dictApplicative);
    return function(v2) {
      return function(v1) {
        if (v2) {
          return v1;
        }
        ;
        if (!v2) {
          return pure116(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v2.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply8 = apply(dictApplicative.Apply0());
    var pure116 = pure(dictApplicative);
    return function(f) {
      return function(a3) {
        return apply8(pure116(f))(a3);
      };
    };
  };
  var applicativeFn = {
    pure: function(x2) {
      return function(v2) {
        return x2;
      };
    },
    Apply0: function() {
      return applyFn;
    }
  };
  var applicativeArray = {
    pure: function(x2) {
      return [x2];
    },
    Apply0: function() {
      return applyArray;
    }
  };

  // output/Control.Bind/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var discard = function(dict) {
    return dict.discard;
  };
  var bindFn = {
    bind: function(m2) {
      return function(f) {
        return function(x2) {
          return f(m2(x2))(x2);
        };
      };
    },
    Apply0: function() {
      return applyFn;
    }
  };
  var bindArray = {
    bind: arrayBind,
    Apply0: function() {
      return applyArray;
    }
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped14 = bindFlipped(dictBind);
    return function(f) {
      return function(g2) {
        return function(a3) {
          return bindFlipped14(f)(g2(a3));
        };
      };
    };
  };
  var composeKleisli = function(dictBind) {
    var bind118 = bind(dictBind);
    return function(f) {
      return function(g2) {
        return function(a3) {
          return bind118(f(a3))(g2);
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };
  var join = function(dictBind) {
    var bind118 = bind(dictBind);
    return function(m2) {
      return bind118(m2)(identity3);
    };
  };

  // output/Control.Monad/index.js
  var whenM = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var when12 = when(dictMonad.Applicative0());
    return function(mb) {
      return function(m2) {
        return bind40(mb)(function(b2) {
          return when12(b2)(m2);
        });
      };
    };
  };
  var unlessM = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var unless4 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m2) {
        return bind40(mb)(function(b2) {
          return unless4(b2)(m2);
        });
      };
    };
  };
  var monadFn = {
    Applicative0: function() {
      return applicativeFn;
    },
    Bind1: function() {
      return bindFn;
    }
  };
  var liftM1 = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var pure41 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a3) {
        return bind40(a3)(function(a$prime) {
          return pure41(f(a$prime));
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var pure41 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a3) {
        return bind40(f)(function(f$prime) {
          return bind40(a3)(function(a$prime) {
            return pure41(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Control.Monad.Reader.Class/index.js
  var monadAskFun = {
    ask: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadFn;
    }
  };
  var monadReaderFun = {
    local: /* @__PURE__ */ composeFlipped(semigroupoidFn),
    MonadAsk0: function() {
      return monadAskFun;
    }
  };
  var ask = function(dict) {
    return dict.ask;
  };
  var asks = function(dictMonadAsk) {
    var map65 = map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0());
    var ask1 = ask(dictMonadAsk);
    return function(f) {
      return map65(f)(ask1);
    };
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce = function(x2) {
    return x2;
  };

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a3) {
      return function() {
        return f(a3());
      };
    };
  };
  var pure_ = function(a3) {
    return function() {
      return a3;
    };
  };
  var bind_ = function(a3) {
    return function(f) {
      return function() {
        return f(a3())();
      };
    };
  };
  function newSTRef(val) {
    return function() {
      return { value: val };
    };
  }
  var read = function(ref3) {
    return function() {
      return ref3.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref3) {
      return function() {
        var t2 = f(ref3.value);
        ref3.value = t2.state;
        return t2.value;
      };
    };
  };
  var write = function(a3) {
    return function(ref3) {
      return function() {
        return ref3.value = a3;
      };
    };
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0)
        return ys;
      if (ys.length === 0)
        return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Record.Unsafe/foreign.js
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };
  var unsafeSet = function(label5) {
    return function(value14) {
      return function(rec) {
        var copy2 = {};
        for (var key2 in rec) {
          if ({}.hasOwnProperty.call(rec, key2)) {
            copy2[key2] = rec[key2];
          }
        }
        copy2[label5] = value14;
        return copy2;
      };
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };
  var semigroupFn = function(dictSemigroup) {
    var append113 = append(dictSemigroup);
    return {
      append: function(f) {
        return function(g2) {
          return function(x2) {
            return append113(f(x2))(g2(x2));
          };
        };
      }
    };
  };

  // output/Control.Alt/index.js
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq25) {
      return function(gt) {
        return function(x2) {
          return function(y2) {
            return x2 < y2 ? lt : x2 === y2 ? eq25 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r2) {
      return r1 === r2;
    };
  };
  var eqBooleanImpl = refEq;
  var eqIntImpl = refEq;
  var eqNumberImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v2) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqRowNil = {
    eqRecord: function(v2) {
      return function(v1) {
        return function(v22) {
          return true;
        };
      };
    }
  };
  var eqRecord = function(dict) {
    return dict.eqRecord;
  };
  var eqRec = function() {
    return function(dictEqRecord) {
      return {
        eq: eqRecord(dictEqRecord)($$Proxy.value)
      };
    };
  };
  var eqNumber = {
    eq: eqNumberImpl
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eqBoolean = {
    eq: eqBooleanImpl
  };
  var eq1 = function(dict) {
    return dict.eq1;
  };
  var eq = function(dict) {
    return dict.eq;
  };
  var eq2 = /* @__PURE__ */ eq(eqBoolean);
  var eqRowCons = function(dictEqRecord) {
    var eqRecord1 = eqRecord(dictEqRecord);
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        return function(dictEq) {
          var eq33 = eq(dictEq);
          return {
            eqRecord: function(v2) {
              return function(ra) {
                return function(rb) {
                  var tail3 = eqRecord1($$Proxy.value)(ra)(rb);
                  var key2 = reflectSymbol2($$Proxy.value);
                  var get4 = unsafeGet(key2);
                  return eq33(get4(ra))(get4(rb)) && tail3;
                };
              };
            }
          };
        };
      };
    };
  };
  var notEq = function(dictEq) {
    var eq33 = eq(dictEq);
    return function(x2) {
      return function(y2) {
        return eq2(eq33(x2)(y2))(false);
      };
    };
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  }();
  var GT = /* @__PURE__ */ function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  }();
  var EQ = /* @__PURE__ */ function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  }();
  var semigroupOrdering = {
    append: function(v2) {
      return function(v1) {
        if (v2 instanceof LT) {
          return LT.value;
        }
        ;
        if (v2 instanceof GT) {
          return GT.value;
        }
        ;
        if (v2 instanceof EQ) {
          return v1;
        }
        ;
        throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [v2.constructor.name, v1.constructor.name]);
      };
    }
  };
  var eqOrdering = {
    eq: function(v2) {
      return function(v1) {
        if (v2 instanceof LT && v1 instanceof LT) {
          return true;
        }
        ;
        if (v2 instanceof GT && v1 instanceof GT) {
          return true;
        }
        ;
        if (v2 instanceof EQ && v1 instanceof EQ) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Ring/foreign.js
  var intSub = function(x2) {
    return function(y2) {
      return x2 - y2 | 0;
    };
  };
  var numSub = function(n1) {
    return function(n2) {
      return n1 - n2;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x2) {
    return function(y2) {
      return x2 + y2 | 0;
    };
  };
  var intMul = function(x2) {
    return function(y2) {
      return x2 * y2 | 0;
    };
  };
  var numAdd = function(n1) {
    return function(n2) {
      return n1 + n2;
    };
  };
  var numMul = function(n1) {
    return function(n2) {
      return n1 * n2;
    };
  };

  // output/Data.Semiring/index.js
  var zero = function(dict) {
    return dict.zero;
  };
  var semiringNumber = {
    add: numAdd,
    zero: 0,
    mul: numMul,
    one: 1
  };
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };
  var one = function(dict) {
    return dict.one;
  };
  var mul = function(dict) {
    return dict.mul;
  };
  var add = function(dict) {
    return dict.add;
  };

  // output/Data.Ring/index.js
  var sub = function(dict) {
    return dict.sub;
  };
  var ringNumber = {
    sub: numSub,
    Semiring0: function() {
      return semiringNumber;
    }
  };
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };
  var negate = function(dictRing) {
    var sub14 = sub(dictRing);
    var zero10 = zero(dictRing.Semiring0());
    return function(a3) {
      return sub14(zero10)(a3);
    };
  };

  // output/Data.Ord/index.js
  var eqRec2 = /* @__PURE__ */ eqRec();
  var notEq2 = /* @__PURE__ */ notEq(eqOrdering);
  var ordUnit = {
    compare: function(v2) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  }();
  var ordRecordNil = {
    compareRecord: function(v2) {
      return function(v1) {
        return function(v22) {
          return EQ.value;
        };
      };
    },
    EqRecord0: function() {
      return eqRowNil;
    }
  };
  var ordInt = /* @__PURE__ */ function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  }();
  var ordChar = /* @__PURE__ */ function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  }();
  var compareRecord = function(dict) {
    return dict.compareRecord;
  };
  var ordRecord = function() {
    return function(dictOrdRecord) {
      var eqRec1 = eqRec2(dictOrdRecord.EqRecord0());
      return {
        compare: compareRecord(dictOrdRecord)($$Proxy.value),
        Eq0: function() {
          return eqRec1;
        }
      };
    };
  };
  var compare1 = function(dict) {
    return dict.compare1;
  };
  var compare = function(dict) {
    return dict.compare;
  };
  var greaterThan = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a22) {
        var v2 = compare32(a1)(a22);
        if (v2 instanceof GT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var greaterThanOrEq = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a22) {
        var v2 = compare32(a1)(a22);
        if (v2 instanceof LT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var lessThan = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a22) {
        var v2 = compare32(a1)(a22);
        if (v2 instanceof LT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var lessThanOrEq = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a22) {
        var v2 = compare32(a1)(a22);
        if (v2 instanceof GT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var max = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(x2) {
      return function(y2) {
        var v2 = compare32(x2)(y2);
        if (v2 instanceof LT) {
          return y2;
        }
        ;
        if (v2 instanceof EQ) {
          return x2;
        }
        ;
        if (v2 instanceof GT) {
          return x2;
        }
        ;
        throw new Error("Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): " + [v2.constructor.name]);
      };
    };
  };
  var min = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(x2) {
      return function(y2) {
        var v2 = compare32(x2)(y2);
        if (v2 instanceof LT) {
          return x2;
        }
        ;
        if (v2 instanceof EQ) {
          return x2;
        }
        ;
        if (v2 instanceof GT) {
          return y2;
        }
        ;
        throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [v2.constructor.name]);
      };
    };
  };
  var ordRecordCons = function(dictOrdRecord) {
    var compareRecord1 = compareRecord(dictOrdRecord);
    var eqRowCons3 = eqRowCons(dictOrdRecord.EqRecord0())();
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        var eqRowCons1 = eqRowCons3(dictIsSymbol);
        return function(dictOrd) {
          var compare32 = compare(dictOrd);
          var eqRowCons22 = eqRowCons1(dictOrd.Eq0());
          return {
            compareRecord: function(v2) {
              return function(ra) {
                return function(rb) {
                  var key2 = reflectSymbol2($$Proxy.value);
                  var left2 = compare32(unsafeGet(key2)(ra))(unsafeGet(key2)(rb));
                  var $95 = notEq2(left2)(EQ.value);
                  if ($95) {
                    return left2;
                  }
                  ;
                  return compareRecord1($$Proxy.value)(ra)(rb);
                };
              };
            },
            EqRecord0: function() {
              return eqRowCons22;
            }
          };
        };
      };
    };
  };
  var clamp = function(dictOrd) {
    var min1 = min(dictOrd);
    var max1 = max(dictOrd);
    return function(low2) {
      return function(hi) {
        return function(x2) {
          return min1(hi)(max1(low2)(x2));
        };
      };
    };
  };
  var between = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    return function(low2) {
      return function(hi) {
        return function(x2) {
          if (lessThan1(x2)(low2)) {
            return false;
          }
          ;
          if (greaterThan1(x2)(hi)) {
            return false;
          }
          ;
          return true;
        };
      };
    };
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
  var showCharImpl = function(c2) {
    var code3 = c2.charCodeAt(0);
    if (code3 < 32 || code3 === 127) {
      switch (c2) {
        case "\x07":
          return "'\\a'";
        case "\b":
          return "'\\b'";
        case "\f":
          return "'\\f'";
        case "\n":
          return "'\\n'";
        case "\r":
          return "'\\r'";
        case "	":
          return "'\\t'";
        case "\v":
          return "'\\v'";
      }
      return "'\\" + code3.toString(10) + "'";
    }
    return c2 === "'" || c2 === "\\" ? "'\\" + c2 + "'" : "'" + c2 + "'";
  };
  var showStringImpl = function(s2) {
    var l2 = s2.length;
    return '"' + s2.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c2, i2) {
        switch (c2) {
          case '"':
          case "\\":
            return "\\" + c2;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i2 + 1;
        var empty10 = k < l2 && s2[k] >= "0" && s2[k] <= "9" ? "\\&" : "";
        return "\\" + c2.charCodeAt(0).toString(10) + empty10;
      }
    ) + '"';
  };
  var showArrayImpl = function(f) {
    return function(xs) {
      var ss = [];
      for (var i2 = 0, l2 = xs.length; i2 < l2; i2++) {
        ss[i2] = f(xs[i2]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showRecordFields = function(dict) {
    return dict.showRecordFields;
  };
  var showRecord = function() {
    return function() {
      return function(dictShowRecordFields) {
        var showRecordFields1 = showRecordFields(dictShowRecordFields);
        return {
          show: function(record2) {
            return "{" + (showRecordFields1($$Proxy.value)(record2) + "}");
          }
        };
      };
    };
  };
  var showNumber = {
    show: showNumberImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var showChar = {
    show: showCharImpl
  };
  var showBoolean = {
    show: function(v2) {
      if (v2) {
        return "true";
      }
      ;
      if (!v2) {
        return "false";
      }
      ;
      throw new Error("Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): " + [v2.constructor.name]);
    }
  };
  var show = function(dict) {
    return dict.show;
  };
  var showArray = function(dictShow) {
    return {
      show: showArrayImpl(show(dictShow))
    };
  };
  var showRecordFieldsCons = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictShowRecordFields) {
      var showRecordFields1 = showRecordFields(dictShowRecordFields);
      return function(dictShow) {
        var show113 = show(dictShow);
        return {
          showRecordFields: function(v2) {
            return function(record2) {
              var tail3 = showRecordFields1($$Proxy.value)(record2);
              var key2 = reflectSymbol2($$Proxy.value);
              var focus3 = unsafeGet(key2)(record2);
              return " " + (key2 + (": " + (show113(focus3) + ("," + tail3))));
            };
          }
        };
      };
    };
  };
  var showRecordFieldsConsNil = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictShow) {
      var show113 = show(dictShow);
      return {
        showRecordFields: function(v2) {
          return function(record2) {
            var key2 = reflectSymbol2($$Proxy.value);
            var focus3 = unsafeGet(key2)(record2);
            return " " + (key2 + (": " + (show113(focus3) + " ")));
          };
        }
      };
    };
  };

  // output/Data.Generic.Rep/index.js
  var Inl = /* @__PURE__ */ function() {
    function Inl2(value0) {
      this.value0 = value0;
    }
    ;
    Inl2.create = function(value0) {
      return new Inl2(value0);
    };
    return Inl2;
  }();
  var Inr = /* @__PURE__ */ function() {
    function Inr2(value0) {
      this.value0 = value0;
    }
    ;
    Inr2.create = function(value0) {
      return new Inr2(value0);
    };
    return Inr2;
  }();
  var Product = /* @__PURE__ */ function() {
    function Product3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Product3.create = function(value0) {
      return function(value1) {
        return new Product3(value0, value1);
      };
    };
    return Product3;
  }();
  var NoArguments = /* @__PURE__ */ function() {
    function NoArguments2() {
    }
    ;
    NoArguments2.value = new NoArguments2();
    return NoArguments2;
  }();
  var Constructor = function(x2) {
    return x2;
  };
  var Argument = function(x2) {
    return x2;
  };
  var to = function(dict) {
    return dict.to;
  };
  var from = function(dict) {
    return dict.from;
  };

  // output/Data.Maybe/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var semigroupMaybe = function(dictSemigroup) {
    var append113 = append(dictSemigroup);
    return {
      append: function(v2) {
        return function(v1) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v1 instanceof Nothing) {
            return v2;
          }
          ;
          if (v2 instanceof Just && v1 instanceof Just) {
            return new Just(append113(v2.value0)(v1.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): " + [v2.constructor.name, v1.constructor.name]);
        };
      }
    };
  };
  var monoidMaybe = function(dictSemigroup) {
    var semigroupMaybe1 = semigroupMaybe(dictSemigroup);
    return {
      mempty: Nothing.value,
      Semigroup0: function() {
        return semigroupMaybe1;
      }
    };
  };
  var maybe$prime = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Nothing) {
          return v2(unit);
        }
        ;
        if (v22 instanceof Just) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var maybe = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Nothing) {
          return v2;
        }
        ;
        if (v22 instanceof Just) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v2) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v2(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe$prime = function(a3) {
    return maybe$prime(a3)(identity4);
  };
  var fromMaybe = function(a3) {
    return maybe(a3)(identity4);
  };
  var fromJust = function() {
    return function(v2) {
      if (v2 instanceof Just) {
        return v2.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v2.constructor.name]);
    };
  };
  var eqMaybe = function(dictEq) {
    var eq25 = eq(dictEq);
    return {
      eq: function(x2) {
        return function(y2) {
          if (x2 instanceof Nothing && y2 instanceof Nothing) {
            return true;
          }
          ;
          if (x2 instanceof Just && y2 instanceof Just) {
            return eq25(x2.value0)(y2.value0);
          }
          ;
          return false;
        };
      }
    };
  };
  var applyMaybe = {
    apply: function(v2) {
      return function(v1) {
        if (v2 instanceof Just) {
          return map2(v2.value0)(v1);
        }
        ;
        if (v2 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v2) {
      return function(v1) {
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        if (v2 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  }();
  var altMaybe = {
    alt: function(v2) {
      return function(v1) {
        if (v2 instanceof Nothing) {
          return v1;
        }
        ;
        return v2;
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var plusMaybe = /* @__PURE__ */ function() {
    return {
      empty: Nothing.value,
      Alt0: function() {
        return altMaybe;
      }
    };
  }();
  var alternativeMaybe = {
    Applicative0: function() {
      return applicativeMaybe;
    },
    Plus1: function() {
      return plusMaybe;
    }
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ function() {
    function Left3(value0) {
      this.value0 = value0;
    }
    ;
    Left3.create = function(value0) {
      return new Left3(value0);
    };
    return Left3;
  }();
  var Right = /* @__PURE__ */ function() {
    function Right3(value0) {
      this.value0 = value0;
    }
    ;
    Right3.create = function(value0) {
      return new Right3(value0);
    };
    return Right3;
  }();
  var showEither = function(dictShow) {
    var show43 = show(dictShow);
    return function(dictShow1) {
      var show113 = show(dictShow1);
      return {
        show: function(v2) {
          if (v2 instanceof Left) {
            return "(Left " + (show43(v2.value0) + ")");
          }
          ;
          if (v2 instanceof Right) {
            return "(Right " + (show113(v2.value0) + ")");
          }
          ;
          throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [v2.constructor.name]);
        }
      };
    };
  };
  var note = function(a3) {
    return maybe(new Left(a3))(Right.create);
  };
  var functorEither = {
    map: function(f) {
      return function(m2) {
        if (m2 instanceof Left) {
          return new Left(m2.value0);
        }
        ;
        if (m2 instanceof Right) {
          return new Right(f(m2.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m2.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var fromLeft = function(v2) {
    return function(v1) {
      if (v1 instanceof Left) {
        return v1.value0;
      }
      ;
      return v2;
    };
  };
  var either = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Left) {
          return v2(v22.value0);
        }
        ;
        if (v22 instanceof Right) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var isLeft = /* @__PURE__ */ either(/* @__PURE__ */ $$const(true))(/* @__PURE__ */ $$const(false));
  var isRight = /* @__PURE__ */ either(/* @__PURE__ */ $$const(false))(/* @__PURE__ */ $$const(true));
  var applyEither = {
    apply: function(v2) {
      return function(v1) {
        if (v2 instanceof Left) {
          return new Left(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return map3(v2.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };
  var bindEither = {
    bind: /* @__PURE__ */ either(function(e) {
      return function(v2) {
        return new Left(e);
      };
    })(function(a3) {
      return function(f) {
        return f(a3);
      };
    }),
    Apply0: function() {
      return applyEither;
    }
  };
  var applicativeEither = /* @__PURE__ */ function() {
    return {
      pure: Right.create,
      Apply0: function() {
        return applyEither;
      }
    };
  }();
  var monadEither = {
    Applicative0: function() {
      return applicativeEither;
    },
    Bind1: function() {
      return bindEither;
    }
  };

  // output/Data.Identity/index.js
  var Identity = function(x2) {
    return x2;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m2) {
        return f(m2);
      };
    }
  };
  var applyIdentity = {
    apply: function(v2) {
      return function(v1) {
        return v2(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v2) {
      return function(f) {
        return f(v2);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x2) {
    return Math.min(Math.abs(x2), 2147483647);
  };
  var intDiv = function(x2) {
    return function(y2) {
      if (y2 === 0)
        return 0;
      return y2 > 0 ? Math.floor(x2 / y2) : -Math.floor(x2 / -y2);
    };
  };
  var intMod = function(x2) {
    return function(y2) {
      if (y2 === 0)
        return 0;
      var yy = Math.abs(y2);
      return (x2 % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Monoid/index.js
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var div2 = /* @__PURE__ */ div(euclideanRingInt);
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var monoidOrdering = /* @__PURE__ */ function() {
    return {
      mempty: EQ.value,
      Semigroup0: function() {
        return semigroupOrdering;
      }
    };
  }();
  var monoidArray = {
    mempty: [],
    Semigroup0: function() {
      return semigroupArray;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };
  var monoidFn = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var semigroupFn2 = semigroupFn(dictMonoid.Semigroup0());
    return {
      mempty: function(v2) {
        return mempty1;
      },
      Semigroup0: function() {
        return semigroupFn2;
      }
    };
  };
  var power = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var append22 = append(dictMonoid.Semigroup0());
    return function(x2) {
      var go2 = function(p2) {
        if (p2 <= 0) {
          return mempty1;
        }
        ;
        if (p2 === 1) {
          return x2;
        }
        ;
        if (mod2(p2)(2) === 0) {
          var x$prime = go2(div2(p2)(2));
          return append22(x$prime)(x$prime);
        }
        ;
        if (otherwise) {
          var x$prime = go2(div2(p2)(2));
          return append22(x$prime)(append22(x$prime)(x2));
        }
        ;
        throw new Error("Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): " + [p2.constructor.name]);
      };
      return go2;
    };
  };

  // output/Effect/foreign.js
  var pureE = function(a3) {
    return function() {
      return a3;
    };
  };
  var bindE = function(a3) {
    return function(f) {
      return function() {
        return f(a3())();
      };
    };
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);
  var applyEffect = /* @__PURE__ */ $lazy_applyEffect(23);

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read2 = function(ref3) {
    return function() {
      return ref3.value;
    };
  };
  var modifyImpl2 = function(f) {
    return function(ref3) {
      return function() {
        var t2 = f(ref3.value);
        ref3.value = t2.state;
        return t2.value;
      };
    };
  };
  var write2 = function(val) {
    return function(ref3) {
      return function() {
        ref3.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl2;
  var modify = function(f) {
    return modify$prime(function(s2) {
      var s$prime = f(s2);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_ = function(f) {
    return function(s2) {
      return $$void2(modify(f)(s2));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  }();
  var Done = /* @__PURE__ */ function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  }();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a3) {
        var fromDone = function(v2) {
          if (v2 instanceof Done) {
            return v2.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): " + [v2.constructor.name]);
        };
        return function __do5() {
          var r = bindFlipped2($$new)(f(a3))();
          (function() {
            while (!function __do6() {
              var v2 = read2(r)();
              if (v2 instanceof Loop) {
                var e = f(v2.value0)();
                write2(e)(r)();
                return false;
              }
              ;
              if (v2 instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): " + [v2.constructor.name]);
            }()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read2(r))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };

  // output/Control.Monad.ST.Internal/index.js
  var $runtime_lazy2 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var modify$prime2 = modifyImpl;
  var modify2 = function(f) {
    return modify$prime2(function(s2) {
      var s$prime = f(s2);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var functorST = {
    map: map_
  };
  var monadST = {
    Applicative0: function() {
      return applicativeST;
    },
    Bind1: function() {
      return bindST;
    }
  };
  var bindST = {
    bind: bind_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var applicativeST = {
    pure: pure_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var $lazy_applyST = /* @__PURE__ */ $runtime_lazy2("applyST", "Control.Monad.ST.Internal", function() {
    return {
      apply: ap(monadST),
      Functor0: function() {
        return functorST;
      }
    };
  });
  var applyST = /* @__PURE__ */ $lazy_applyST(47);

  // output/Control.Lazy/index.js
  var $runtime_lazy3 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var defer = function(dict) {
    return dict.defer;
  };
  var fix = function(dictLazy) {
    var defer1 = defer(dictLazy);
    return function(f) {
      var $lazy_go = $runtime_lazy3("go", "Control.Lazy", function() {
        return defer1(function(v2) {
          return f($lazy_go(25));
        });
      });
      var go2 = $lazy_go(25);
      return go2;
    };
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a3) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a3))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj12 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
      ff: function(v2) {
        return ff1;
      },
      tt: function(v2) {
        return tt1;
      },
      implies: function(f) {
        return function(g2) {
          return function(a3) {
            return implies1(f(a3))(g2(a3));
          };
        };
      },
      conj: function(f) {
        return function(g2) {
          return function(a3) {
            return conj12(f(a3))(g2(a3));
          };
        };
      },
      disj: function(f) {
        return function(g2) {
          return function(a3) {
            return disj1(f(a3))(g2(a3));
          };
        };
      },
      not: function(f) {
        return function(a3) {
          return not1(f(a3));
        };
      }
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  }();
  var uncurry = function(f) {
    return function(v2) {
      return f(v2.value0)(v2.value1);
    };
  };
  var snd = function(v2) {
    return v2.value1;
  };
  var showTuple = function(dictShow) {
    var show43 = show(dictShow);
    return function(dictShow1) {
      var show113 = show(dictShow1);
      return {
        show: function(v2) {
          return "(Tuple " + (show43(v2.value0) + (" " + (show113(v2.value1) + ")")));
        }
      };
    };
  };
  var semiringTuple = function(dictSemiring) {
    var add3 = add(dictSemiring);
    var one5 = one(dictSemiring);
    var mul4 = mul(dictSemiring);
    var zero10 = zero(dictSemiring);
    return function(dictSemiring1) {
      var add1 = add(dictSemiring1);
      var mul1 = mul(dictSemiring1);
      return {
        add: function(v2) {
          return function(v1) {
            return new Tuple(add3(v2.value0)(v1.value0), add1(v2.value1)(v1.value1));
          };
        },
        one: new Tuple(one5, one(dictSemiring1)),
        mul: function(v2) {
          return function(v1) {
            return new Tuple(mul4(v2.value0)(v1.value0), mul1(v2.value1)(v1.value1));
          };
        },
        zero: new Tuple(zero10, zero(dictSemiring1))
      };
    };
  };
  var semigroupTuple = function(dictSemigroup) {
    var append113 = append(dictSemigroup);
    return function(dictSemigroup1) {
      var append22 = append(dictSemigroup1);
      return {
        append: function(v2) {
          return function(v1) {
            return new Tuple(append113(v2.value0)(v1.value0), append22(v2.value1)(v1.value1));
          };
        }
      };
    };
  };
  var ringTuple = function(dictRing) {
    var sub4 = sub(dictRing);
    var semiringTuple1 = semiringTuple(dictRing.Semiring0());
    return function(dictRing1) {
      var sub14 = sub(dictRing1);
      var semiringTuple2 = semiringTuple1(dictRing1.Semiring0());
      return {
        sub: function(v2) {
          return function(v1) {
            return new Tuple(sub4(v2.value0)(v1.value0), sub14(v2.value1)(v1.value1));
          };
        },
        Semiring0: function() {
          return semiringTuple2;
        }
      };
    };
  };
  var monoidTuple = function(dictMonoid) {
    var mempty4 = mempty(dictMonoid);
    var semigroupTuple1 = semigroupTuple(dictMonoid.Semigroup0());
    return function(dictMonoid1) {
      var semigroupTuple2 = semigroupTuple1(dictMonoid1.Semigroup0());
      return {
        mempty: new Tuple(mempty4, mempty(dictMonoid1)),
        Semigroup0: function() {
          return semigroupTuple2;
        }
      };
    };
  };
  var functorTuple = {
    map: function(f) {
      return function(m2) {
        return new Tuple(m2.value0, f(m2.value1));
      };
    }
  };
  var fst = function(v2) {
    return v2.value0;
  };
  var eqTuple = function(dictEq) {
    var eq25 = eq(dictEq);
    return function(dictEq1) {
      var eq113 = eq(dictEq1);
      return {
        eq: function(x2) {
          return function(y2) {
            return eq25(x2.value0)(y2.value0) && eq113(x2.value1)(y2.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare10 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare16 = compare(dictOrd1);
      var eqTuple2 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x2) {
          return function(y2) {
            var v2 = compare10(x2.value0)(y2.value0);
            if (v2 instanceof LT) {
              return LT.value;
            }
            ;
            if (v2 instanceof GT) {
              return GT.value;
            }
            ;
            return compare16(x2.value1)(y2.value1);
          };
        },
        Eq0: function() {
          return eqTuple2;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var put = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(s2) {
      return state1(function(v2) {
        return new Tuple(unit, s2);
      });
    };
  };
  var modify_2 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s2) {
        return new Tuple(unit, f(s2));
      });
    };
  };
  var modify3 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s2) {
        var s$prime = f(s2);
        return new Tuple(s$prime, s$prime);
      });
    };
  };
  var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s2) {
        return new Tuple(f(s2), s2);
      });
    };
  };
  var get = function(dictMonadState) {
    return state(dictMonadState)(function(s2) {
      return new Tuple(s2, s2);
    });
  };

  // output/Control.Monad.Trans.Class/index.js
  var lift = function(dict) {
    return dict.lift;
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var monadThrowEither = /* @__PURE__ */ function() {
    return {
      throwError: Left.create,
      Monad0: function() {
        return monadEither;
      }
    };
  }();
  var monadErrorEither = {
    catchError: function(v2) {
      return function(v1) {
        if (v2 instanceof Left) {
          return v1(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return new Right(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    MonadThrow0: function() {
      return monadThrowEither;
    }
  };
  var liftEither = function(dictMonadThrow) {
    return either(throwError(dictMonadThrow))(pure(dictMonadThrow.Monad0().Applicative0()));
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map65 = map(Monad0.Bind1().Apply0().Functor0());
    var pure41 = pure(Monad0.Applicative0());
    return function(a3) {
      return catchError1(map65(Right.create)(a3))(function($52) {
        return pure41(Left.create($52));
      });
    };
  };

  // output/Control.Monad.Writer.Class/index.js
  var tell = function(dict) {
    return dict.tell;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x2) {
    return x2;
  };
  var runExceptT = function(v2) {
    return v2;
  };
  var mapExceptT = function(f) {
    return function(v2) {
      return f(v2);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map123(map5(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var pure41 = pure(dictMonad.Applicative0());
    return {
      bind: function(v2) {
        return function(k) {
          return bind40(v2)(either(function($193) {
            return pure41(Left.create($193));
          })(function(a3) {
            var v1 = k(a3);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: function() {
        var $194 = pure(dictMonad.Applicative0());
        return function($195) {
          return ExceptT($194(Right.create($195)));
        };
      }(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: function() {
        var $204 = pure(dictMonad.Applicative0());
        return function($205) {
          return ExceptT($204(Left.create($205)));
        };
      }(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var monadErrorExceptT = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var pure41 = pure(dictMonad.Applicative0());
    var monadThrowExceptT1 = monadThrowExceptT(dictMonad);
    return {
      catchError: function(v2) {
        return function(k) {
          return bind40(v2)(either(function(a3) {
            var v1 = k(a3);
            return v1;
          })(function($206) {
            return pure41(Right.create($206));
          }));
        };
      },
      MonadThrow0: function() {
        return monadThrowExceptT1;
      }
    };
  };

  // output/Data.Lazy/foreign.js
  var defer2 = function(thunk4) {
    var v2 = null;
    return function() {
      if (thunk4 === void 0)
        return v2;
      v2 = thunk4();
      thunk4 = void 0;
      return v2;
    };
  };
  var force = function(l2) {
    return l2();
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init4) {
      return function(xs) {
        var acc = init4;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init4) {
      return function(xs) {
        var acc = init4;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Control.Plus/index.js
  var empty = function(dict) {
    return dict.empty;
  };

  // output/Control.Comonad/index.js
  var extract = function(dict) {
    return dict.extract;
  };

  // output/Data.Bifunctor/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var bimap = function(dict) {
    return dict.bimap;
  };
  var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
      return bimap1(f)(identity5);
    };
  };
  var bifunctorTuple = {
    bimap: function(f) {
      return function(g2) {
        return function(v2) {
          return new Tuple(f(v2.value0), g2(v2.value1));
        };
      };
    }
  };
  var bifunctorEither = {
    bimap: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Left) {
            return new Left(v2(v22.value0));
          }
          ;
          if (v22 instanceof Right) {
            return new Right(v1(v22.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    }
  };

  // output/Data.Maybe.First/index.js
  var First = function(x2) {
    return x2;
  };
  var semigroupFirst = {
    append: function(v2) {
      return function(v1) {
        if (v2 instanceof Just) {
          return v2;
        }
        ;
        return v1;
      };
    }
  };
  var monoidFirst = /* @__PURE__ */ function() {
    return {
      mempty: Nothing.value,
      Semigroup0: function() {
        return semigroupFirst;
      }
    };
  }();

  // output/Data.Monoid.Conj/index.js
  var Conj = function(x2) {
    return x2;
  };
  var semigroupConj = function(dictHeytingAlgebra) {
    var conj3 = conj(dictHeytingAlgebra);
    return {
      append: function(v2) {
        return function(v1) {
          return conj3(v2)(v1);
        };
      }
    };
  };
  var monoidConj = function(dictHeytingAlgebra) {
    var semigroupConj1 = semigroupConj(dictHeytingAlgebra);
    return {
      mempty: tt(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupConj1;
      }
    };
  };

  // output/Data.Monoid.Disj/index.js
  var Disj = function(x2) {
    return x2;
  };
  var semigroupDisj = function(dictHeytingAlgebra) {
    var disj3 = disj(dictHeytingAlgebra);
    return {
      append: function(v2) {
        return function(v1) {
          return disj3(v2)(v1);
        };
      }
    };
  };
  var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
      mempty: ff(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupDisj1;
      }
    };
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var wrap = function() {
    return coerce2;
  };
  var unwrap = function() {
    return coerce2;
  };
  var under = function() {
    return function() {
      return function(v2) {
        return coerce2;
      };
    };
  };
  var over = function() {
    return function() {
      return function(v2) {
        return coerce2;
      };
    };
  };
  var alaF = function() {
    return function() {
      return function() {
        return function() {
          return function(v2) {
            return coerce2;
          };
        };
      };
    };
  };

  // output/Data.Foldable/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var unwrap2 = /* @__PURE__ */ unwrap();
  var alaF2 = /* @__PURE__ */ alaF()()()();
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond2 = applySecond(dictApplicative.Apply0());
    var pure41 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond2(f($454));
        })(pure41(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_16 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_16(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var indexl = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(idx) {
      var go2 = function(cursor) {
        return function(a3) {
          if (cursor.elem instanceof Just) {
            return cursor;
          }
          ;
          var $296 = cursor.pos === idx;
          if ($296) {
            return {
              elem: new Just(a3),
              pos: cursor.pos
            };
          }
          ;
          return {
            pos: cursor.pos + 1 | 0,
            elem: cursor.elem
          };
        };
      };
      var $455 = foldl22(go2)({
        elem: Nothing.value,
        pos: 0
      });
      return function($456) {
        return function(v2) {
          return v2.elem;
        }($455($456));
      };
    };
  };
  var intercalate = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty4 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v2) {
            return function(v1) {
              if (v2.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append22(v2.acc)(append22(sep)(v1))
              };
            };
          };
          return foldl22(go2)({
            init: true,
            acc: mempty4
          })(xs).acc;
        };
      };
    };
  };
  var length = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      var add1 = add(dictSemiring);
      var one5 = one(dictSemiring);
      return foldl22(function(c2) {
        return function(v2) {
          return add1(one5)(c2);
        };
      })(zero(dictSemiring));
    };
  };
  var foldableMaybe = {
    foldr: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Nothing) {
            return v1;
          }
          ;
          if (v22 instanceof Just) {
            return v2(v22.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldl: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Nothing) {
            return v1;
          }
          ;
          if (v22 instanceof Just) {
            return v2(v1)(v22.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty4 = mempty(dictMonoid);
      return function(v2) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty4;
          }
          ;
          if (v1 instanceof Just) {
            return v2(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v2.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldableEither = {
    foldr: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Left) {
            return v1;
          }
          ;
          if (v22 instanceof Right) {
            return v2(v22.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldl: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Left) {
            return v1;
          }
          ;
          if (v22 instanceof Right) {
            return v2(v1)(v22.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty4 = mempty(dictMonoid);
      return function(v2) {
        return function(v1) {
          if (v1 instanceof Left) {
            return mempty4;
          }
          ;
          if (v1 instanceof Right) {
            return v2(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v2.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty4 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x2) {
          return function(acc) {
            return append22(f(x2))(acc);
          };
        })(mempty4);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var lookup = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable)(monoidFirst);
    return function(dictEq) {
      var eq25 = eq(dictEq);
      return function(a3) {
        var $460 = foldMap22(function(v2) {
          var $444 = eq25(a3)(v2.value0);
          if ($444) {
            return new Just(v2.value1);
          }
          ;
          return Nothing.value;
        });
        return function($461) {
          return unwrap2($460($461));
        };
      };
    };
  };
  var fold = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictMonoid) {
      return foldMap22(dictMonoid)(identity6);
    };
  };
  var find = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(p2) {
      var go2 = function(v2) {
        return function(v1) {
          if (v2 instanceof Nothing && p2(v1)) {
            return new Just(v1);
          }
          ;
          return v2;
        };
      };
      return foldl22(go2)(Nothing.value);
    };
  };
  var any = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Disj)(foldMap22(monoidDisj(dictHeytingAlgebra)));
    };
  };
  var elem = function(dictFoldable) {
    var any1 = any(dictFoldable)(heytingAlgebraBoolean);
    return function(dictEq) {
      var $462 = eq(dictEq);
      return function($463) {
        return any1($462($463));
      };
    };
  };
  var all = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Conj)(foldMap22(monoidConj(dictHeytingAlgebra)));
    };
  };
  var and = function(dictFoldable) {
    var all1 = all(dictFoldable);
    return function(dictHeytingAlgebra) {
      return all1(dictHeytingAlgebra)(identity6);
    };
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = function() {
    function array1(a3) {
      return [a3];
    }
    function array2(a3) {
      return function(b2) {
        return [a3, b2];
      };
    }
    function array3(a3) {
      return function(b2) {
        return function(c2) {
          return [a3, b2, c2];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply8) {
      return function(map65) {
        return function(pure41) {
          return function(f) {
            return function(array) {
              function go2(bot, top3) {
                switch (top3 - bot) {
                  case 0:
                    return pure41([]);
                  case 1:
                    return map65(array1)(f(array[bot]));
                  case 2:
                    return apply8(map65(array2)(f(array[bot])))(f(array[bot + 1]));
                  case 3:
                    return apply8(apply8(map65(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top3 - bot) / 4) * 2;
                    return apply8(map65(concat2)(go2(bot, pivot)))(go2(pivot, top3));
                }
              }
              return go2(0, array.length);
            };
          };
        };
      };
    };
  }();

  // output/Data.Monoid.Additive/index.js
  var Additive = function(x2) {
    return x2;
  };
  var semigroupAdditive = function(dictSemiring) {
    var add3 = add(dictSemiring);
    return {
      append: function(v2) {
        return function(v1) {
          return add3(v2)(v1);
        };
      }
    };
  };
  var monoidAdditive = function(dictSemiring) {
    var semigroupAdditive1 = semigroupAdditive(dictSemiring);
    return {
      mempty: zero(dictSemiring),
      Semigroup0: function() {
        return semigroupAdditive1;
      }
    };
  };

  // output/Data.Traversable/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var traversableMaybe = {
    traverse: function(dictApplicative) {
      var pure41 = pure(dictApplicative);
      var map65 = map(dictApplicative.Apply0().Functor0());
      return function(v2) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return pure41(Nothing.value);
          }
          ;
          if (v1 instanceof Just) {
            return map65(Just.create)(v2(v1.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v2.constructor.name, v1.constructor.name]);
        };
      };
    },
    sequence: function(dictApplicative) {
      var pure41 = pure(dictApplicative);
      var map65 = map(dictApplicative.Apply0().Functor0());
      return function(v2) {
        if (v2 instanceof Nothing) {
          return pure41(Nothing.value);
        }
        ;
        if (v2 instanceof Just) {
          return map65(Just.create)(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v2.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    },
    Foldable1: function() {
      return foldableMaybe;
    }
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity7);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };
  var sequence = function(dict) {
    return dict.sequence;
  };
  var $$for = function(dictApplicative) {
    return function(dictTraversable) {
      var traverse22 = traverse(dictTraversable)(dictApplicative);
      return function(x2) {
        return function(f) {
          return traverse22(f)(x2);
        };
      };
    };
  };

  // output/Data.Lazy/index.js
  var lazyLazy = {
    defer: function(f) {
      return defer2(function(v2) {
        return force(f(unit));
      });
    }
  };

  // output/Control.Monad.Maybe.Trans/index.js
  var map6 = /* @__PURE__ */ map(functorMaybe);
  var MaybeT = function(x2) {
    return x2;
  };
  var runMaybeT = function(v2) {
    return v2;
  };
  var monadTransMaybeT = {
    lift: function(dictMonad) {
      var $163 = liftM1(dictMonad)(Just.create);
      return function($164) {
        return MaybeT($163($164));
      };
    }
  };
  var lift3 = /* @__PURE__ */ lift(monadTransMaybeT);
  var functorMaybeT = function(dictFunctor) {
    var map123 = map(dictFunctor);
    return {
      map: function(f) {
        return function(v2) {
          return map123(map6(f))(v2);
        };
      }
    };
  };
  var monadMaybeT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeMaybeT(dictMonad);
      },
      Bind1: function() {
        return bindMaybeT(dictMonad);
      }
    };
  };
  var bindMaybeT = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    var pure41 = pure(dictMonad.Applicative0());
    return {
      bind: function(v2) {
        return function(f) {
          return bind40(v2)(function(v1) {
            if (v1 instanceof Nothing) {
              return pure41(Nothing.value);
            }
            ;
            if (v1 instanceof Just) {
              var v22 = f(v1.value0);
              return v22;
            }
            ;
            throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 55, column 11 - line 57, column 42): " + [v1.constructor.name]);
          });
        };
      },
      Apply0: function() {
        return applyMaybeT(dictMonad);
      }
    };
  };
  var applyMaybeT = function(dictMonad) {
    var functorMaybeT1 = functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadMaybeT(dictMonad)),
      Functor0: function() {
        return functorMaybeT1;
      }
    };
  };
  var applicativeMaybeT = function(dictMonad) {
    return {
      pure: function() {
        var $165 = pure(dictMonad.Applicative0());
        return function($166) {
          return MaybeT($165(Just.create($166)));
        };
      }(),
      Apply0: function() {
        return applyMaybeT(dictMonad);
      }
    };
  };
  var monadEffectMaybe = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
      liftEffect: function() {
        var $167 = lift3(Monad0);
        var $168 = liftEffect(dictMonadEffect);
        return function($169) {
          return $167($168($169));
        };
      }(),
      Monad0: function() {
        return monadMaybeT1;
      }
    };
  };
  var monadStateMaybeT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var lift1 = lift3(Monad0);
    var state3 = state(dictMonadState);
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
      state: function(f) {
        return lift1(state3(f));
      },
      Monad0: function() {
        return monadMaybeT1;
      }
    };
  };

  // output/Control.Monad.Reader.Trans/index.js
  var ReaderT = function(x2) {
    return x2;
  };
  var withReaderT = function(f) {
    return function(v2) {
      return function($152) {
        return v2(f($152));
      };
    };
  };
  var runReaderT = function(v2) {
    return v2;
  };
  var monadTransReaderT = {
    lift: function(dictMonad) {
      return function($153) {
        return ReaderT($$const($153));
      };
    }
  };
  var lift4 = /* @__PURE__ */ lift(monadTransReaderT);
  var mapReaderT = function(f) {
    return function(v2) {
      return function($154) {
        return f(v2($154));
      };
    };
  };
  var functorReaderT = function(dictFunctor) {
    return {
      map: function() {
        var $155 = map(dictFunctor);
        return function($156) {
          return mapReaderT($155($156));
        };
      }()
    };
  };
  var applyReaderT = function(dictApply) {
    var apply8 = apply(dictApply);
    var functorReaderT1 = functorReaderT(dictApply.Functor0());
    return {
      apply: function(v2) {
        return function(v1) {
          return function(r) {
            return apply8(v2(r))(v1(r));
          };
        };
      },
      Functor0: function() {
        return functorReaderT1;
      }
    };
  };
  var bindReaderT = function(dictBind) {
    var bind40 = bind(dictBind);
    var applyReaderT1 = applyReaderT(dictBind.Apply0());
    return {
      bind: function(v2) {
        return function(k) {
          return function(r) {
            return bind40(v2(r))(function(a3) {
              var v1 = k(a3);
              return v1(r);
            });
          };
        };
      },
      Apply0: function() {
        return applyReaderT1;
      }
    };
  };
  var applicativeReaderT = function(dictApplicative) {
    var applyReaderT1 = applyReaderT(dictApplicative.Apply0());
    return {
      pure: function() {
        var $160 = pure(dictApplicative);
        return function($161) {
          return ReaderT($$const($160($161)));
        };
      }(),
      Apply0: function() {
        return applyReaderT1;
      }
    };
  };
  var monadReaderT = function(dictMonad) {
    var applicativeReaderT1 = applicativeReaderT(dictMonad.Applicative0());
    var bindReaderT1 = bindReaderT(dictMonad.Bind1());
    return {
      Applicative0: function() {
        return applicativeReaderT1;
      },
      Bind1: function() {
        return bindReaderT1;
      }
    };
  };
  var monadAskReaderT = function(dictMonad) {
    var monadReaderT1 = monadReaderT(dictMonad);
    return {
      ask: pure(dictMonad.Applicative0()),
      Monad0: function() {
        return monadReaderT1;
      }
    };
  };
  var monadReaderReaderT = function(dictMonad) {
    var monadAskReaderT1 = monadAskReaderT(dictMonad);
    return {
      local: withReaderT,
      MonadAsk0: function() {
        return monadAskReaderT1;
      }
    };
  };
  var monadEffectReader = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadReaderT1 = monadReaderT(Monad0);
    return {
      liftEffect: function() {
        var $163 = lift4(Monad0);
        var $164 = liftEffect(dictMonadEffect);
        return function($165) {
          return $163($164($165));
        };
      }(),
      Monad0: function() {
        return monadReaderT1;
      }
    };
  };
  var monadStateReaderT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var monadReaderT1 = monadReaderT(Monad0);
    return {
      state: function() {
        var $166 = lift4(Monad0);
        var $167 = state(dictMonadState);
        return function($168) {
          return $166($167($168));
        };
      }(),
      Monad0: function() {
        return monadReaderT1;
      }
    };
  };

  // output/Control.Monad.State.Trans/index.js
  var runStateT = function(v2) {
    return v2;
  };
  var monadTransStateT = {
    lift: function(dictMonad) {
      var bind40 = bind(dictMonad.Bind1());
      var pure41 = pure(dictMonad.Applicative0());
      return function(m2) {
        return function(s2) {
          return bind40(m2)(function(x2) {
            return pure41(new Tuple(x2, s2));
          });
        };
      };
    }
  };
  var lift5 = /* @__PURE__ */ lift(monadTransStateT);
  var functorStateT = function(dictFunctor) {
    var map65 = map(dictFunctor);
    return {
      map: function(f) {
        return function(v2) {
          return function(s2) {
            return map65(function(v1) {
              return new Tuple(f(v1.value0), v1.value1);
            })(v2(s2));
          };
        };
      }
    };
  };
  var evalStateT = function(dictFunctor) {
    var map65 = map(dictFunctor);
    return function(v2) {
      return function(s2) {
        return map65(fst)(v2(s2));
      };
    };
  };
  var monadStateT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeStateT(dictMonad);
      },
      Bind1: function() {
        return bindStateT(dictMonad);
      }
    };
  };
  var bindStateT = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    return {
      bind: function(v2) {
        return function(f) {
          return function(s2) {
            return bind40(v2(s2))(function(v1) {
              var v3 = f(v1.value0);
              return v3(v1.value1);
            });
          };
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var applyStateT = function(dictMonad) {
    var functorStateT1 = functorStateT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadStateT(dictMonad)),
      Functor0: function() {
        return functorStateT1;
      }
    };
  };
  var applicativeStateT = function(dictMonad) {
    var pure41 = pure(dictMonad.Applicative0());
    return {
      pure: function(a3) {
        return function(s2) {
          return pure41(new Tuple(a3, s2));
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var monadStateStateT = function(dictMonad) {
    var pure41 = pure(dictMonad.Applicative0());
    var monadStateT1 = monadStateT(dictMonad);
    return {
      state: function(f) {
        return function($206) {
          return pure41(f($206));
        };
      },
      Monad0: function() {
        return monadStateT1;
      }
    };
  };
  var monadThrowStateT = function(dictMonadThrow) {
    var Monad0 = dictMonadThrow.Monad0();
    var lift1 = lift5(Monad0);
    var throwError5 = throwError(dictMonadThrow);
    var monadStateT1 = monadStateT(Monad0);
    return {
      throwError: function(e) {
        return lift1(throwError5(e));
      },
      Monad0: function() {
        return monadStateT1;
      }
    };
  };
  var monadErrorStateT = function(dictMonadError) {
    var catchError2 = catchError(dictMonadError);
    var monadThrowStateT1 = monadThrowStateT(dictMonadError.MonadThrow0());
    return {
      catchError: function(v2) {
        return function(h7) {
          return function(s2) {
            return catchError2(v2(s2))(function(e) {
              var v1 = h7(e);
              return v1(s2);
            });
          };
        };
      },
      MonadThrow0: function() {
        return monadThrowStateT1;
      }
    };
  };

  // output/Control.Monad.Writer.Trans/index.js
  var WriterT = function(x2) {
    return x2;
  };
  var runWriterT = function(v2) {
    return v2;
  };
  var monadTransWriterT = function(dictMonoid) {
    var mempty4 = mempty(dictMonoid);
    return {
      lift: function(dictMonad) {
        var bind40 = bind(dictMonad.Bind1());
        var pure41 = pure(dictMonad.Applicative0());
        return function(m2) {
          return bind40(m2)(function(a3) {
            return pure41(new Tuple(a3, mempty4));
          });
        };
      }
    };
  };
  var mapWriterT = function(f) {
    return function(v2) {
      return f(v2);
    };
  };
  var functorWriterT = function(dictFunctor) {
    var map65 = map(dictFunctor);
    return {
      map: function(f) {
        return mapWriterT(map65(function(v2) {
          return new Tuple(f(v2.value0), v2.value1);
        }));
      }
    };
  };
  var execWriterT = function(dictFunctor) {
    var map65 = map(dictFunctor);
    return function(v2) {
      return map65(snd)(v2);
    };
  };
  var applyWriterT = function(dictSemigroup) {
    var append22 = append(dictSemigroup);
    return function(dictApply) {
      var apply8 = apply(dictApply);
      var Functor0 = dictApply.Functor0();
      var map65 = map(Functor0);
      var functorWriterT1 = functorWriterT(Functor0);
      return {
        apply: function(v2) {
          return function(v1) {
            var k = function(v3) {
              return function(v4) {
                return new Tuple(v3.value0(v4.value0), append22(v3.value1)(v4.value1));
              };
            };
            return apply8(map65(k)(v2))(v1);
          };
        },
        Functor0: function() {
          return functorWriterT1;
        }
      };
    };
  };
  var bindWriterT = function(dictSemigroup) {
    var append22 = append(dictSemigroup);
    var applyWriterT1 = applyWriterT(dictSemigroup);
    return function(dictBind) {
      var bind40 = bind(dictBind);
      var Apply0 = dictBind.Apply0();
      var map65 = map(Apply0.Functor0());
      var applyWriterT2 = applyWriterT1(Apply0);
      return {
        bind: function(v2) {
          return function(k) {
            return bind40(v2)(function(v1) {
              var v22 = k(v1.value0);
              return map65(function(v3) {
                return new Tuple(v3.value0, append22(v1.value1)(v3.value1));
              })(v22);
            });
          };
        },
        Apply0: function() {
          return applyWriterT2;
        }
      };
    };
  };
  var applicativeWriterT = function(dictMonoid) {
    var mempty4 = mempty(dictMonoid);
    var applyWriterT1 = applyWriterT(dictMonoid.Semigroup0());
    return function(dictApplicative) {
      var pure41 = pure(dictApplicative);
      var applyWriterT2 = applyWriterT1(dictApplicative.Apply0());
      return {
        pure: function(a3) {
          return pure41(new Tuple(a3, mempty4));
        },
        Apply0: function() {
          return applyWriterT2;
        }
      };
    };
  };
  var monadWriterT = function(dictMonoid) {
    var applicativeWriterT1 = applicativeWriterT(dictMonoid);
    var bindWriterT1 = bindWriterT(dictMonoid.Semigroup0());
    return function(dictMonad) {
      var applicativeWriterT22 = applicativeWriterT1(dictMonad.Applicative0());
      var bindWriterT22 = bindWriterT1(dictMonad.Bind1());
      return {
        Applicative0: function() {
          return applicativeWriterT22;
        },
        Bind1: function() {
          return bindWriterT22;
        }
      };
    };
  };
  var monadStateWriterT = function(dictMonoid) {
    var lift12 = lift(monadTransWriterT(dictMonoid));
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadState) {
      var Monad0 = dictMonadState.Monad0();
      var lift1 = lift12(Monad0);
      var state3 = state(dictMonadState);
      var monadWriterT2 = monadWriterT1(Monad0);
      return {
        state: function(f) {
          return lift1(state3(f));
        },
        Monad0: function() {
          return monadWriterT2;
        }
      };
    };
  };
  var monadTellWriterT = function(dictMonoid) {
    var Semigroup0 = dictMonoid.Semigroup0();
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonad) {
      var monadWriterT2 = monadWriterT1(dictMonad);
      return {
        tell: function() {
          var $262 = pure(dictMonad.Applicative0());
          var $263 = Tuple.create(unit);
          return function($264) {
            return WriterT($262($263($264)));
          };
        }(),
        Semigroup0: function() {
          return Semigroup0;
        },
        Monad1: function() {
          return monadWriterT2;
        }
      };
    };
  };

  // output/Data.JSDate/foreign.js
  function now() {
    return /* @__PURE__ */ new Date();
  }
  function dateMethodEff(method2, date2) {
    return function() {
      return date2[method2]();
    };
  }

  // output/Data.Enum/foreign.js
  function toCharCode(c2) {
    return c2.charCodeAt(0);
  }
  function fromCharCode(c2) {
    return String.fromCharCode(c2);
  }

  // output/Control.Alternative/index.js
  var guard = function(dictAlternative) {
    var pure41 = pure(dictAlternative.Applicative0());
    var empty10 = empty(dictAlternative.Plus1());
    return function(v2) {
      if (v2) {
        return pure41(unit);
      }
      ;
      if (!v2) {
        return empty10;
      }
      ;
      throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v2.constructor.name]);
    };
  };

  // output/Data.Unfoldable/foreign.js
  var unfoldrArrayImpl = function(isNothing2) {
    return function(fromJust8) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value14 = b2;
              while (true) {
                var maybe2 = f(value14);
                if (isNothing2(maybe2))
                  return result;
                var tuple = fromJust8(maybe2);
                result.push(fst2(tuple));
                value14 = snd2(tuple);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/foreign.js
  var unfoldr1ArrayImpl = function(isNothing2) {
    return function(fromJust8) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value14 = b2;
              while (true) {
                var tuple = f(value14);
                result.push(fst2(tuple));
                var maybe2 = snd2(tuple);
                if (isNothing2(maybe2))
                  return result;
                value14 = fromJust8(maybe2);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var unfoldr1 = function(dict) {
    return dict.unfoldr1;
  };
  var unfoldable1Array = {
    unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
  };
  var replicate1 = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
      return function(v2) {
        var step5 = function(i2) {
          if (i2 <= 0) {
            return new Tuple(v2, Nothing.value);
          }
          ;
          if (otherwise) {
            return new Tuple(v2, new Just(i2 - 1 | 0));
          }
          ;
          throw new Error("Failed pattern match at Data.Unfoldable1 (line 68, column 5 - line 68, column 39): " + [i2.constructor.name]);
        };
        return unfoldr11(step5)(n - 1 | 0);
      };
    };
  };
  var singleton = function(dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
  };

  // output/Data.Unfoldable/index.js
  var fromJust3 = /* @__PURE__ */ fromJust();
  var unfoldr = function(dict) {
    return dict.unfoldr;
  };
  var unfoldableArray = {
    unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
    Unfoldable10: function() {
      return unfoldable1Array;
    }
  };

  // output/Data.Enum/index.js
  var bind2 = /* @__PURE__ */ bind(bindMaybe);
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorMaybe);
  var guard2 = /* @__PURE__ */ guard(alternativeMaybe);
  var bottom1 = /* @__PURE__ */ bottom(boundedChar);
  var top1 = /* @__PURE__ */ top(boundedChar);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var succ = function(dict) {
    return dict.succ;
  };
  var pred = function(dict) {
    return dict.pred;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum12 = fromEnum(dictBoundedEnum);
    var bottom22 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x2) {
          var v2 = toEnum1(x2);
          if (v2 instanceof Just) {
            return v2.value0;
          }
          ;
          if (v2 instanceof Nothing) {
            var $140 = x2 < fromEnum12(bottom22);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v2.constructor.name]);
        };
      };
    };
  };
  var enumFromTo = function(dictEnum) {
    var Ord0 = dictEnum.Ord0();
    var eq113 = eq(Ord0.Eq0());
    var lessThan1 = lessThan(Ord0);
    var succ1 = succ(dictEnum);
    var lessThanOrEq1 = lessThanOrEq(Ord0);
    var pred1 = pred(dictEnum);
    var greaterThanOrEq1 = greaterThanOrEq(Ord0);
    return function(dictUnfoldable1) {
      var singleton12 = singleton(dictUnfoldable1);
      var unfoldr12 = unfoldr1(dictUnfoldable1);
      var go2 = function(step5) {
        return function(op) {
          return function(to3) {
            return function(a3) {
              return new Tuple(a3, bind2(step5(a3))(function(a$prime) {
                return voidLeft2(guard2(op(a$prime)(to3)))(a$prime);
              }));
            };
          };
        };
      };
      return function(v2) {
        return function(v1) {
          if (eq113(v2)(v1)) {
            return singleton12(v2);
          }
          ;
          if (lessThan1(v2)(v1)) {
            return unfoldr12(go2(succ1)(lessThanOrEq1)(v1))(v2);
          }
          ;
          if (otherwise) {
            return unfoldr12(go2(pred1)(greaterThanOrEq1)(v1))(v2);
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [v2.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a3) {
        return toEnum$prime(fromEnum$prime(a3) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a3) {
        return toEnum$prime(fromEnum$prime(a3) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v2) {
    if (v2 >= toCharCode(bottom1) && v2 <= toCharCode(top1)) {
      return new Just(fromCharCode(v2));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ function() {
    return {
      cardinality: toCharCode(top1) - toCharCode(bottom1) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  }();

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
  var toNumber = function(n) {
    return n;
  };
  var fromStringAsImpl = function(just) {
    return function(nothing) {
      return function(radix2) {
        var digits;
        if (radix2 < 11) {
          digits = "[0-" + (radix2 - 1).toString() + "]";
        } else if (radix2 === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix2) + "]";
        }
        var pattern2 = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function(s2) {
          if (pattern2.test(s2)) {
            var i2 = parseInt(s2, radix2);
            return (i2 | 0) === i2 ? just(i2) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
  var toStringAs = function(radix2) {
    return function(i2) {
      return i2.toString(radix2);
    };
  };

  // output/Data.Number/foreign.js
  var isFiniteImpl = isFinite;
  var atan2 = function(y2) {
    return function(x2) {
      return Math.atan2(y2, x2);
    };
  };
  var floor = Math.floor;
  var round = Math.round;

  // output/Data.Number/index.js
  var pi = 3.141592653589793;

  // output/Data.Int/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var radix = function(n) {
    if (n >= 2 && n <= 36) {
      return new Just(n);
    }
    ;
    if (otherwise) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 198, column 1 - line 198, column 28): " + [n.constructor.name]);
  };
  var hexadecimal = 16;
  var fromStringAs = /* @__PURE__ */ function() {
    return fromStringAsImpl(Just.create)(Nothing.value);
  }();
  var fromString = /* @__PURE__ */ fromStringAs(10);
  var fromNumber = /* @__PURE__ */ function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  }();
  var unsafeClamp = function(x2) {
    if (!isFiniteImpl(x2)) {
      return 0;
    }
    ;
    if (x2 >= toNumber(top2)) {
      return top2;
    }
    ;
    if (x2 <= toNumber(bottom2)) {
      return bottom2;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x2));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x2.constructor.name]);
  };
  var round2 = function($37) {
    return unsafeClamp(round($37));
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };
  var even = function(x2) {
    return (x2 & 1) === 0;
  };
  var decimal = 10;
  var binary = 2;

  // output/Foreign/foreign.js
  function typeOf(value14) {
    return typeof value14;
  }
  var isArray = Array.isArray || function(value14) {
    return Object.prototype.toString.call(value14) === "[object Array]";
  };

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l2 = xs.length;
      var result = Array(l2);
      for (var i2 = 0; i2 < l2; i2++) {
        result[i2] = f(i2)(xs[i2]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.FoldableWithIndex/index.js
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var traverseWithIndex_ = function(dictApplicative) {
    var applySecond2 = applySecond(dictApplicative.Apply0());
    var pure41 = pure(dictApplicative);
    return function(dictFoldableWithIndex) {
      var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
      return function(f) {
        return foldrWithIndex1(function(i2) {
          var $289 = f(i2);
          return function($290) {
            return applySecond2($289($290));
          };
        })(pure41(unit));
      };
    };
  };
  var forWithIndex_ = function(dictApplicative) {
    var traverseWithIndex_1 = traverseWithIndex_(dictApplicative);
    return function(dictFoldableWithIndex) {
      return flip(traverseWithIndex_1(dictFoldableWithIndex));
    };
  };
  var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
  };
  var findWithIndex = function(dictFoldableWithIndex) {
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    return function(p2) {
      var go2 = function(v2) {
        return function(v1) {
          return function(v22) {
            if (v1 instanceof Nothing && p2(v2)(v22)) {
              return new Just({
                index: v2,
                value: v22
              });
            }
            ;
            return v1;
          };
        };
      };
      return foldlWithIndex1(go2)(Nothing.value);
    };
  };

  // output/Data.TraversableWithIndex/index.js
  var traverseWithIndex = function(dict) {
    return dict.traverseWithIndex;
  };
  var forWithIndex = function(dictApplicative) {
    return function(dictTraversableWithIndex) {
      return flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  }();
  var singleton2 = function(dictPlus) {
    var empty10 = empty(dictPlus);
    return function(a3) {
      return new NonEmpty(a3, empty10);
    };
  };
  var functorNonEmpty = function(dictFunctor) {
    var map214 = map(dictFunctor);
    return {
      map: function(f) {
        return function(m2) {
          return new NonEmpty(f(m2.value0), map214(f)(m2.value1));
        };
      }
    };
  };
  var foldableNonEmpty = function(dictFoldable) {
    var foldMap6 = foldMap(dictFoldable);
    var foldl7 = foldl(dictFoldable);
    var foldr6 = foldr(dictFoldable);
    return {
      foldMap: function(dictMonoid) {
        var append113 = append(dictMonoid.Semigroup0());
        var foldMap12 = foldMap6(dictMonoid);
        return function(f) {
          return function(v2) {
            return append113(f(v2.value0))(foldMap12(f)(v2.value1));
          };
        };
      },
      foldl: function(f) {
        return function(b2) {
          return function(v2) {
            return foldl7(f)(f(b2)(v2.value0))(v2.value1);
          };
        };
      },
      foldr: function(f) {
        return function(b2) {
          return function(v2) {
            return f(v2.value0)(foldr6(f)(b2)(v2.value1));
          };
        };
      }
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons3.create = function(value0) {
      return function(value1) {
        return new Cons3(value0, value1);
      };
    };
    return Cons3;
  }();
  var NonEmptyList = function(x2) {
    return x2;
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v2);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v22) {
            if (v22 instanceof Cons && (v22.value1 instanceof Cons && v22.value1.value1 instanceof Nil)) {
              return new Cons(f(v22.value0), new Cons(f(v22.value1.value0), Nil.value));
            }
            ;
            if (v22 instanceof Cons && v22.value1 instanceof Nil) {
              return new Cons(f(v22.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v22, v3) {
                if (v22 instanceof Cons && (v22.value0 instanceof Cons && (v22.value0.value1 instanceof Cons && v22.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v22.value1;
                  $copy_v3 = new Cons(f(v22.value0.value0), new Cons(f(v22.value0.value1.value0), new Cons(f(v22.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v2)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var map7 = /* @__PURE__ */ map(functorList);
  var functorNonEmptyList = /* @__PURE__ */ functorNonEmpty(functorList);
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v2, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v2);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v2.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v2) {
            if (v2 instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v2 instanceof Cons) {
              $tco_var_b = f(b2)(v2.value0);
              $copy_v = v2.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v2.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty4 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append22(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty4);
      };
    }
  };
  var foldl2 = /* @__PURE__ */ foldl(foldableList);
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var foldableNonEmptyList = /* @__PURE__ */ foldableNonEmpty(foldableList);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var monoidList = /* @__PURE__ */ function() {
    return {
      mempty: Nil.value,
      Semigroup0: function() {
        return semigroupList;
      }
    };
  }();
  var unfoldable1List = {
    unfoldr1: function(f) {
      return function(b2) {
        var go2 = function($copy_source) {
          return function($copy_memo) {
            var $tco_var_source = $copy_source;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(source3, memo) {
              var v2 = f(source3);
              if (v2.value1 instanceof Just) {
                $tco_var_source = v2.value1.value0;
                $copy_memo = new Cons(v2.value0, memo);
                return;
              }
              ;
              if (v2.value1 instanceof Nothing) {
                $tco_done = true;
                return foldl2(flip(Cons.create))(Nil.value)(new Cons(v2.value0, memo));
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): " + [v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_source, $copy_memo);
            }
            ;
            return $tco_result;
          };
        };
        return go2(b2)(Nil.value);
      };
    }
  };
  var unfoldableList = {
    unfoldr: function(f) {
      return function(b2) {
        var go2 = function($copy_source) {
          return function($copy_memo) {
            var $tco_var_source = $copy_source;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(source3, memo) {
              var v2 = f(source3);
              if (v2 instanceof Nothing) {
                $tco_done = true;
                return foldl2(flip(Cons.create))(Nil.value)(memo);
              }
              ;
              if (v2 instanceof Just) {
                $tco_var_source = v2.value0.value1;
                $copy_memo = new Cons(v2.value0.value0, memo);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): " + [v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_source, $copy_memo);
            }
            ;
            return $tco_result;
          };
        };
        return go2(b2)(Nil.value);
      };
    },
    Unfoldable10: function() {
      return unfoldable1List;
    }
  };
  var eq1List = {
    eq1: function(dictEq) {
      var eq25 = eq(dictEq);
      return function(xs) {
        return function(ys) {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v2, v1, v22) {
                  if (!v22) {
                    $tco_done = true;
                    return false;
                  }
                  ;
                  if (v2 instanceof Nil && v1 instanceof Nil) {
                    $tco_done = true;
                    return v22;
                  }
                  ;
                  if (v2 instanceof Cons && v1 instanceof Cons) {
                    $tco_var_v = v2.value1;
                    $tco_var_v1 = v1.value1;
                    $copy_v2 = v22 && eq25(v1.value0)(v2.value0);
                    return;
                  }
                  ;
                  $tco_done = true;
                  return false;
                }
                ;
                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                }
                ;
                return $tco_result;
              };
            };
          };
          return go2(xs)(ys)(true);
        };
      };
    }
  };
  var eq12 = /* @__PURE__ */ eq1(eq1List);
  var eqList = function(dictEq) {
    return {
      eq: eq12(dictEq)
    };
  };
  var ord1List = {
    compare1: function(dictOrd) {
      var compare10 = compare(dictOrd);
      return function(xs) {
        return function(ys) {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v2, v1) {
                if (v2 instanceof Nil && v1 instanceof Nil) {
                  $tco_done = true;
                  return EQ.value;
                }
                ;
                if (v2 instanceof Nil) {
                  $tco_done = true;
                  return LT.value;
                }
                ;
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return GT.value;
                }
                ;
                if (v2 instanceof Cons && v1 instanceof Cons) {
                  var v22 = compare10(v2.value0)(v1.value0);
                  if (v22 instanceof EQ) {
                    $tco_var_v = v2.value1;
                    $copy_v1 = v1.value1;
                    return;
                  }
                  ;
                  $tco_done = true;
                  return v22;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): " + [v2.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(xs)(ys);
        };
      };
    },
    Eq10: function() {
      return eq1List;
    }
  };
  var compare12 = /* @__PURE__ */ compare1(ord1List);
  var ordList = function(dictOrd) {
    var eqList1 = eqList(dictOrd.Eq0());
    return {
      compare: compare12(dictOrd),
      Eq0: function() {
        return eqList1;
      }
    };
  };
  var applyList = {
    apply: function(v2) {
      return function(v1) {
        if (v2 instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v2 instanceof Cons) {
          return append1(map7(v2.value0)(v1))(apply(applyList)(v2.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorList;
    }
  };
  var apply2 = /* @__PURE__ */ apply(applyList);
  var applyNonEmptyList = {
    apply: function(v2) {
      return function(v1) {
        return new NonEmpty(v2.value0(v1.value0), append1(apply2(v2.value1)(new Cons(v1.value0, Nil.value)))(apply2(new Cons(v2.value0, v2.value1))(v1.value1)));
      };
    },
    Functor0: function() {
      return functorNonEmptyList;
    }
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  }();
  var applicativeNonEmptyList = {
    pure: /* @__PURE__ */ function() {
      var $315 = singleton2(plusList);
      return function($316) {
        return NonEmptyList($315($316));
      };
    }(),
    Apply0: function() {
      return applyNonEmptyList;
    }
  };

  // output/Data.List/index.js
  var map8 = /* @__PURE__ */ map(functorMaybe);
  var uncons = function(v2) {
    if (v2 instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v2 instanceof Cons) {
      return new Just({
        head: v2.value0,
        tail: v2.value1
      });
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v2.constructor.name]);
  };
  var toUnfoldable = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(xs) {
      return map8(function(rec) {
        return new Tuple(rec.head, rec.tail);
      })(uncons(xs));
    });
  };
  var singleton3 = function(a3) {
    return new Cons(a3, Nil.value);
  };
  var reverse = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v2;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v2);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v2.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var $$null = function(v2) {
    if (v2 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var fromFoldable = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var deleteBy = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v22 instanceof Cons && v2(v1)(v22.value0)) {
          return v22.value1;
        }
        ;
        if (v22 instanceof Cons) {
          return new Cons(v22.value0, deleteBy(v2)(v1)(v22.value1));
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 732, column 1 - line 732, column 67): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var $$delete = function(dictEq) {
    return deleteBy(eq(dictEq));
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Data.List.NonEmpty/index.js
  var singleton4 = /* @__PURE__ */ function() {
    var $200 = singleton2(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  }();
  var cons = function(y2) {
    return function(v2) {
      return new NonEmpty(y2, new Cons(v2.value0, v2.value1));
    };
  };

  // output/Data.String.CodeUnits/foreign.js
  var fromCharArray = function(a3) {
    return a3.join("");
  };
  var singleton5 = function(c2) {
    return c2;
  };
  var length3 = function(s2) {
    return s2.length;
  };
  var _indexOf = function(just) {
    return function(nothing) {
      return function(x2) {
        return function(s2) {
          var i2 = s2.indexOf(x2);
          return i2 === -1 ? nothing : just(i2);
        };
      };
    };
  };
  var take2 = function(n) {
    return function(s2) {
      return s2.substr(0, n);
    };
  };
  var drop2 = function(n) {
    return function(s2) {
      return s2.substring(n);
    };
  };
  var splitAt = function(i2) {
    return function(s2) {
      return { before: s2.substring(0, i2), after: s2.substring(i2) };
    };
  };

  // output/Data.String.Unsafe/foreign.js
  var charAt = function(i2) {
    return function(s2) {
      if (i2 >= 0 && i2 < s2.length)
        return s2.charAt(i2);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };

  // output/Data.String.CodeUnits/index.js
  var stripPrefix = function(v2) {
    return function(str) {
      var v1 = splitAt(length3(v2))(str);
      var $20 = v1.before === v2;
      if ($20) {
        return new Just(v1.after);
      }
      ;
      return Nothing.value;
    };
  };
  var indexOf = /* @__PURE__ */ function() {
    return _indexOf(Just.create)(Nothing.value);
  }();
  var contains = function(pat) {
    var $23 = indexOf(pat);
    return function($24) {
      return isJust($23($24));
    };
  };

  // output/Data.JSDate/index.js
  var toISOString = function(dt2) {
    return dateMethodEff("toISOString", dt2);
  };

  // output/Data.Log.Level/index.js
  var Trace = /* @__PURE__ */ function() {
    function Trace2() {
    }
    ;
    Trace2.value = new Trace2();
    return Trace2;
  }();
  var Debug = /* @__PURE__ */ function() {
    function Debug2() {
    }
    ;
    Debug2.value = new Debug2();
    return Debug2;
  }();
  var Info = /* @__PURE__ */ function() {
    function Info2() {
    }
    ;
    Info2.value = new Info2();
    return Info2;
  }();
  var Warn = /* @__PURE__ */ function() {
    function Warn2() {
    }
    ;
    Warn2.value = new Warn2();
    return Warn2;
  }();
  var $$Error = /* @__PURE__ */ function() {
    function $$Error2() {
    }
    ;
    $$Error2.value = new $$Error2();
    return $$Error2;
  }();
  var eqLogLevel = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Trace && y2 instanceof Trace) {
          return true;
        }
        ;
        if (x2 instanceof Debug && y2 instanceof Debug) {
          return true;
        }
        ;
        if (x2 instanceof Info && y2 instanceof Info) {
          return true;
        }
        ;
        if (x2 instanceof Warn && y2 instanceof Warn) {
          return true;
        }
        ;
        if (x2 instanceof $$Error && y2 instanceof $$Error) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var ordLogLevel = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof Trace && y2 instanceof Trace) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Trace) {
          return LT.value;
        }
        ;
        if (y2 instanceof Trace) {
          return GT.value;
        }
        ;
        if (x2 instanceof Debug && y2 instanceof Debug) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Debug) {
          return LT.value;
        }
        ;
        if (y2 instanceof Debug) {
          return GT.value;
        }
        ;
        if (x2 instanceof Info && y2 instanceof Info) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Info) {
          return LT.value;
        }
        ;
        if (y2 instanceof Info) {
          return GT.value;
        }
        ;
        if (x2 instanceof Warn && y2 instanceof Warn) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Warn) {
          return LT.value;
        }
        ;
        if (y2 instanceof Warn) {
          return GT.value;
        }
        ;
        if (x2 instanceof $$Error && y2 instanceof $$Error) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Log.Level (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return eqLogLevel;
    }
  };

  // output/Data.Map.Internal/index.js
  var $runtime_lazy4 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var map9 = /* @__PURE__ */ map(functorMaybe);
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var Leaf = /* @__PURE__ */ function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  }();
  var Node = /* @__PURE__ */ function() {
    function Node2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Node2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new Node2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return Node2;
  }();
  var IterLeaf = /* @__PURE__ */ function() {
    function IterLeaf2() {
    }
    ;
    IterLeaf2.value = new IterLeaf2();
    return IterLeaf2;
  }();
  var IterEmit = /* @__PURE__ */ function() {
    function IterEmit2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    IterEmit2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new IterEmit2(value0, value1, value22);
        };
      };
    };
    return IterEmit2;
  }();
  var IterNode = /* @__PURE__ */ function() {
    function IterNode2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    IterNode2.create = function(value0) {
      return function(value1) {
        return new IterNode2(value0, value1);
      };
    };
    return IterNode2;
  }();
  var IterDone = /* @__PURE__ */ function() {
    function IterDone2() {
    }
    ;
    IterDone2.value = new IterDone2();
    return IterDone2;
  }();
  var IterNext = /* @__PURE__ */ function() {
    function IterNext2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    IterNext2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new IterNext2(value0, value1, value22);
        };
      };
    };
    return IterNext2;
  }();
  var Split = /* @__PURE__ */ function() {
    function Split2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Split2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Split2(value0, value1, value22);
        };
      };
    };
    return Split2;
  }();
  var SplitLast = /* @__PURE__ */ function() {
    function SplitLast2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    SplitLast2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new SplitLast2(value0, value1, value22);
        };
      };
    };
    return SplitLast2;
  }();
  var unsafeNode = function(k, v2, l2, r) {
    if (l2 instanceof Leaf) {
      if (r instanceof Leaf) {
        return new Node(1, 1, k, v2, l2, r);
      }
      ;
      if (r instanceof Node) {
        return new Node(1 + r.value0 | 0, 1 + r.value1 | 0, k, v2, l2, r);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 702, column 5 - line 706, column 39): " + [r.constructor.name]);
    }
    ;
    if (l2 instanceof Node) {
      if (r instanceof Leaf) {
        return new Node(1 + l2.value0 | 0, 1 + l2.value1 | 0, k, v2, l2, r);
      }
      ;
      if (r instanceof Node) {
        return new Node(1 + function() {
          var $280 = l2.value0 > r.value0;
          if ($280) {
            return l2.value0;
          }
          ;
          return r.value0;
        }() | 0, (1 + l2.value1 | 0) + r.value1 | 0, k, v2, l2, r);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 708, column 5 - line 712, column 68): " + [r.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 700, column 32 - line 712, column 68): " + [l2.constructor.name]);
  };
  var toMapIter = /* @__PURE__ */ function() {
    return flip(IterNode.create)(IterLeaf.value);
  }();
  var stepWith = function(f) {
    return function(next2) {
      return function(done) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v2) {
            if (v2 instanceof IterLeaf) {
              $tco_done = true;
              return done(unit);
            }
            ;
            if (v2 instanceof IterEmit) {
              $tco_done = true;
              return next2(v2.value0, v2.value1, v2.value2);
            }
            ;
            if (v2 instanceof IterNode) {
              $copy_v = f(v2.value1)(v2.value0);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 940, column 8 - line 946, column 20): " + [v2.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2;
      };
    };
  };
  var size = function(v2) {
    if (v2 instanceof Leaf) {
      return 0;
    }
    ;
    if (v2 instanceof Node) {
      return v2.value1;
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 618, column 8 - line 620, column 24): " + [v2.constructor.name]);
  };
  var singleton6 = function(k) {
    return function(v2) {
      return new Node(1, 1, k, v2, Leaf.value, Leaf.value);
    };
  };
  var unsafeBalancedNode = /* @__PURE__ */ function() {
    var height9 = function(v2) {
      if (v2 instanceof Leaf) {
        return 0;
      }
      ;
      if (v2 instanceof Node) {
        return v2.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 757, column 12 - line 759, column 26): " + [v2.constructor.name]);
    };
    var rotateLeft = function(k, v2, l2, rk, rv, rl, rr) {
      if (rl instanceof Node && rl.value0 > height9(rr)) {
        return unsafeNode(rl.value2, rl.value3, unsafeNode(k, v2, l2, rl.value4), unsafeNode(rk, rv, rl.value5, rr));
      }
      ;
      return unsafeNode(rk, rv, unsafeNode(k, v2, l2, rl), rr);
    };
    var rotateRight = function(k, v2, lk, lv, ll, lr, r) {
      if (lr instanceof Node && height9(ll) <= lr.value0) {
        return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k, v2, lr.value5, r));
      }
      ;
      return unsafeNode(lk, lv, ll, unsafeNode(k, v2, lr, r));
    };
    return function(k, v2, l2, r) {
      if (l2 instanceof Leaf) {
        if (r instanceof Leaf) {
          return singleton6(k)(v2);
        }
        ;
        if (r instanceof Node && r.value0 > 1) {
          return rotateLeft(k, v2, l2, r.value2, r.value3, r.value4, r.value5);
        }
        ;
        return unsafeNode(k, v2, l2, r);
      }
      ;
      if (l2 instanceof Node) {
        if (r instanceof Node) {
          if (r.value0 > (l2.value0 + 1 | 0)) {
            return rotateLeft(k, v2, l2, r.value2, r.value3, r.value4, r.value5);
          }
          ;
          if (l2.value0 > (r.value0 + 1 | 0)) {
            return rotateRight(k, v2, l2.value2, l2.value3, l2.value4, l2.value5, r);
          }
          ;
        }
        ;
        if (r instanceof Leaf && l2.value0 > 1) {
          return rotateRight(k, v2, l2.value2, l2.value3, l2.value4, l2.value5, r);
        }
        ;
        return unsafeNode(k, v2, l2, r);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 717, column 40 - line 738, column 34): " + [l2.constructor.name]);
    };
  }();
  var $lazy_unsafeSplit = /* @__PURE__ */ $runtime_lazy4("unsafeSplit", "Data.Map.Internal", function() {
    return function(comp, k, m2) {
      if (m2 instanceof Leaf) {
        return new Split(Nothing.value, Leaf.value, Leaf.value);
      }
      ;
      if (m2 instanceof Node) {
        var v2 = comp(k)(m2.value2);
        if (v2 instanceof LT) {
          var v1 = $lazy_unsafeSplit(793)(comp, k, m2.value4);
          return new Split(v1.value0, v1.value1, unsafeBalancedNode(m2.value2, m2.value3, v1.value2, m2.value5));
        }
        ;
        if (v2 instanceof GT) {
          var v1 = $lazy_unsafeSplit(796)(comp, k, m2.value5);
          return new Split(v1.value0, unsafeBalancedNode(m2.value2, m2.value3, m2.value4, v1.value1), v1.value2);
        }
        ;
        if (v2 instanceof EQ) {
          return new Split(new Just(m2.value3), m2.value4, m2.value5);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 791, column 5 - line 799, column 30): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 787, column 34 - line 799, column 30): " + [m2.constructor.name]);
    };
  });
  var unsafeSplit = /* @__PURE__ */ $lazy_unsafeSplit(786);
  var $lazy_unsafeSplitLast = /* @__PURE__ */ $runtime_lazy4("unsafeSplitLast", "Data.Map.Internal", function() {
    return function(k, v2, l2, r) {
      if (r instanceof Leaf) {
        return new SplitLast(k, v2, l2);
      }
      ;
      if (r instanceof Node) {
        var v1 = $lazy_unsafeSplitLast(779)(r.value2, r.value3, r.value4, r.value5);
        return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k, v2, l2, v1.value2));
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 776, column 37 - line 780, column 57): " + [r.constructor.name]);
    };
  });
  var unsafeSplitLast = /* @__PURE__ */ $lazy_unsafeSplitLast(775);
  var unsafeJoinNodes = function(v2, v1) {
    if (v2 instanceof Leaf) {
      return v1;
    }
    ;
    if (v2 instanceof Node) {
      var v22 = unsafeSplitLast(v2.value2, v2.value3, v2.value4, v2.value5);
      return unsafeBalancedNode(v22.value0, v22.value1, v22.value2, v1);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 764, column 25 - line 768, column 38): " + [v2.constructor.name, v1.constructor.name]);
  };
  var $lazy_unsafeUnionWith = /* @__PURE__ */ $runtime_lazy4("unsafeUnionWith", "Data.Map.Internal", function() {
    return function(comp, app, l2, r) {
      if (l2 instanceof Leaf) {
        return r;
      }
      ;
      if (r instanceof Leaf) {
        return l2;
      }
      ;
      if (r instanceof Node) {
        var v2 = unsafeSplit(comp, r.value2, l2);
        var l$prime = $lazy_unsafeUnionWith(809)(comp, app, v2.value1, r.value4);
        var r$prime = $lazy_unsafeUnionWith(810)(comp, app, v2.value2, r.value5);
        if (v2.value0 instanceof Just) {
          return unsafeBalancedNode(r.value2, app(v2.value0.value0)(r.value3), l$prime, r$prime);
        }
        ;
        if (v2.value0 instanceof Nothing) {
          return unsafeBalancedNode(r.value2, r.value3, l$prime, r$prime);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 811, column 5 - line 815, column 46): " + [v2.value0.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 804, column 42 - line 815, column 46): " + [l2.constructor.name, r.constructor.name]);
    };
  });
  var unsafeUnionWith = /* @__PURE__ */ $lazy_unsafeUnionWith(803);
  var unionWith = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(app) {
      return function(m1) {
        return function(m2) {
          return unsafeUnionWith(compare10, app, m1, m2);
        };
      };
    };
  };
  var union2 = function(dictOrd) {
    return unionWith(dictOrd)($$const);
  };
  var update = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(f) {
      return function(k) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return Leaf.value;
          }
          ;
          if (v2 instanceof Node) {
            var v1 = compare10(k)(v2.value2);
            if (v1 instanceof LT) {
              return unsafeBalancedNode(v2.value2, v2.value3, go2(v2.value4), v2.value5);
            }
            ;
            if (v1 instanceof GT) {
              return unsafeBalancedNode(v2.value2, v2.value3, v2.value4, go2(v2.value5));
            }
            ;
            if (v1 instanceof EQ) {
              var v22 = f(v2.value3);
              if (v22 instanceof Nothing) {
                return unsafeJoinNodes(v2.value4, v2.value5);
              }
              ;
              if (v22 instanceof Just) {
                return new Node(v2.value0, v2.value1, v2.value2, v22.value0, v2.value4, v2.value5);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 11 - line 535, column 38): " + [v22.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 527, column 7 - line 535, column 38): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 524, column 8 - line 535, column 38): " + [v2.constructor.name]);
        };
        return go2;
      };
    };
  };
  var pop = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(k) {
      return function(m2) {
        var v2 = unsafeSplit(compare10, k, m2);
        return map9(function(a3) {
          return new Tuple(a3, unsafeJoinNodes(v2.value1, v2.value2));
        })(v2.value0);
      };
    };
  };
  var member = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2) {
          if (v2 instanceof Leaf) {
            $tco_done = true;
            return false;
          }
          ;
          if (v2 instanceof Node) {
            var v1 = compare10(k)(v2.value2);
            if (v1 instanceof LT) {
              $copy_v = v2.value4;
              return;
            }
            ;
            if (v1 instanceof GT) {
              $copy_v = v2.value5;
              return;
            }
            ;
            if (v1 instanceof EQ) {
              $tco_done = true;
              return true;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 7 - line 462, column 19): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 456, column 8 - line 462, column 19): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var mapMaybeWithKey = function(dictOrd) {
    return function(f) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          var v22 = f(v2.value2)(v2.value3);
          if (v22 instanceof Just) {
            return unsafeBalancedNode(v2.value2, v22.value0, go2(v2.value4), go2(v2.value5));
          }
          ;
          if (v22 instanceof Nothing) {
            return unsafeJoinNodes(go2(v2.value4), go2(v2.value5));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 661, column 7 - line 665, column 47): " + [v22.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 658, column 8 - line 665, column 47): " + [v2.constructor.name]);
      };
      return go2;
    };
  };
  var mapMaybe2 = function(dictOrd) {
    var $780 = mapMaybeWithKey(dictOrd);
    return function($781) {
      return $780($$const($781));
    };
  };
  var lookup2 = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2) {
          if (v2 instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v2 instanceof Node) {
            var v1 = compare10(k)(v2.value2);
            if (v1 instanceof LT) {
              $copy_v = v2.value4;
              return;
            }
            ;
            if (v1 instanceof GT) {
              $copy_v = v2.value5;
              return;
            }
            ;
            if (v1 instanceof EQ) {
              $tco_done = true;
              return new Just(v2.value3);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 283, column 7 - line 286, column 22): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 8 - line 286, column 22): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var iterMapL = /* @__PURE__ */ function() {
    var go2 = function($copy_iter) {
      return function($copy_v) {
        var $tco_var_iter = $copy_iter;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(iter, v2) {
          if (v2 instanceof Leaf) {
            $tco_done = true;
            return iter;
          }
          ;
          if (v2 instanceof Node) {
            if (v2.value5 instanceof Leaf) {
              $tco_var_iter = new IterEmit(v2.value2, v2.value3, iter);
              $copy_v = v2.value4;
              return;
            }
            ;
            $tco_var_iter = new IterEmit(v2.value2, v2.value3, new IterNode(v2.value5, iter));
            $copy_v = v2.value4;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 951, column 13 - line 958, column 48): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_iter, $copy_v);
        }
        ;
        return $tco_result;
      };
    };
    return go2;
  }();
  var stepAscCps = /* @__PURE__ */ stepWith(iterMapL);
  var stepAsc = /* @__PURE__ */ function() {
    return stepAscCps(function(k, v2, next2) {
      return new IterNext(k, v2, next2);
    })($$const(IterDone.value));
  }();
  var eqMapIter = function(dictEq) {
    var eq113 = eq(dictEq);
    return function(dictEq1) {
      var eq25 = eq(dictEq1);
      return {
        eq: function() {
          var go2 = function($copy_a) {
            return function($copy_b) {
              var $tco_var_a = $copy_a;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(a3, b2) {
                var v2 = stepAsc(a3);
                if (v2 instanceof IterNext) {
                  var v22 = stepAsc(b2);
                  if (v22 instanceof IterNext && (eq113(v2.value0)(v22.value0) && eq25(v2.value1)(v22.value1))) {
                    $tco_var_a = v2.value2;
                    $copy_b = v22.value2;
                    return;
                  }
                  ;
                  $tco_done = true;
                  return false;
                }
                ;
                if (v2 instanceof IterDone) {
                  $tco_done = true;
                  return true;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 859, column 14 - line 868, column 13): " + [v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_a, $copy_b);
              }
              ;
              return $tco_result;
            };
          };
          return go2;
        }()
      };
    };
  };
  var ordMapIter = function(dictOrd) {
    var compare10 = compare(dictOrd);
    var eqMapIter1 = eqMapIter(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare16 = compare(dictOrd1);
      var eqMapIter2 = eqMapIter1(dictOrd1.Eq0());
      return {
        compare: function() {
          var go2 = function($copy_a) {
            return function($copy_b) {
              var $tco_var_a = $copy_a;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(a3, b2) {
                var v2 = stepAsc(b2);
                var v1 = stepAsc(a3);
                if (v1 instanceof IterNext && v2 instanceof IterNext) {
                  var v3 = compare10(v1.value0)(v2.value0);
                  if (v3 instanceof EQ) {
                    var v4 = compare16(v1.value1)(v2.value1);
                    if (v4 instanceof EQ) {
                      $tco_var_a = v1.value2;
                      $copy_b = v2.value2;
                      return;
                    }
                    ;
                    $tco_done = true;
                    return v4;
                  }
                  ;
                  $tco_done = true;
                  return v3;
                }
                ;
                if (v1 instanceof IterDone) {
                  if (v2 instanceof IterDone) {
                    $tco_done = true;
                    return EQ.value;
                  }
                  ;
                  $tco_done = true;
                  return LT.value;
                }
                ;
                if (v2 instanceof IterDone) {
                  $tco_done = true;
                  return GT.value;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 873, column 14 - line 891, column 11): " + [v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_a, $copy_b);
              }
              ;
              return $tco_result;
            };
          };
          return go2;
        }(),
        Eq0: function() {
          return eqMapIter2;
        }
      };
    };
  };
  var stepUnfoldr = /* @__PURE__ */ function() {
    var step5 = function(k, v2, next2) {
      return new Just(new Tuple(new Tuple(k, v2), next2));
    };
    return stepAscCps(step5)(function(v2) {
      return Nothing.value;
    });
  }();
  var toUnfoldable2 = function(dictUnfoldable) {
    var $784 = unfoldr(dictUnfoldable)(stepUnfoldr);
    return function($785) {
      return $784(toMapIter($785));
    };
  };
  var toUnfoldable1 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var showMap = function(dictShow) {
    var showTuple2 = showTuple(dictShow);
    return function(dictShow1) {
      var show113 = show(showArray(showTuple2(dictShow1)));
      return {
        show: function(as3) {
          return "(fromFoldable " + (show113(toUnfoldable1(as3)) + ")");
        }
      };
    };
  };
  var isSubmap = function(dictOrd) {
    var lookup111 = lookup2(dictOrd);
    return function(dictEq) {
      var eq113 = eq(dictEq);
      var go2 = function(m1) {
        return function(m2) {
          if (m1 instanceof Leaf) {
            return true;
          }
          ;
          if (m1 instanceof Node) {
            var v1 = lookup111(m1.value2)(m2);
            if (v1 instanceof Nothing) {
              return false;
            }
            ;
            if (v1 instanceof Just) {
              return eq113(m1.value3)(v1.value0) && (go2(m1.value4)(m2) && go2(m1.value5)(m2));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 611, column 7 - line 614, column 40): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 608, column 14 - line 614, column 40): " + [m1.constructor.name]);
        };
      };
      return go2;
    };
  };
  var isEmpty = function(v2) {
    if (v2 instanceof Leaf) {
      return true;
    }
    ;
    return false;
  };
  var insert = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(k) {
      return function(v2) {
        var go2 = function(v1) {
          if (v1 instanceof Leaf) {
            return singleton6(k)(v2);
          }
          ;
          if (v1 instanceof Node) {
            var v22 = compare10(k)(v1.value2);
            if (v22 instanceof LT) {
              return unsafeBalancedNode(v1.value2, v1.value3, go2(v1.value4), v1.value5);
            }
            ;
            if (v22 instanceof GT) {
              return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go2(v1.value5));
            }
            ;
            if (v22 instanceof EQ) {
              return new Node(v1.value0, v1.value1, k, v2, v1.value4, v1.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 471, column 7 - line 474, column 35): " + [v22.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 8 - line 474, column 35): " + [v1.constructor.name]);
        };
        return go2;
      };
    };
  };
  var functorMap = {
    map: function(f) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          return new Node(v2.value0, v2.value1, v2.value2, f(v2.value3), go2(v2.value4), go2(v2.value5));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 10 - line 150, column 39): " + [v2.constructor.name]);
      };
      return go2;
    }
  };
  var functorWithIndexMap = {
    mapWithIndex: function(f) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          return new Node(v2.value0, v2.value1, v2.value2, f(v2.value2)(v2.value3), go2(v2.value4), go2(v2.value5));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 10 - line 158, column 41): " + [v2.constructor.name]);
      };
      return go2;
    },
    Functor0: function() {
      return functorMap;
    }
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy4("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(172)(m$prime.value4, f(m$prime.value3)($lazy_go(172)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 169, column 26 - line 172, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(169);
        return function(m2) {
          return go2(m2, z2);
        };
      };
    },
    foldl: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy4("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(178)(f($lazy_go(178)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 175, column 26 - line 178, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(175);
        return function(m2) {
          return go2(z2, m2);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty4 = mempty(dictMonoid);
      var append113 = append(dictMonoid.Semigroup0());
      return function(f) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return mempty4;
          }
          ;
          if (v2 instanceof Node) {
            return append113(go2(v2.value4))(append113(f(v2.value3))(go2(v2.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 181, column 10 - line 184, column 28): " + [v2.constructor.name]);
        };
        return go2;
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy4("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(192)(m$prime.value4, f(m$prime.value2)(m$prime.value3)($lazy_go(192)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 189, column 26 - line 192, column 45): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(189);
        return function(m2) {
          return go2(m2, z2);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy4("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(198)(f(m$prime.value2)($lazy_go(198)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 195, column 26 - line 198, column 45): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(195);
        return function(m2) {
          return go2(z2, m2);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty4 = mempty(dictMonoid);
      var append113 = append(dictMonoid.Semigroup0());
      return function(f) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return mempty4;
          }
          ;
          if (v2 instanceof Node) {
            return append113(go2(v2.value4))(append113(f(v2.value2)(v2.value3))(go2(v2.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 201, column 10 - line 204, column 30): " + [v2.constructor.name]);
        };
        return go2;
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var keys = /* @__PURE__ */ function() {
    return foldrWithIndex(foldableWithIndexMap)(function(k) {
      return function(v2) {
        return function(acc) {
          return new Cons(k, acc);
        };
      };
    })(Nil.value);
  }();
  var traversableMap = {
    traverse: function(dictApplicative) {
      var pure41 = pure(dictApplicative);
      var Apply0 = dictApplicative.Apply0();
      var apply8 = apply(Apply0);
      var map123 = map(Apply0.Functor0());
      return function(f) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return pure41(Leaf.value);
          }
          ;
          if (v2 instanceof Node) {
            return apply8(apply8(map123(function(l$prime) {
              return function(v$prime) {
                return function(r$prime) {
                  return new Node(v2.value0, v2.value1, v2.value2, v$prime, l$prime, r$prime);
                };
              };
            })(go2(v2.value4)))(f(v2.value3)))(go2(v2.value5));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 209, column 10 - line 215, column 19): " + [v2.constructor.name]);
        };
        return go2;
      };
    },
    sequence: function(dictApplicative) {
      return traverse(traversableMap)(dictApplicative)(identity8);
    },
    Functor0: function() {
      return functorMap;
    },
    Foldable1: function() {
      return foldableMap;
    }
  };
  var traversableWithIndexMap = {
    traverseWithIndex: function(dictApplicative) {
      var pure41 = pure(dictApplicative);
      var Apply0 = dictApplicative.Apply0();
      var apply8 = apply(Apply0);
      var map123 = map(Apply0.Functor0());
      return function(f) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return pure41(Leaf.value);
          }
          ;
          if (v2 instanceof Node) {
            return apply8(apply8(map123(function(l$prime) {
              return function(v$prime) {
                return function(r$prime) {
                  return new Node(v2.value0, v2.value1, v2.value2, v$prime, l$prime, r$prime);
                };
              };
            })(go2(v2.value4)))(f(v2.value2)(v2.value3)))(go2(v2.value5));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 221, column 10 - line 227, column 19): " + [v2.constructor.name]);
        };
        return go2;
      };
    },
    FunctorWithIndex0: function() {
      return functorWithIndexMap;
    },
    FoldableWithIndex1: function() {
      return foldableWithIndexMap;
    },
    Traversable2: function() {
      return traversableMap;
    }
  };
  var values = /* @__PURE__ */ function() {
    return foldr(foldableMap)(Cons.create)(Nil.value);
  }();
  var foldSubmapBy = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    var lessThanOrEq1 = lessThanOrEq(dictOrd);
    return function(appendFn) {
      return function(memptyValue) {
        return function(kmin) {
          return function(kmax) {
            return function(f) {
              var tooSmall = function() {
                if (kmin instanceof Just) {
                  return function(k) {
                    return lessThan1(k)(kmin.value0);
                  };
                }
                ;
                if (kmin instanceof Nothing) {
                  return $$const(false);
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 389, column 7 - line 393, column 22): " + [kmin.constructor.name]);
              }();
              var tooLarge = function() {
                if (kmax instanceof Just) {
                  return function(k) {
                    return greaterThan1(k)(kmax.value0);
                  };
                }
                ;
                if (kmax instanceof Nothing) {
                  return $$const(false);
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 396, column 7 - line 400, column 22): " + [kmax.constructor.name]);
              }();
              var inBounds = function() {
                if (kmin instanceof Just && kmax instanceof Just) {
                  return function(k) {
                    return lessThanOrEq1(kmin.value0)(k) && lessThanOrEq1(k)(kmax.value0);
                  };
                }
                ;
                if (kmin instanceof Just && kmax instanceof Nothing) {
                  return function(k) {
                    return lessThanOrEq1(kmin.value0)(k);
                  };
                }
                ;
                if (kmin instanceof Nothing && kmax instanceof Just) {
                  return function(k) {
                    return lessThanOrEq1(k)(kmax.value0);
                  };
                }
                ;
                if (kmin instanceof Nothing && kmax instanceof Nothing) {
                  return $$const(true);
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 403, column 7 - line 411, column 21): " + [kmin.constructor.name, kmax.constructor.name]);
              }();
              var go2 = function(v2) {
                if (v2 instanceof Leaf) {
                  return memptyValue;
                }
                ;
                if (v2 instanceof Node) {
                  return appendFn(appendFn(function() {
                    var $643 = tooSmall(v2.value2);
                    if ($643) {
                      return memptyValue;
                    }
                    ;
                    return go2(v2.value4);
                  }())(function() {
                    var $644 = inBounds(v2.value2);
                    if ($644) {
                      return f(v2.value2)(v2.value3);
                    }
                    ;
                    return memptyValue;
                  }()))(function() {
                    var $645 = tooLarge(v2.value2);
                    if ($645) {
                      return memptyValue;
                    }
                    ;
                    return go2(v2.value5);
                  }());
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 413, column 10 - line 419, column 66): " + [v2.constructor.name]);
              };
              return go2;
            };
          };
        };
      };
    };
  };
  var filterWithKey = function(dictOrd) {
    return function(f) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          if (f(v2.value2)(v2.value3)) {
            return unsafeBalancedNode(v2.value2, v2.value3, go2(v2.value4), go2(v2.value5));
          }
          ;
          if (otherwise) {
            return unsafeJoinNodes(go2(v2.value4), go2(v2.value5));
          }
          ;
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 627, column 8 - line 633, column 47): " + [v2.constructor.name]);
      };
      return go2;
    };
  };
  var filterKeys = function(dictOrd) {
    return function(f) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          if (f(v2.value2)) {
            return unsafeBalancedNode(v2.value2, v2.value3, go2(v2.value4), go2(v2.value5));
          }
          ;
          if (otherwise) {
            return unsafeJoinNodes(go2(v2.value4), go2(v2.value5));
          }
          ;
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 640, column 8 - line 646, column 47): " + [v2.constructor.name]);
      };
      return go2;
    };
  };
  var filter2 = function(dictOrd) {
    var $786 = filterWithKey(dictOrd);
    return function($787) {
      return $786($$const($787));
    };
  };
  var eqMap = function(dictEq) {
    var eqMapIter1 = eqMapIter(dictEq);
    return function(dictEq1) {
      var eq113 = eq(eqMapIter1(dictEq1));
      return {
        eq: function(xs) {
          return function(ys) {
            if (xs instanceof Leaf) {
              if (ys instanceof Leaf) {
                return true;
              }
              ;
              return false;
            }
            ;
            if (xs instanceof Node) {
              if (ys instanceof Node && xs.value1 === ys.value1) {
                return eq113(toMapIter(xs))(toMapIter(ys));
              }
              ;
              return false;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 94, column 14 - line 105, column 16): " + [xs.constructor.name]);
          };
        }
      };
    };
  };
  var ordMap = function(dictOrd) {
    var ordMapIter1 = ordMapIter(dictOrd);
    var eqMap1 = eqMap(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare10 = compare(ordMapIter1(dictOrd1));
      var eqMap22 = eqMap1(dictOrd1.Eq0());
      return {
        compare: function(xs) {
          return function(ys) {
            if (xs instanceof Leaf) {
              if (ys instanceof Leaf) {
                return EQ.value;
              }
              ;
              return LT.value;
            }
            ;
            if (ys instanceof Leaf) {
              return GT.value;
            }
            ;
            return compare10(toMapIter(xs))(toMapIter(ys));
          };
        },
        Eq0: function() {
          return eqMap22;
        }
      };
    };
  };
  var empty2 = /* @__PURE__ */ function() {
    return Leaf.value;
  }();
  var fromFoldable2 = function(dictOrd) {
    var insert17 = insert(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(function(m2) {
        return function(v2) {
          return insert17(v2.value0)(v2.value1)(m2);
        };
      })(empty2);
    };
  };
  var submap = function(dictOrd) {
    var foldSubmapBy1 = foldSubmapBy(dictOrd);
    var union1 = union2(dictOrd);
    return function(kmin) {
      return function(kmax) {
        return foldSubmapBy1(union1)(empty2)(kmin)(kmax)(singleton6);
      };
    };
  };
  var $$delete2 = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(k) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          var v1 = compare10(k)(v2.value2);
          if (v1 instanceof LT) {
            return unsafeBalancedNode(v2.value2, v2.value3, go2(v2.value4), v2.value5);
          }
          ;
          if (v1 instanceof GT) {
            return unsafeBalancedNode(v2.value2, v2.value3, v2.value4, go2(v2.value5));
          }
          ;
          if (v1 instanceof EQ) {
            return unsafeJoinNodes(v2.value4, v2.value5);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 7 - line 501, column 43): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 8 - line 501, column 43): " + [v2.constructor.name]);
      };
      return go2;
    };
  };
  var catMaybes2 = function(dictOrd) {
    return mapMaybe2(dictOrd)(identity8);
  };
  var alter = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(f) {
      return function(k) {
        return function(m2) {
          var v2 = unsafeSplit(compare10, k, m2);
          var v22 = f(v2.value0);
          if (v22 instanceof Nothing) {
            return unsafeJoinNodes(v2.value1, v2.value2);
          }
          ;
          if (v22 instanceof Just) {
            return unsafeBalancedNode(k, v22.value0, v2.value1, v2.value2);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 514, column 3 - line 518, column 41): " + [v22.constructor.name]);
        };
      };
    };
  };

  // output/Control.Monad.Logger.Class/index.js
  var log2 = function(dict) {
    return dict.log;
  };
  var log$prime = function(dictMonadLogger) {
    var MonadEffect0 = dictMonadLogger.MonadEffect0();
    var bind40 = bind(MonadEffect0.Monad0().Bind1());
    var liftEffect11 = liftEffect(MonadEffect0);
    var log1 = log2(dictMonadLogger);
    return function(level2) {
      return function(tags) {
        return function(message2) {
          return bind40(liftEffect11(now))(function($92) {
            return log1(function(v2) {
              return {
                level: level2,
                message: message2,
                tags,
                timestamp: v2
              };
            }($92));
          });
        };
      };
    };
  };
  var warn = function(dictMonadLogger) {
    return log$prime(dictMonadLogger)(Warn.value);
  };
  var info = function(dictMonadLogger) {
    return log$prime(dictMonadLogger)(Info.value);
  };
  var debug = function(dictMonadLogger) {
    return log$prime(dictMonadLogger)(Debug.value);
  };

  // output/Effect.Aff/foreign.js
  var Aff = function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag2, _1, _2, _3) {
      this.tag = tag2;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag2) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag2, _1, _2, _3);
      };
      fn.tag = tag2;
      return fn;
    }
    function nonCanceler2(error5) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error5) {
        setTimeout(function() {
          throw error5;
        }, 0);
      }
    }
    function runSync(left2, right2, eff) {
      try {
        return right2(eff());
      } catch (error5) {
        return left2(error5);
      }
    }
    function runAsync(left2, eff, k) {
      try {
        return eff(k)();
      } catch (error5) {
        k(left2(error5))();
        return nonCanceler2;
      }
    }
    var Scheduler = function() {
      var limit = 1024;
      var size6 = 0;
      var ix5 = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk4;
        draining = true;
        while (size6 !== 0) {
          size6--;
          thunk4 = queue[ix5];
          queue[ix5] = void 0;
          ix5 = (ix5 + 1) % limit;
          thunk4();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size6 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix5 + size6) % limit] = cb;
          size6++;
          if (!draining) {
            drain();
          }
        }
      };
    }();
    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill3(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function() {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill3(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error5) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step5 = aff;
      var fail3 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run5(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step5 = bhead(step5);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail3 = util.left(e);
                step5 = null;
              }
              break;
            case STEP_RESULT:
              if (util.isLeft(step5)) {
                status = RETURN;
                fail3 = step5;
                step5 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step5 = util.fromRight(step5);
              }
              break;
            case CONTINUE:
              switch (step5.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step5._2;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step5 = util.right(step5._1);
                  } else {
                    status = STEP_BIND;
                    step5 = step5._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step5 = runSync(util.left, util.right, step5._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step5 = runAsync(util.left, step5._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step5 = result2;
                        run5(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail3 = util.left(step5._1);
                  step5 = null;
                  break;
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step5._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step5._1) {
                    tmp.run();
                  }
                  step5 = util.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step5 = sequential3(util, supervisor, step5._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step5 = interrupt || fail3 || step5;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail3) {
                      status = CONTINUE;
                      step5 = attempt._2(util.fromLeft(fail3));
                      fail3 = null;
                    }
                    break;
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail3) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step5 = util.fromRight(step5);
                    }
                    break;
                  case BRACKET:
                    bracketCount--;
                    if (fail3 === null) {
                      result = util.fromRight(step5);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step5 = attempt._3(result);
                      }
                    }
                    break;
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail3), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step5 = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail3) {
                      step5 = attempt._1.failed(util.fromLeft(fail3))(attempt._2);
                    } else {
                      step5 = attempt._1.completed(util.fromRight(step5))(attempt._2);
                    }
                    fail3 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail3), attempts, interrupt);
                    status = CONTINUE;
                    step5 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step5 = attempt._1;
                    fail3 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step5));
                }
              }
              joins = null;
              if (interrupt && fail3) {
                setTimeout(function() {
                  throw util.fromLeft(fail3);
                }, 0);
              } else if (util.isLeft(step5) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util.fromLeft(step5);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join8) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join8.rethrow;
            join8.handler(step5)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join8;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill3(error5, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error5);
              status = COMPLETED;
              step5 = interrupt;
              run5(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error5);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step5(error5)), attempts, interrupt);
                }
                status = RETURN;
                step5 = null;
                fail3 = null;
                run5(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util.left(error5);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step5 = null;
                fail3 = null;
              }
          }
          return canceler;
        };
      }
      function join7(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run5(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill3,
        join: join7,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run5(runTick);
              });
            } else {
              run5(runTick);
            }
          }
        }
      };
    }
    function runPar(util, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root2 = EMPTY;
      function kill3(error5, par2, cb2) {
        var step5 = par2;
        var head6 = null;
        var tail3 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop:
          while (true) {
            tmp = null;
            switch (step5.tag) {
              case FORKED:
                if (step5._3 === EMPTY) {
                  tmp = fibers[step5._1];
                  kills2[count++] = tmp.kill(error5, function(result) {
                    return function() {
                      count--;
                      if (count === 0) {
                        cb2(result)();
                      }
                    };
                  });
                }
                if (head6 === null) {
                  break loop;
                }
                step5 = head6._2;
                if (tail3 === null) {
                  head6 = null;
                } else {
                  head6 = tail3._1;
                  tail3 = tail3._2;
                }
                break;
              case MAP:
                step5 = step5._2;
                break;
              case APPLY:
              case ALT:
                if (head6) {
                  tail3 = new Aff2(CONS, head6, tail3);
                }
                head6 = step5;
                step5 = step5._1;
                break;
            }
          }
        if (count === 0) {
          cb2(util.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join7(result, head6, tail3) {
        var fail3, step5, lhs, rhs, tmp, kid;
        if (util.isLeft(result)) {
          fail3 = result;
          step5 = null;
        } else {
          step5 = result;
          fail3 = null;
        }
        loop:
          while (true) {
            lhs = null;
            rhs = null;
            tmp = null;
            kid = null;
            if (interrupt !== null) {
              return;
            }
            if (head6 === null) {
              cb(fail3 || step5)();
              return;
            }
            if (head6._3 !== EMPTY) {
              return;
            }
            switch (head6.tag) {
              case MAP:
                if (fail3 === null) {
                  head6._3 = util.right(head6._1(util.fromRight(step5)));
                  step5 = head6._3;
                } else {
                  head6._3 = fail3;
                }
                break;
              case APPLY:
                lhs = head6._1._3;
                rhs = head6._2._3;
                if (fail3) {
                  head6._3 = fail3;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill3(early, fail3 === lhs ? head6._2 : head6._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail3 === null) {
                        join7(fail3, null, null);
                      } else {
                        join7(fail3, tail3._1, tail3._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                } else if (lhs === EMPTY || rhs === EMPTY) {
                  return;
                } else {
                  step5 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                  head6._3 = step5;
                }
                break;
              case ALT:
                lhs = head6._1._3;
                rhs = head6._2._3;
                if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                  return;
                }
                if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                  fail3 = step5 === lhs ? rhs : lhs;
                  step5 = null;
                  head6._3 = fail3;
                } else {
                  head6._3 = step5;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill3(early, step5 === lhs ? head6._2 : head6._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail3 === null) {
                        join7(step5, null, null);
                      } else {
                        join7(step5, tail3._1, tail3._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                }
                break;
            }
            if (tail3 === null) {
              head6 = null;
            } else {
              head6 = tail3._1;
              tail3 = tail3._2;
            }
          }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join7(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run5() {
        var status = CONTINUE;
        var step5 = par;
        var head6 = null;
        var tail3 = null;
        var tmp, fid;
        loop:
          while (true) {
            tmp = null;
            fid = null;
            switch (status) {
              case CONTINUE:
                switch (step5.tag) {
                  case MAP:
                    if (head6) {
                      tail3 = new Aff2(CONS, head6, tail3);
                    }
                    head6 = new Aff2(MAP, step5._1, EMPTY, EMPTY);
                    step5 = step5._2;
                    break;
                  case APPLY:
                    if (head6) {
                      tail3 = new Aff2(CONS, head6, tail3);
                    }
                    head6 = new Aff2(APPLY, EMPTY, step5._2, EMPTY);
                    step5 = step5._1;
                    break;
                  case ALT:
                    if (head6) {
                      tail3 = new Aff2(CONS, head6, tail3);
                    }
                    head6 = new Aff2(ALT, EMPTY, step5._2, EMPTY);
                    step5 = step5._1;
                    break;
                  default:
                    fid = fiberId++;
                    status = RETURN;
                    tmp = step5;
                    step5 = new Aff2(FORKED, fid, new Aff2(CONS, head6, tail3), EMPTY);
                    tmp = Fiber(util, supervisor, tmp);
                    tmp.onComplete({
                      rethrow: false,
                      handler: resolve(step5)
                    })();
                    fibers[fid] = tmp;
                    if (supervisor) {
                      supervisor.register(tmp);
                    }
                }
                break;
              case RETURN:
                if (head6 === null) {
                  break loop;
                }
                if (head6._1 === EMPTY) {
                  head6._1 = step5;
                  status = CONTINUE;
                  step5 = head6._2;
                  head6._2 = EMPTY;
                } else {
                  head6._2 = step5;
                  step5 = head6;
                  if (tail3 === null) {
                    head6 = null;
                  } else {
                    head6 = tail3._1;
                    tail3 = tail3._2;
                  }
                }
            }
          }
        root2 = step5;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel2(error5, cb2) {
        interrupt = util.left(error5);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill3(error5, root2, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run5();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel2(killError, killCb);
          };
        });
      };
    }
    function sequential3(util, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  }();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value14) {
          return Aff.Pure(f(value14));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k) {
        return Aff.Bracket(acquire, options2, k);
      };
    };
  }
  function _makeFiber(util, aff) {
    return function() {
      return Aff.Fiber(util, null, aff);
    };
  }
  var _delay = function() {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }
    function clearDelay(n, t2) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t2);
      } else {
        return clearTimeout(t2);
      }
    }
    return function(right2, ms) {
      return Aff.Async(function(cb) {
        return function() {
          var timer = setDelay(ms, cb(right2()));
          return function() {
            return Aff.Sync(function() {
              return right2(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();
  var _sequential = Aff.Seq;

  // output/Data.Profunctor/index.js
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var profunctorFn = {
    dimap: function(a2b) {
      return function(c2d) {
        return function(b2c) {
          return function($18) {
            return c2d(b2c(a2b($18)));
          };
        };
      };
    }
  };
  var dimap = function(dict) {
    return dict.dimap;
  };
  var lcmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(a2b) {
      return dimap1(a2b)(identity9);
    };
  };
  var rmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(b2c) {
      return dimap1(identity9)(b2c);
    };
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Control.Parallel/index.js
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var parallel4 = parallel(dictParallel);
    return function(dictApplicative) {
      var traverse_16 = traverse_(dictApplicative);
      return function(dictFoldable) {
        var traverse_17 = traverse_16(dictFoldable);
        return function(f) {
          var $51 = traverse_17(function($53) {
            return parallel4(f($53));
          });
          return function($52) {
            return sequential3($51($52));
          };
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictApplicative) {
      var parTraverse_2 = parTraverse_1(dictApplicative);
      return function(dictFoldable) {
        return parTraverse_2(dictFoldable)(identity10);
      };
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy5 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void3 = /* @__PURE__ */ $$void(functorEffect);
  var map10 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x2) {
    return x2;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ function() {
    var unsafeFromRight = function(v2) {
      if (v2 instanceof Right) {
        return v2.value0;
      }
      ;
      if (v2 instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [v2.constructor.name]);
    };
    var unsafeFromLeft = function(v2) {
      if (v2 instanceof Left) {
        return v2.value0;
      }
      ;
      if (v2 instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [v2.constructor.name]);
    };
    var isLeft2 = function(v2) {
      if (v2 instanceof Left) {
        return true;
      }
      ;
      if (v2 instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [v2.constructor.name]);
    };
    return {
      isLeft: isLeft2,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  }();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do5() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var delay = function(v2) {
    return _delay(Right.create, v2);
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy5("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var applyAff = /* @__PURE__ */ $lazy_applyAff(73);
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a3) {
      return bracket(pure22(unit))($$const(fin))($$const(a3));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce,
    sequential: _sequential,
    Apply0: function() {
      return applyAff;
    },
    Apply1: function() {
      return applyParAff;
    }
  };
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var applicativeParAff = {
    pure: function($76) {
      return parallel2(pure22($76));
    },
    Apply0: function() {
      return applyParAff;
    }
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($77) {
    return Canceler($$const(liftEffect2($77)));
  };
  var joinFiber = function(v2) {
    return makeAff(function(k) {
      return map10(effectCanceler)(v2.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t2) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t2))));
      };
    }
  };
  var killFiber = function(e) {
    return function(v2) {
      return bind1(liftEffect2(v2.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void3(v2.kill(e, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map10(effectCanceler)(v2.kill(e, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped3(function($83) {
        return liftEffect2(k($83));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void3(runAff(k)(aff));
    };
  };
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a3) {
        return bind1(k(a3))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));

  // output/Effect.Aff.Class/index.js
  var lift42 = /* @__PURE__ */ lift(monadTransReaderT);
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };
  var monadAffReader = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var monadEffectReader2 = monadEffectReader(MonadEffect0);
    return {
      liftAff: function() {
        var $79 = lift42(MonadEffect0.Monad0());
        var $80 = liftAff(dictMonadAff);
        return function($81) {
          return $79($80($81));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectReader2;
      }
    };
  };

  // output/Control.Monad.Logger.Trans/index.js
  var unwrap3 = /* @__PURE__ */ unwrap();
  var LoggerT = function(x2) {
    return x2;
  };
  var runLoggerT = function(v2) {
    return v2;
  };
  var monadTransLoggerT = {
    lift: function(dictMonad) {
      return function($77) {
        return LoggerT($$const($77));
      };
    }
  };
  var lift6 = /* @__PURE__ */ lift(monadTransLoggerT);
  var mapLoggerT = function(f) {
    return function(v2) {
      return function($78) {
        return f(v2($78));
      };
    };
  };
  var functorLoggerT = function(dictFunctor) {
    return {
      map: function() {
        var $79 = map(dictFunctor);
        return function($80) {
          return mapLoggerT($79($80));
        };
      }()
    };
  };
  var monadLoggerT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeLoggerT(dictMonad);
      },
      Bind1: function() {
        return bindLoggerT(dictMonad);
      }
    };
  };
  var bindLoggerT = function(dictMonad) {
    var bind40 = bind(dictMonad.Bind1());
    return {
      bind: function(v2) {
        return function(f) {
          return function(l2) {
            return bind40(v2(l2))(function($81) {
              return function(v1) {
                return v1(l2);
              }(unwrap3(f($81)));
            });
          };
        };
      },
      Apply0: function() {
        return applyLoggerT(dictMonad);
      }
    };
  };
  var applyLoggerT = function(dictMonad) {
    var functorLoggerT1 = functorLoggerT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadLoggerT(dictMonad)),
      Functor0: function() {
        return functorLoggerT1;
      }
    };
  };
  var applicativeLoggerT = function(dictMonad) {
    return {
      pure: function() {
        var $82 = pure(dictMonad.Applicative0());
        return function($83) {
          return LoggerT($$const($82($83)));
        };
      }(),
      Apply0: function() {
        return applyLoggerT(dictMonad);
      }
    };
  };
  var monadEffectLoggerT = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadLoggerT1 = monadLoggerT(Monad0);
    return {
      liftEffect: function() {
        var $86 = lift6(Monad0);
        var $87 = liftEffect(dictMonadEffect);
        return function($88) {
          return $86($87($88));
        };
      }(),
      Monad0: function() {
        return monadLoggerT1;
      }
    };
  };
  var monadAffLoggerT = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var monadEffectLoggerT1 = monadEffectLoggerT(MonadEffect0);
    return {
      liftAff: function() {
        var $89 = lift6(MonadEffect0.Monad0());
        var $90 = liftAff(dictMonadAff);
        return function($91) {
          return $89($90($91));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectLoggerT1;
      }
    };
  };
  var monadLoggerLoggerT = function(dictMonadEffect) {
    var monadEffectLoggerT1 = monadEffectLoggerT(dictMonadEffect);
    return {
      log: function(message2) {
        return function(v2) {
          return v2(message2);
        };
      },
      MonadEffect0: function() {
        return monadEffectLoggerT1;
      }
    };
  };

  // output/Data.Show.Generic/foreign.js
  var intercalate2 = function(separator) {
    return function(xs) {
      return xs.join(separator);
    };
  };

  // output/Data.Show.Generic/index.js
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var genericShowArgsNoArguments = {
    genericShowArgs: function(v2) {
      return [];
    }
  };
  var genericShowArgsArgument = function(dictShow) {
    var show43 = show(dictShow);
    return {
      genericShowArgs: function(v2) {
        return [show43(v2)];
      }
    };
  };
  var genericShowArgs = function(dict) {
    return dict.genericShowArgs;
  };
  var genericShowArgsProduct = function(dictGenericShowArgs) {
    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);
    return function(dictGenericShowArgs1) {
      var genericShowArgs2 = genericShowArgs(dictGenericShowArgs1);
      return {
        genericShowArgs: function(v2) {
          return append2(genericShowArgs1(v2.value0))(genericShowArgs2(v2.value1));
        }
      };
    };
  };
  var genericShowConstructor = function(dictGenericShowArgs) {
    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return {
        "genericShow'": function(v2) {
          var ctor = reflectSymbol2($$Proxy.value);
          var v1 = genericShowArgs1(v2);
          if (v1.length === 0) {
            return ctor;
          }
          ;
          return "(" + (intercalate2(" ")(append2([ctor])(v1)) + ")");
        }
      };
    };
  };
  var genericShow$prime = function(dict) {
    return dict["genericShow'"];
  };
  var genericShowSum = function(dictGenericShow) {
    var genericShow$prime1 = genericShow$prime(dictGenericShow);
    return function(dictGenericShow1) {
      var genericShow$prime2 = genericShow$prime(dictGenericShow1);
      return {
        "genericShow'": function(v2) {
          if (v2 instanceof Inl) {
            return genericShow$prime1(v2.value0);
          }
          ;
          if (v2 instanceof Inr) {
            return genericShow$prime2(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): " + [v2.constructor.name]);
        }
      };
    };
  };
  var genericShow = function(dictGeneric) {
    var from4 = from(dictGeneric);
    return function(dictGenericShow) {
      var genericShow$prime1 = genericShow$prime(dictGenericShow);
      return function(x2) {
        return genericShow$prime1(from4(x2));
      };
    };
  };

  // output/Data.Array/foreign.js
  var rangeImpl = function(start2, end3) {
    var step5 = start2 > end3 ? -1 : 1;
    var result = new Array(step5 * (end3 - start2) + 1);
    var i2 = start2, n = 0;
    while (i2 !== end3) {
      result[n++] = i2;
      i2 += step5;
    }
    result[n] = i2;
    return result;
  };
  var replicateFill = function(count, value14) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value14);
  };
  var replicatePolyfill = function(count, value14) {
    var result = [];
    var n = 0;
    for (var i2 = 0; i2 < count; i2++) {
      result[n++] = value14;
    }
    return result;
  };
  var replicateImpl = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = function() {
    function Cons3(head6, tail3) {
      this.head = head6;
      this.tail = tail3;
    }
    var emptyList = {};
    function curryCons(head6) {
      return function(tail3) {
        return new Cons3(head6, tail3);
      };
    }
    function listToArray(list2) {
      var result = [];
      var count = 0;
      var xs = list2;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr6, xs) {
      return listToArray(foldr6(curryCons)(emptyList)(xs));
    };
  }();
  var length4 = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty10, next2, xs) {
    return xs.length === 0 ? empty10({}) : next2(xs[0])(xs.slice(1));
  };
  var indexImpl = function(just, nothing, xs, i2) {
    return i2 < 0 || i2 >= xs.length ? nothing : just(xs[i2]);
  };
  var findIndexImpl = function(just, nothing, f, xs) {
    for (var i2 = 0, l2 = xs.length; i2 < l2; i2++) {
      if (f(xs[i2]))
        return just(i2);
    }
    return nothing;
  };
  var _deleteAt = function(just, nothing, i2, l2) {
    if (i2 < 0 || i2 >= l2.length)
      return nothing;
    var l1 = l2.slice();
    l1.splice(i2, 1);
    return just(l1);
  };
  var _updateAt = function(just, nothing, i2, a3, l2) {
    if (i2 < 0 || i2 >= l2.length)
      return nothing;
    var l1 = l2.slice();
    l1[i2] = a3;
    return just(l1);
  };
  var reverse2 = function(l2) {
    return l2.slice().reverse();
  };
  var concat = function(xss) {
    if (xss.length <= 1e4) {
      return Array.prototype.concat.apply([], xss);
    }
    var result = [];
    for (var i2 = 0, l2 = xss.length; i2 < l2; i2++) {
      var xs = xss[i2];
      for (var j = 0, m2 = xs.length; j < m2; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };
  var filterImpl = function(f, xs) {
    return xs.filter(f);
  };
  var partitionImpl = function(f, xs) {
    var yes = [];
    var no = [];
    for (var i2 = 0; i2 < xs.length; i2++) {
      var x2 = xs[i2];
      if (f(x2))
        yes.push(x2);
      else
        no.push(x2);
    }
    return { yes, no };
  };
  var sortByImpl = function() {
    function mergeFromTo(compare10, fromOrdering, xs1, xs2, from4, to3) {
      var mid;
      var i2;
      var j;
      var k;
      var x2;
      var y2;
      var c2;
      mid = from4 + (to3 - from4 >> 1);
      if (mid - from4 > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, from4, mid);
      if (to3 - mid > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, mid, to3);
      i2 = from4;
      j = mid;
      k = from4;
      while (i2 < mid && j < to3) {
        x2 = xs2[i2];
        y2 = xs2[j];
        c2 = fromOrdering(compare10(x2)(y2));
        if (c2 > 0) {
          xs1[k++] = y2;
          ++j;
        } else {
          xs1[k++] = x2;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to3) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare10, fromOrdering, xs) {
      var out;
      if (xs.length < 2)
        return xs;
      out = xs.slice(0);
      mergeFromTo(compare10, fromOrdering, out, xs.slice(0), 0, xs.length);
      return out;
    };
  }();
  var sliceImpl = function(s2, e, l2) {
    return l2.slice(s2, e);
  };
  var zipWithImpl = function(f, xs, ys) {
    var l2 = xs.length < ys.length ? xs.length : ys.length;
    var result = new Array(l2);
    for (var i2 = 0; i2 < l2; i2++) {
      result[i2] = f(xs[i2])(ys[i2]);
    }
    return result;
  };
  var unsafeIndexImpl = function(xs, n) {
    return xs[n];
  };

  // output/Data.Array.ST/foreign.js
  function newSTArray() {
    return [];
  }
  function unsafeFreezeThawImpl(xs) {
    return xs;
  }
  var unsafeFreezeImpl = unsafeFreezeThawImpl;
  function copyImpl(xs) {
    return xs.slice();
  }
  var thawImpl = copyImpl;
  var sortByImpl2 = function() {
    function mergeFromTo(compare10, fromOrdering, xs1, xs2, from4, to3) {
      var mid;
      var i2;
      var j;
      var k;
      var x2;
      var y2;
      var c2;
      mid = from4 + (to3 - from4 >> 1);
      if (mid - from4 > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, from4, mid);
      if (to3 - mid > 1)
        mergeFromTo(compare10, fromOrdering, xs2, xs1, mid, to3);
      i2 = from4;
      j = mid;
      k = from4;
      while (i2 < mid && j < to3) {
        x2 = xs2[i2];
        y2 = xs2[j];
        c2 = fromOrdering(compare10(x2)(y2));
        if (c2 > 0) {
          xs1[k++] = y2;
          ++j;
        } else {
          xs1[k++] = x2;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to3) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare10, fromOrdering, xs) {
      if (xs.length < 2)
        return xs;
      mergeFromTo(compare10, fromOrdering, xs, xs.slice(0), 0, xs.length);
      return xs;
    };
  }();
  var pushImpl = function(a3, xs) {
    return xs.push(a3);
  };

  // output/Control.Monad.ST.Uncurried/foreign.js
  var runSTFn1 = function runSTFn12(fn) {
    return function(a3) {
      return function() {
        return fn(a3);
      };
    };
  };
  var runSTFn2 = function runSTFn22(fn) {
    return function(a3) {
      return function(b2) {
        return function() {
          return fn(a3, b2);
        };
      };
    };
  };

  // output/Data.Array.ST/index.js
  var unsafeFreeze = /* @__PURE__ */ runSTFn1(unsafeFreezeImpl);
  var thaw = /* @__PURE__ */ runSTFn1(thawImpl);
  var withArray = function(f) {
    return function(xs) {
      return function __do5() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = /* @__PURE__ */ runSTFn2(pushImpl);

  // output/Data.Array.ST.Iterator/index.js
  var map11 = /* @__PURE__ */ map(functorST);
  var not2 = /* @__PURE__ */ not(heytingAlgebraBoolean);
  var $$void4 = /* @__PURE__ */ $$void(functorST);
  var Iterator = /* @__PURE__ */ function() {
    function Iterator2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Iterator2.create = function(value0) {
      return function(value1) {
        return new Iterator2(value0, value1);
      };
    };
    return Iterator2;
  }();
  var next = function(v2) {
    return function __do5() {
      var i2 = read(v2.value1)();
      modify2(function(v1) {
        return v1 + 1 | 0;
      })(v2.value1)();
      return v2.value0(i2);
    };
  };
  var iterator = function(f) {
    return map11(Iterator.create(f))(newSTRef(0));
  };
  var iterate = function(iter) {
    return function(f) {
      return function __do5() {
        var $$break = newSTRef(false)();
        while (map11(not2)(read($$break))()) {
          (function __do6() {
            var mx = next(iter)();
            if (mx instanceof Just) {
              return f(mx.value0)();
            }
            ;
            if (mx instanceof Nothing) {
              return $$void4(write(true)($$break))();
            }
            ;
            throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
          })();
        }
        ;
        return {};
      };
    };
  };

  // output/Data.Function.Uncurried/foreign.js
  var mkFn2 = function(fn) {
    return function(a3, b2) {
      return fn(a3)(b2);
    };
  };
  var mkFn5 = function(fn) {
    return function(a3, b2, c2, d2, e) {
      return fn(a3)(b2)(c2)(d2)(e);
    };
  };
  var runFn2 = function(fn) {
    return function(a3) {
      return function(b2) {
        return fn(a3, b2);
      };
    };
  };
  var runFn3 = function(fn) {
    return function(a3) {
      return function(b2) {
        return function(c2) {
          return fn(a3, b2, c2);
        };
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a3) {
      return function(b2) {
        return function(c2) {
          return function(d2) {
            return fn(a3, b2, c2, d2);
          };
        };
      };
    };
  };
  var runFn5 = function(fn) {
    return function(a3) {
      return function(b2) {
        return function(c2) {
          return function(d2) {
            return function(e) {
              return fn(a3, b2, c2, d2, e);
            };
          };
        };
      };
    };
  };

  // output/Data.Array/index.js
  var sequence2 = /* @__PURE__ */ sequence(traversableArray);
  var map12 = /* @__PURE__ */ map(functorMaybe);
  var fromJust4 = /* @__PURE__ */ fromJust();
  var fold12 = /* @__PURE__ */ fold(foldableArray);
  var append3 = /* @__PURE__ */ append(semigroupArray);
  var zipWith2 = /* @__PURE__ */ runFn3(zipWithImpl);
  var zipWithA = function(dictApplicative) {
    var sequence12 = sequence2(dictApplicative);
    return function(f) {
      return function(xs) {
        return function(ys) {
          return sequence12(zipWith2(f)(xs)(ys));
        };
      };
    };
  };
  var zip = /* @__PURE__ */ function() {
    return zipWith2(Tuple.create);
  }();
  var updateAt2 = /* @__PURE__ */ function() {
    return runFn5(_updateAt)(Just.create)(Nothing.value);
  }();
  var unsafeIndex = function() {
    return runFn2(unsafeIndexImpl);
  };
  var unsafeIndex1 = /* @__PURE__ */ unsafeIndex();
  var uncons2 = /* @__PURE__ */ function() {
    return runFn3(unconsImpl)($$const(Nothing.value))(function(x2) {
      return function(xs) {
        return new Just({
          head: x2,
          tail: xs
        });
      };
    });
  }();
  var toUnfoldable3 = function(dictUnfoldable) {
    var unfoldr4 = unfoldr(dictUnfoldable);
    return function(xs) {
      var len = length4(xs);
      var f = function(i2) {
        if (i2 < len) {
          return new Just(new Tuple(unsafeIndex1(xs)(i2), i2 + 1 | 0));
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Array (line 163, column 3 - line 165, column 26): " + [i2.constructor.name]);
      };
      return unfoldr4(f)(0);
    };
  };
  var tail = /* @__PURE__ */ function() {
    return runFn3(unconsImpl)($$const(Nothing.value))(function(v2) {
      return function(xs) {
        return new Just(xs);
      };
    });
  }();
  var sortBy2 = function(comp) {
    return runFn3(sortByImpl)(comp)(function(v2) {
      if (v2 instanceof GT) {
        return 1;
      }
      ;
      if (v2 instanceof EQ) {
        return 0;
      }
      ;
      if (v2 instanceof LT) {
        return -1 | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 897, column 38 - line 900, column 11): " + [v2.constructor.name]);
    });
  };
  var sort = function(dictOrd) {
    var compare10 = compare(dictOrd);
    return function(xs) {
      return sortBy2(compare10)(xs);
    };
  };
  var snoc2 = function(xs) {
    return function(x2) {
      return withArray(push(x2))(xs)();
    };
  };
  var slice2 = /* @__PURE__ */ runFn3(sliceImpl);
  var singleton7 = function(a3) {
    return [a3];
  };
  var replicate = /* @__PURE__ */ runFn2(replicateImpl);
  var range2 = /* @__PURE__ */ runFn2(rangeImpl);
  var partition2 = /* @__PURE__ */ runFn2(partitionImpl);
  var $$null2 = function(xs) {
    return length4(xs) === 0;
  };
  var init2 = function(xs) {
    if ($$null2(xs)) {
      return Nothing.value;
    }
    ;
    if (otherwise) {
      return new Just(slice2(0)(length4(xs) - 1 | 0)(xs));
    }
    ;
    throw new Error("Failed pattern match at Data.Array (line 351, column 1 - line 351, column 45): " + [xs.constructor.name]);
  };
  var index2 = /* @__PURE__ */ function() {
    return runFn4(indexImpl)(Just.create)(Nothing.value);
  }();
  var last2 = function(xs) {
    return index2(xs)(length4(xs) - 1 | 0);
  };
  var span2 = function(p2) {
    return function(arr) {
      var go2 = function($copy_i) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(i2) {
          var v2 = index2(arr)(i2);
          if (v2 instanceof Just) {
            var $156 = p2(v2.value0);
            if ($156) {
              $copy_i = i2 + 1 | 0;
              return;
            }
            ;
            $tco_done = true;
            return new Just(i2);
          }
          ;
          if (v2 instanceof Nothing) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at Data.Array (line 1035, column 5 - line 1037, column 25): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_i);
        }
        ;
        return $tco_result;
      };
      var breakIndex = go2(0);
      if (breakIndex instanceof Just && breakIndex.value0 === 0) {
        return {
          init: [],
          rest: arr
        };
      }
      ;
      if (breakIndex instanceof Just) {
        return {
          init: slice2(0)(breakIndex.value0)(arr),
          rest: slice2(breakIndex.value0)(length4(arr))(arr)
        };
      }
      ;
      if (breakIndex instanceof Nothing) {
        return {
          init: arr,
          rest: []
        };
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 1022, column 3 - line 1028, column 30): " + [breakIndex.constructor.name]);
    };
  };
  var takeWhile2 = function(p2) {
    return function(xs) {
      return span2(p2)(xs).init;
    };
  };
  var head = function(xs) {
    return index2(xs)(0);
  };
  var fromFoldable3 = function(dictFoldable) {
    return runFn2(fromFoldableImpl)(foldr(dictFoldable));
  };
  var fold2 = function(dictMonoid) {
    return fold12(dictMonoid);
  };
  var findIndex2 = /* @__PURE__ */ function() {
    return runFn4(findIndexImpl)(Just.create)(Nothing.value);
  }();
  var find2 = function(f) {
    return function(xs) {
      return map12(unsafeIndex1(xs))(findIndex2(f)(xs));
    };
  };
  var filter3 = /* @__PURE__ */ runFn2(filterImpl);
  var elemIndex = function(dictEq) {
    var eq25 = eq(dictEq);
    return function(x2) {
      return findIndex2(function(v2) {
        return eq25(v2)(x2);
      });
    };
  };
  var elem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a3) {
      return function(arr) {
        return isJust(elemIndex1(a3)(arr));
      };
    };
  };
  var drop3 = function(n) {
    return function(xs) {
      var $173 = n < 1;
      if ($173) {
        return xs;
      }
      ;
      return slice2(n)(length4(xs))(xs);
    };
  };
  var deleteAt = /* @__PURE__ */ function() {
    return runFn4(_deleteAt)(Just.create)(Nothing.value);
  }();
  var deleteBy2 = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22.length === 0) {
          return [];
        }
        ;
        return maybe(v22)(function(i2) {
          return fromJust4(deleteAt(i2)(v22));
        })(findIndex2(v2(v1))(v22));
      };
    };
  };
  var cons2 = function(x2) {
    return function(xs) {
      return append3([x2])(xs);
    };
  };
  var concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
  var mapMaybe3 = function(f) {
    return concatMap(function() {
      var $189 = maybe([])(singleton7);
      return function($190) {
        return $189(f($190));
      };
    }());
  };

  // output/Data.Array.NonEmpty.Internal/foreign.js
  var traverse1Impl = function() {
    function Cont(fn) {
      this.fn = fn;
    }
    var emptyList = {};
    var ConsCell = function(head6, tail3) {
      this.head = head6;
      this.tail = tail3;
    };
    function finalCell(head6) {
      return new ConsCell(head6, emptyList);
    }
    function consList(x2) {
      return function(xs) {
        return new ConsCell(x2, xs);
      };
    }
    function listToArray(list2) {
      var arr = [];
      var xs = list2;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }
    return function(apply8, map65, f) {
      var buildFrom = function(x2, ys) {
        return apply8(map65(consList)(f(x2)))(ys);
      };
      var go2 = function(acc, currentLen, xs) {
        if (currentLen === 0) {
          return acc;
        } else {
          var last4 = xs[currentLen - 1];
          return new Cont(function() {
            var built = go2(buildFrom(last4, acc), currentLen - 1, xs);
            return built;
          });
        }
      };
      return function(array) {
        var acc = map65(finalCell)(f(array[array.length - 1]));
        var result = go2(acc, array.length - 1, array);
        while (result instanceof Cont) {
          result = result.fn();
        }
        return map65(listToArray)(result);
      };
    };
  }();

  // output/Data.Array.NonEmpty.Internal/index.js
  var NonEmptyArray = function(x2) {
    return x2;
  };
  var semigroupNonEmptyArray = semigroupArray;
  var functorNonEmptyArray = functorArray;
  var foldableNonEmptyArray = foldableArray;

  // output/Data.Array.NonEmpty/index.js
  var fromJust5 = /* @__PURE__ */ fromJust();
  var unsafeFromArray = NonEmptyArray;
  var toArray = function(v2) {
    return v2;
  };
  var snoc$prime = function(xs) {
    return function(x2) {
      return unsafeFromArray(snoc2(xs)(x2));
    };
  };
  var snoc3 = function(xs) {
    return function(x2) {
      return unsafeFromArray(snoc2(toArray(xs))(x2));
    };
  };
  var singleton8 = function($110) {
    return unsafeFromArray(singleton7($110));
  };
  var fromArray = function(xs) {
    if (length4(xs) > 0) {
      return new Just(unsafeFromArray(xs));
    }
    ;
    if (otherwise) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Data.Array.NonEmpty (line 161, column 1 - line 161, column 58): " + [xs.constructor.name]);
  };
  var cons$prime = function(x2) {
    return function(xs) {
      return unsafeFromArray(cons2(x2)(xs));
    };
  };
  var adaptMaybe = function(f) {
    return function($126) {
      return fromJust5(f(toArray($126)));
    };
  };
  var head2 = /* @__PURE__ */ adaptMaybe(head);
  var init3 = /* @__PURE__ */ adaptMaybe(init2);
  var last3 = /* @__PURE__ */ adaptMaybe(last2);
  var tail2 = /* @__PURE__ */ adaptMaybe(tail);
  var adaptAny = function(f) {
    return function($128) {
      return f(toArray($128));
    };
  };
  var unsafeAdapt = function(f) {
    var $129 = adaptAny(f);
    return function($130) {
      return unsafeFromArray($129($130));
    };
  };
  var cons3 = function(x2) {
    return unsafeAdapt(cons2(x2));
  };

  // output/Game.Rotation/index.js
  var show2 = /* @__PURE__ */ show(showInt);
  var compare2 = /* @__PURE__ */ compare(ordInt);
  var Rotation = function(x2) {
    return x2;
  };
  var showRotation = {
    show: function(v2) {
      return "Rotation " + (show2(v2 * 90 | 0) + "\xB0");
    }
  };
  var ringRotation = ringInt;
  var eqRotation = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var ordRotation = {
    compare: function(x2) {
      return function(y2) {
        return compare2(x2)(y2);
      };
    },
    Eq0: function() {
      return eqRotation;
    }
  };
  var toRadians = function(v2) {
    return toNumber(v2) * pi * 0.5;
  };
  var toDegrees = function(v2) {
    return toNumber(v2) * 90;
  };
  var rotation = function(n) {
    return n & 3;
  };
  var boundedRotation = {
    bottom: /* @__PURE__ */ rotation(0),
    top: /* @__PURE__ */ rotation(3),
    Ord0: function() {
      return ordRotation;
    }
  };
  var enumRotation = {
    succ: function(v2) {
      if (v2 === 3) {
        return Nothing.value;
      }
      ;
      return new Just(rotation(v2 + 1 | 0));
    },
    pred: function(v2) {
      if (v2 === 0) {
        return Nothing.value;
      }
      ;
      return new Just(rotation(v2 - 1 | 0));
    },
    Ord0: function() {
      return ordRotation;
    }
  };
  var boundedEnumRotation = {
    cardinality: 4,
    fromEnum: function(v2) {
      return v2;
    },
    toEnum: function($55) {
      return Just.create(Rotation($55));
    },
    Bounded0: function() {
      return boundedRotation;
    },
    Enum1: function() {
      return enumRotation;
    }
  };
  var semigroupRotation = {
    append: function(v2) {
      return function(v1) {
        return rotation(v2 + v1 | 0);
      };
    }
  };
  var monoidRotation = {
    mempty: /* @__PURE__ */ rotation(0),
    Semigroup0: function() {
      return semigroupRotation;
    }
  };
  var groupRotation = {
    ginverse: function(v2) {
      return rotation(-v2 | 0);
    },
    Monoid0: function() {
      return monoidRotation;
    }
  };
  var mod22 = function(v2) {
    return v2 & 1;
  };

  // output/Control.Monad.State/index.js
  var unwrap4 = /* @__PURE__ */ unwrap();
  var runState = function(v2) {
    return function($18) {
      return unwrap4(v2($18));
    };
  };
  var evalState = function(v2) {
    return function(s2) {
      var v1 = v2(s2);
      return v1.value0;
    };
  };

  // output/Effect.Random/foreign.js
  var random = Math.random;

  // output/Effect.Random/index.js
  var randomInt = function(low2) {
    return function(high2) {
      return function __do5() {
        var n = random();
        var asNumber = (toNumber(high2) - toNumber(low2) + 1) * n + toNumber(low2);
        return floor2(asNumber);
      };
    };
  };

  // output/Game.Direction/index.js
  var mod3 = /* @__PURE__ */ mod(euclideanRingInt);
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumRotation);
  var Up = /* @__PURE__ */ function() {
    function Up3() {
    }
    ;
    Up3.value = new Up3();
    return Up3;
  }();
  var Right2 = /* @__PURE__ */ function() {
    function Right3() {
    }
    ;
    Right3.value = new Right3();
    return Right3;
  }();
  var Down = /* @__PURE__ */ function() {
    function Down3() {
    }
    ;
    Down3.value = new Down3();
    return Down3;
  }();
  var Left2 = /* @__PURE__ */ function() {
    function Left3() {
    }
    ;
    Left3.value = new Left3();
    return Left3;
  }();
  var showCardinalDirection = {
    show: function(v2) {
      if (v2 instanceof Up) {
        return "Up";
      }
      ;
      if (v2 instanceof Right2) {
        return "Right";
      }
      ;
      if (v2 instanceof Down) {
        return "Down";
      }
      ;
      if (v2 instanceof Left2) {
        return "Left";
      }
      ;
      throw new Error("Failed pattern match at Game.Direction (line 25, column 10 - line 29, column 20): " + [v2.constructor.name]);
    }
  };
  var eqCardinalDirection = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Up && y2 instanceof Up) {
          return true;
        }
        ;
        if (x2 instanceof Right2 && y2 instanceof Right2) {
          return true;
        }
        ;
        if (x2 instanceof Down && y2 instanceof Down) {
          return true;
        }
        ;
        if (x2 instanceof Left2 && y2 instanceof Left2) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var ordCardinalDirection = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof Up && y2 instanceof Up) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Up) {
          return LT.value;
        }
        ;
        if (y2 instanceof Up) {
          return GT.value;
        }
        ;
        if (x2 instanceof Right2 && y2 instanceof Right2) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Right2) {
          return LT.value;
        }
        ;
        if (y2 instanceof Right2) {
          return GT.value;
        }
        ;
        if (x2 instanceof Down && y2 instanceof Down) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Down) {
          return LT.value;
        }
        ;
        if (y2 instanceof Down) {
          return GT.value;
        }
        ;
        if (x2 instanceof Left2 && y2 instanceof Left2) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Game.Direction (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return eqCardinalDirection;
    }
  };
  var enumCardinalDirection = {
    succ: function(v2) {
      if (v2 instanceof Up) {
        return new Just(Right2.value);
      }
      ;
      if (v2 instanceof Right2) {
        return new Just(Down.value);
      }
      ;
      if (v2 instanceof Down) {
        return new Just(Left2.value);
      }
      ;
      if (v2 instanceof Left2) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Game.Direction (line 32, column 10 - line 36, column 20): " + [v2.constructor.name]);
    },
    pred: function(v2) {
      if (v2 instanceof Up) {
        return Nothing.value;
      }
      ;
      if (v2 instanceof Right2) {
        return new Just(Up.value);
      }
      ;
      if (v2 instanceof Down) {
        return new Just(Right2.value);
      }
      ;
      if (v2 instanceof Left2) {
        return new Just(Down.value);
      }
      ;
      throw new Error("Failed pattern match at Game.Direction (line 37, column 10 - line 41, column 22): " + [v2.constructor.name]);
    },
    Ord0: function() {
      return ordCardinalDirection;
    }
  };
  var boundedCardinalDirection = /* @__PURE__ */ function() {
    return {
      bottom: Up.value,
      top: Left2.value,
      Ord0: function() {
        return ordCardinalDirection;
      }
    };
  }();
  var boundedEnumCardinalDirect = {
    cardinality: 4,
    fromEnum: function(v2) {
      if (v2 instanceof Up) {
        return 0;
      }
      ;
      if (v2 instanceof Right2) {
        return 1;
      }
      ;
      if (v2 instanceof Down) {
        return 2;
      }
      ;
      if (v2 instanceof Left2) {
        return 3;
      }
      ;
      throw new Error("Failed pattern match at Game.Direction (line 49, column 14 - line 53, column 14): " + [v2.constructor.name]);
    },
    toEnum: function(v2) {
      if (v2 === 0) {
        return new Just(Up.value);
      }
      ;
      if (v2 === 1) {
        return new Just(Right2.value);
      }
      ;
      if (v2 === 2) {
        return new Just(Down.value);
      }
      ;
      if (v2 === 3) {
        return new Just(Left2.value);
      }
      ;
      return Nothing.value;
    },
    Bounded0: function() {
      return boundedCardinalDirection;
    },
    Enum1: function() {
      return enumCardinalDirection;
    }
  };
  var toEnum2 = /* @__PURE__ */ toEnum(boundedEnumCardinalDirect);
  var fromEnum1 = /* @__PURE__ */ fromEnum(boundedEnumCardinalDirect);
  var rotateDirection = function(dir2) {
    return function(rot) {
      return fromMaybe(Up.value)(toEnum2(mod3(fromEnum1(dir2) + fromEnum2(rot) | 0)(4)));
    };
  };
  var oppositeDirection = function(v2) {
    if (v2 instanceof Up) {
      return Down.value;
    }
    ;
    if (v2 instanceof Right2) {
      return Left2.value;
    }
    ;
    if (v2 instanceof Down) {
      return Up.value;
    }
    ;
    if (v2 instanceof Left2) {
      return Right2.value;
    }
    ;
    throw new Error("Failed pattern match at Game.Direction (line 68, column 21 - line 72, column 17): " + [v2.constructor.name]);
  };
  var clockwiseRotation = function(d1) {
    return function(d2) {
      return rotation(fromEnum1(d2) - fromEnum1(d1) | 0);
    };
  };
  var allDirections = /* @__PURE__ */ function() {
    return enumFromTo(enumCardinalDirection)(unfoldable1Array)(Up.value)(Left2.value);
  }();

  // output/Game.Location/index.js
  var show3 = /* @__PURE__ */ show(showInt);
  var compare3 = /* @__PURE__ */ compare(ordInt);
  var showLocation = {
    show: function(v2) {
      return "(" + (show3(v2.x) + ("," + (show3(v2.y) + ")")));
    }
  };
  var eqLocation = {
    eq: function(x2) {
      return function(y2) {
        return x2.x === y2.x && x2.y === y2.y;
      };
    }
  };
  var eq13 = /* @__PURE__ */ eq(eqLocation);
  var ordLocation = {
    compare: function(x2) {
      return function(y2) {
        var v2 = compare3(x2.x)(y2.x);
        if (v2 instanceof LT) {
          return LT.value;
        }
        ;
        if (v2 instanceof GT) {
          return GT.value;
        }
        ;
        return compare3(x2.y)(y2.y);
      };
    },
    Eq0: function() {
      return eqLocation;
    }
  };
  var location = function(x2) {
    return function(y2) {
      return {
        x: x2,
        y: y2
      };
    };
  };
  var followDirection = function(v2) {
    return function(v1) {
      if (v1 instanceof Up) {
        return location(v2.x)(v2.y - 1 | 0);
      }
      ;
      if (v1 instanceof Right2) {
        return location(v2.x + 1 | 0)(v2.y);
      }
      ;
      if (v1 instanceof Down) {
        return location(v2.x)(v2.y + 1 | 0);
      }
      ;
      if (v1 instanceof Left2) {
        return location(v2.x - 1 | 0)(v2.y);
      }
      ;
      throw new Error("Failed pattern match at Game.Location (line 34, column 37 - line 38, column 38): " + [v1.constructor.name]);
    };
  };
  var directionTo = function(l1) {
    return function(l2) {
      return find2(function(d2) {
        return eq13(followDirection(l1)(d2))(l2);
      })(allDirections);
    };
  };

  // output/Data.Set/index.js
  var coerce3 = /* @__PURE__ */ coerce();
  var foldMap2 = /* @__PURE__ */ foldMap(foldableList);
  var foldl3 = /* @__PURE__ */ foldl(foldableList);
  var foldr3 = /* @__PURE__ */ foldr(foldableList);
  var $$Set = function(x2) {
    return x2;
  };
  var union3 = function(dictOrd) {
    return coerce3(union2(dictOrd));
  };
  var toMap = function(v2) {
    return v2;
  };
  var toList = function(v2) {
    return keys(v2);
  };
  var toUnfoldable4 = function(dictUnfoldable) {
    var $96 = toUnfoldable(dictUnfoldable);
    return function($97) {
      return $96(toList($97));
    };
  };
  var toUnfoldable12 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
  var size2 = /* @__PURE__ */ coerce3(size);
  var singleton9 = function(a3) {
    return singleton6(a3)(unit);
  };
  var showSet = function(dictShow) {
    var show43 = show(showArray(dictShow));
    return {
      show: function(s2) {
        return "(fromFoldable " + (show43(toUnfoldable12(s2)) + ")");
      }
    };
  };
  var semigroupSet = function(dictOrd) {
    return {
      append: union3(dictOrd)
    };
  };
  var member2 = function(dictOrd) {
    return coerce3(member(dictOrd));
  };
  var isEmpty2 = /* @__PURE__ */ coerce3(isEmpty);
  var insert3 = function(dictOrd) {
    var insert17 = insert(dictOrd);
    return function(a3) {
      return function(v2) {
        return insert17(a3)(unit)(v2);
      };
    };
  };
  var fromMap = $$Set;
  var foldableSet = {
    foldMap: function(dictMonoid) {
      var foldMap12 = foldMap2(dictMonoid);
      return function(f) {
        var $98 = foldMap12(f);
        return function($99) {
          return $98(toList($99));
        };
      };
    },
    foldl: function(f) {
      return function(x2) {
        var $100 = foldl3(f)(x2);
        return function($101) {
          return $100(toList($101));
        };
      };
    },
    foldr: function(f) {
      return function(x2) {
        var $102 = foldr3(f)(x2);
        return function($103) {
          return $102(toList($103));
        };
      };
    }
  };
  var foldl12 = /* @__PURE__ */ foldl(foldableSet);
  var eqSet = function(dictEq) {
    var eq25 = eq(eqMap(dictEq)(eqUnit));
    return {
      eq: function(v2) {
        return function(v1) {
          return eq25(v2)(v1);
        };
      }
    };
  };
  var ordSet = function(dictOrd) {
    var compare10 = compare(ordList(dictOrd));
    var eqSet1 = eqSet(dictOrd.Eq0());
    return {
      compare: function(s1) {
        return function(s2) {
          return compare10(toList(s1))(toList(s2));
        };
      },
      Eq0: function() {
        return eqSet1;
      }
    };
  };
  var empty3 = empty2;
  var fromFoldable4 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictOrd) {
      var insert17 = insert3(dictOrd);
      return foldl22(function(m2) {
        return function(a3) {
          return insert17(a3)(m2);
        };
      })(empty3);
    };
  };
  var map13 = function(dictOrd) {
    var insert17 = insert3(dictOrd);
    return function(f) {
      return foldl12(function(m2) {
        return function(a3) {
          return insert17(f(a3))(m2);
        };
      })(empty3);
    };
  };
  var $$delete4 = function(dictOrd) {
    return coerce3($$delete2(dictOrd));
  };

  // output/Data.Map/index.js
  var keys2 = /* @__PURE__ */ function() {
    var $38 = $$void(functorMap);
    return function($39) {
      return fromMap($38($39));
    };
  }();

  // output/Data.Lens.Internal.Forget/index.js
  var Forget = function(x2) {
    return x2;
  };
  var profunctorForget = {
    dimap: function(f) {
      return function(v2) {
        return function(v1) {
          return function($36) {
            return v1(f($36));
          };
        };
      };
    }
  };
  var strongForget = {
    first: function(v2) {
      return function($37) {
        return v2(fst($37));
      };
    },
    second: function(v2) {
      return function($38) {
        return v2(snd($38));
      };
    },
    Profunctor0: function() {
      return profunctorForget;
    }
  };
  var choiceForget = function(dictMonoid) {
    var mempty4 = mempty(monoidFn(dictMonoid));
    return {
      left: function(v2) {
        return either(v2)(mempty4);
      },
      right: function(v2) {
        return either(mempty4)(v2);
      },
      Profunctor0: function() {
        return profunctorForget;
      }
    };
  };

  // output/Data.Profunctor.Choice/index.js
  var right = function(dict) {
    return dict.right;
  };
  var choiceFn = {
    left: function(v2) {
      return function(v1) {
        if (v1 instanceof Left) {
          return new Left(v2(v1.value0));
        }
        ;
        if (v1 instanceof Right) {
          return new Right(v1.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    right: /* @__PURE__ */ map(functorEither),
    Profunctor0: function() {
      return profunctorFn;
    }
  };

  // output/Data.Profunctor.Strong/index.js
  var strongFn = {
    first: function(a2b) {
      return function(v2) {
        return new Tuple(a2b(v2.value0), v2.value1);
      };
    },
    second: /* @__PURE__ */ map(functorTuple),
    Profunctor0: function() {
      return profunctorFn;
    }
  };
  var second2 = function(dict) {
    return dict.second;
  };
  var first = function(dict) {
    return dict.first;
  };
  var splitStrong = function(dictSemigroupoid) {
    var composeFlipped2 = composeFlipped(dictSemigroupoid);
    return function(dictStrong) {
      var first1 = first(dictStrong);
      var second1 = second2(dictStrong);
      return function(l2) {
        return function(r) {
          return composeFlipped2(first1(l2))(second1(r));
        };
      };
    };
  };
  var fanout = function(dictSemigroupoid) {
    var splitStrong1 = splitStrong(dictSemigroupoid);
    return function(dictStrong) {
      var lcmap2 = lcmap(dictStrong.Profunctor0());
      var splitStrong2 = splitStrong1(dictStrong);
      return function(l2) {
        return function(r) {
          return lcmap2(function(a3) {
            return new Tuple(a3, a3);
          })(splitStrong2(l2)(r));
        };
      };
    };
  };

  // output/Data.Lens.Internal.Wander/index.js
  var alaF3 = /* @__PURE__ */ alaF()()()();
  var wanderFunction = {
    wander: function(t2) {
      return alaF3(Identity)(t2(applicativeIdentity));
    },
    Strong0: function() {
      return strongFn;
    },
    Choice1: function() {
      return choiceFn;
    }
  };

  // output/Data.Lens.Internal.Tagged/index.js
  var Tagged = function(x2) {
    return x2;
  };
  var taggedProfunctor = {
    dimap: function(v2) {
      return function(g2) {
        return function(v1) {
          return g2(v1);
        };
      };
    }
  };
  var taggedChoice = {
    left: function(v2) {
      return new Left(v2);
    },
    right: function(v2) {
      return new Right(v2);
    },
    Profunctor0: function() {
      return taggedProfunctor;
    }
  };

  // output/Data.Lens.Fold/index.js
  var unwrap5 = /* @__PURE__ */ unwrap();
  var foldMapOf = /* @__PURE__ */ under()()(Forget);
  var has = function(dictHeytingAlgebra) {
    var tt3 = tt(dictHeytingAlgebra);
    return function(p2) {
      var $126 = foldMapOf(p2)($$const(tt3));
      return function($127) {
        return unwrap5($126($127));
      };
    };
  };
  var preview = function(p2) {
    var $135 = foldMapOf(p2)(function($137) {
      return First(Just.create($137));
    });
    return function($136) {
      return unwrap5($135($136));
    };
  };

  // output/Data.Lens.Getter/index.js
  var unwrap6 = /* @__PURE__ */ unwrap();
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var view = function(l2) {
    return unwrap6(l2(identity11));
  };
  var viewOn = function(s2) {
    return function(l2) {
      return view(l2)(s2);
    };
  };
  var use = function(dictMonadState) {
    var gets7 = gets(dictMonadState);
    return function(p2) {
      return gets7(function(v2) {
        return viewOn(v2)(p2);
      });
    };
  };
  var to2 = function(f) {
    return function(p2) {
      var $10 = unwrap6(p2);
      return function($11) {
        return $10(f($11));
      };
    };
  };

  // output/Data.Lens.Iso/index.js
  var coerce4 = /* @__PURE__ */ coerce();
  var iso = function(f) {
    return function(g2) {
      return function(dictProfunctor) {
        var dimap3 = dimap(dictProfunctor);
        return function(pab) {
          return dimap3(f)(g2)(pab);
        };
      };
    };
  };
  var coerced = function() {
    return function() {
      return function(dictProfunctor) {
        return iso(coerce4)(coerce4)(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Iso.Newtype/index.js
  var coerced2 = /* @__PURE__ */ coerced()();
  var _Newtype = function() {
    return function() {
      return function(dictProfunctor) {
        return coerced2(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Prism/index.js
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var guard3 = /* @__PURE__ */ guard(alternativeMaybe);
  var review = /* @__PURE__ */ under()()(Tagged);
  var prism = function(to3) {
    return function(fro) {
      return function(dictChoice) {
        var Profunctor0 = dictChoice.Profunctor0();
        var dimap3 = dimap(Profunctor0);
        var right2 = right(dictChoice);
        var rmap3 = rmap(Profunctor0);
        return function(pab) {
          return dimap3(fro)(either(identity12)(identity12))(right2(rmap3(to3)(pab)));
        };
      };
    };
  };
  var prism$prime = function(to3) {
    return function(fro) {
      return function(dictChoice) {
        return prism(to3)(function(s2) {
          return maybe(new Left(s2))(Right.create)(fro(s2));
        })(dictChoice);
      };
    };
  };
  var nearly = function(x2) {
    return function(f) {
      return function(dictChoice) {
        return prism$prime($$const(x2))(function($38) {
          return guard3(f($38));
        })(dictChoice);
      };
    };
  };
  var only = function(dictEq) {
    var eq25 = eq(dictEq);
    return function(x2) {
      return function(dictChoice) {
        return nearly(x2)(function(v2) {
          return eq25(v2)(x2);
        })(dictChoice);
      };
    };
  };

  // output/Data.Lens.Lens/index.js
  var lens$prime = function(to3) {
    return function(dictStrong) {
      var dimap3 = dimap(dictStrong.Profunctor0());
      var first2 = first(dictStrong);
      return function(pab) {
        return dimap3(to3)(function(v2) {
          return v2.value1(v2.value0);
        })(first2(pab));
      };
    };
  };
  var lens = function(get4) {
    return function(set3) {
      return function(dictStrong) {
        return lens$prime(function(s2) {
          return new Tuple(get4(s2), function(b2) {
            return set3(s2)(b2);
          });
        })(dictStrong);
      };
    };
  };

  // output/Record/index.js
  var set = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l2) {
          return function(b2) {
            return function(r) {
              return unsafeSet(reflectSymbol2(l2))(b2)(r);
            };
          };
        };
      };
    };
  };
  var insert4 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l2) {
          return function(a3) {
            return function(r) {
              return unsafeSet(reflectSymbol2(l2))(a3)(r);
            };
          };
        };
      };
    };
  };
  var get2 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(l2) {
        return function(r) {
          return unsafeGet(reflectSymbol2(l2))(r);
        };
      };
    };
  };

  // output/Data.Lens.Record/index.js
  var prop = function(dictIsSymbol) {
    var get4 = get2(dictIsSymbol)();
    var set3 = set(dictIsSymbol)()();
    return function() {
      return function() {
        return function(l2) {
          return function(dictStrong) {
            return lens(get4(l2))(flip(set3(l2)))(dictStrong);
          };
        };
      };
    };
  };

  // output/Data.Lens.Setter/index.js
  var over2 = function(l2) {
    return l2;
  };
  var set2 = function(l2) {
    return function(b2) {
      return over2(l2)($$const(b2));
    };
  };
  var modifying = function(dictMonadState) {
    var $$void12 = $$void(dictMonadState.Monad0().Bind1().Apply0().Functor0());
    var modify5 = modify3(dictMonadState);
    return function(p2) {
      return function(f) {
        return $$void12(modify5(over2(p2)(f)));
      };
    };
  };
  var assign = function(dictMonadState) {
    var $$void12 = $$void(dictMonadState.Monad0().Bind1().Apply0().Functor0());
    var modify5 = modify3(dictMonadState);
    return function(p2) {
      return function(b2) {
        return $$void12(modify5(set2(p2)(b2)));
      };
    };
  };
  var appendModifying = function(dictMonadState) {
    var modifying1 = modifying(dictMonadState);
    return function(dictSemigroup) {
      var append22 = append(dictSemigroup);
      return function(p2) {
        var $96 = modifying1(p2);
        var $97 = flip(append22);
        return function($98) {
          return $96($97($98));
        };
      };
    };
  };

  // output/Game.Capacity/index.js
  var show4 = /* @__PURE__ */ show(showInt);
  var OneBit = /* @__PURE__ */ function() {
    function OneBit2() {
    }
    ;
    OneBit2.value = new OneBit2();
    return OneBit2;
  }();
  var TwoBit = /* @__PURE__ */ function() {
    function TwoBit2() {
    }
    ;
    TwoBit2.value = new TwoBit2();
    return TwoBit2;
  }();
  var FourBit = /* @__PURE__ */ function() {
    function FourBit2() {
    }
    ;
    FourBit2.value = new FourBit2();
    return FourBit2;
  }();
  var EightBit = /* @__PURE__ */ function() {
    function EightBit2() {
    }
    ;
    EightBit2.value = new EightBit2();
    return EightBit2;
  }();
  var eqCapacity = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof OneBit && y2 instanceof OneBit) {
          return true;
        }
        ;
        if (x2 instanceof TwoBit && y2 instanceof TwoBit) {
          return true;
        }
        ;
        if (x2 instanceof FourBit && y2 instanceof FourBit) {
          return true;
        }
        ;
        if (x2 instanceof EightBit && y2 instanceof EightBit) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var ordCapacity = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof OneBit && y2 instanceof OneBit) {
          return EQ.value;
        }
        ;
        if (x2 instanceof OneBit) {
          return LT.value;
        }
        ;
        if (y2 instanceof OneBit) {
          return GT.value;
        }
        ;
        if (x2 instanceof TwoBit && y2 instanceof TwoBit) {
          return EQ.value;
        }
        ;
        if (x2 instanceof TwoBit) {
          return LT.value;
        }
        ;
        if (y2 instanceof TwoBit) {
          return GT.value;
        }
        ;
        if (x2 instanceof FourBit && y2 instanceof FourBit) {
          return EQ.value;
        }
        ;
        if (x2 instanceof FourBit) {
          return LT.value;
        }
        ;
        if (y2 instanceof FourBit) {
          return GT.value;
        }
        ;
        if (x2 instanceof EightBit && y2 instanceof EightBit) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Game.Capacity (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return eqCapacity;
    }
  };
  var toInt = function(v2) {
    if (v2 instanceof OneBit) {
      return 1;
    }
    ;
    if (v2 instanceof TwoBit) {
      return 2;
    }
    ;
    if (v2 instanceof FourBit) {
      return 4;
    }
    ;
    if (v2 instanceof EightBit) {
      return 8;
    }
    ;
    throw new Error("Failed pattern match at Game.Capacity (line 17, column 9 - line 21, column 16): " + [v2.constructor.name]);
  };
  var showCapacity = {
    show: function(capacity) {
      return "Capacity " + show4(toInt(capacity));
    }
  };
  var halveCapacity = function(v2) {
    if (v2 instanceof OneBit) {
      return Nothing.value;
    }
    ;
    if (v2 instanceof TwoBit) {
      return new Just(OneBit.value);
    }
    ;
    if (v2 instanceof FourBit) {
      return new Just(TwoBit.value);
    }
    ;
    if (v2 instanceof EightBit) {
      return new Just(FourBit.value);
    }
    ;
    throw new Error("Failed pattern match at Game.Capacity (line 32, column 17 - line 36, column 27): " + [v2.constructor.name]);
  };
  var doubleCapacity = function(v2) {
    if (v2 instanceof OneBit) {
      return new Just(TwoBit.value);
    }
    ;
    if (v2 instanceof TwoBit) {
      return new Just(FourBit.value);
    }
    ;
    if (v2 instanceof FourBit) {
      return new Just(EightBit.value);
    }
    ;
    if (v2 instanceof EightBit) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Game.Capacity (line 24, column 18 - line 28, column 22): " + [v2.constructor.name]);
  };

  // output/Game.Port/index.js
  var show5 = /* @__PURE__ */ show(showCapacity);
  var eq3 = /* @__PURE__ */ eq(eqCapacity);
  var compare4 = /* @__PURE__ */ compare(ordCapacity);
  var _Newtype2 = /* @__PURE__ */ _Newtype()();
  var prop2 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "portType";
    }
  })()();
  var prop1 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "capacity";
    }
  })()();
  var Input = /* @__PURE__ */ function() {
    function Input2() {
    }
    ;
    Input2.value = new Input2();
    return Input2;
  }();
  var Output = /* @__PURE__ */ function() {
    function Output2() {
    }
    ;
    Output2.value = new Output2();
    return Output2;
  }();
  var showPortType = {
    show: function(v2) {
      if (v2 instanceof Input) {
        return "Input";
      }
      ;
      if (v2 instanceof Output) {
        return "Output";
      }
      ;
      throw new Error("Failed pattern match at Game.Port (line 26, column 10 - line 28, column 23): " + [v2.constructor.name]);
    }
  };
  var show1 = /* @__PURE__ */ show(showPortType);
  var showPort = {
    show: function(v2) {
      return "(" + (show1(v2.portType) + (" " + (show5(v2.capacity) + ")")));
    }
  };
  var eqPortType = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Input && y2 instanceof Input) {
          return true;
        }
        ;
        if (x2 instanceof Output && y2 instanceof Output) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq14 = /* @__PURE__ */ eq(eqPortType);
  var ordPortType = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof Input && y2 instanceof Input) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Input) {
          return LT.value;
        }
        ;
        if (y2 instanceof Input) {
          return GT.value;
        }
        ;
        if (x2 instanceof Output && y2 instanceof Output) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Game.Port (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return eqPortType;
    }
  };
  var compare13 = /* @__PURE__ */ compare(ordPortType);
  var eqPort = {
    eq: function(x2) {
      return function(y2) {
        return eq3(x2.capacity)(y2.capacity) && eq14(x2.portType)(y2.portType);
      };
    }
  };
  var eq22 = /* @__PURE__ */ eq(eqPort);
  var ordPort = {
    compare: function(x2) {
      return function(y2) {
        var v2 = compare4(x2.capacity)(y2.capacity);
        if (v2 instanceof LT) {
          return LT.value;
        }
        ;
        if (v2 instanceof GT) {
          return GT.value;
        }
        ;
        return compare13(x2.portType)(y2.portType);
      };
    },
    Eq0: function() {
      return eqPort;
    }
  };
  var outputPort = function(capacity) {
    return {
      portType: Output.value,
      capacity
    };
  };
  var matchingPortType = function(v2) {
    if (v2 instanceof Input) {
      return Output.value;
    }
    ;
    if (v2 instanceof Output) {
      return Input.value;
    }
    ;
    throw new Error("Failed pattern match at Game.Port (line 31, column 20 - line 33, column 18): " + [v2.constructor.name]);
  };
  var inputPort = function(capacity) {
    return {
      portType: Input.value,
      capacity
    };
  };
  var createPort = function(portType1) {
    return function(capacity) {
      return {
        portType: portType1,
        capacity
      };
    };
  };
  var _portType = function(dictStrong) {
    var $72 = _Newtype2(dictStrong.Profunctor0());
    var $73 = prop2($$Proxy.value)(dictStrong);
    return function($74) {
      return $72($73($74));
    };
  };
  var _portType1 = /* @__PURE__ */ _portType(strongForget);
  var isInput = /* @__PURE__ */ has(heytingAlgebraBoolean)(/* @__PURE__ */ function() {
    var $75 = only(eqPortType)(Input.value)(choiceForget(monoidDisj(heytingAlgebraBoolean)));
    return function($76) {
      return _portType1($75($76));
    };
  }());
  var isOutput = /* @__PURE__ */ function() {
    var $77 = not(heytingAlgebraBoolean);
    return function($78) {
      return $77(isInput($78));
    };
  }();
  var matchingPort = /* @__PURE__ */ over2(/* @__PURE__ */ _portType(strongFn))(matchingPortType);
  var portMatches = function(port2) {
    return function(otherPort) {
      return eq22(port2)(matchingPort(otherPort));
    };
  };
  var portType = /* @__PURE__ */ view(_portType1);
  var _portCapacity = function(dictStrong) {
    var $79 = _Newtype2(dictStrong.Profunctor0());
    var $80 = prop1($$Proxy.value)(dictStrong);
    return function($81) {
      return $79($80($81));
    };
  };
  var portCapacity = /* @__PURE__ */ view(/* @__PURE__ */ _portCapacity(strongForget));

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str) {
      return str.codePointAt(0);
    } : fallback;
  };
  var _codePointAt = function(fallback) {
    return function(Just2) {
      return function(Nothing2) {
        return function(unsafeCodePointAt02) {
          return function(index5) {
            return function(str) {
              var length13 = str.length;
              if (index5 < 0 || index5 >= length13)
                return Nothing2;
              if (hasStringIterator) {
                var iter = str[Symbol.iterator]();
                for (var i2 = index5; ; --i2) {
                  var o = iter.next();
                  if (o.done)
                    return Nothing2;
                  if (i2 === 0)
                    return Just2(unsafeCodePointAt02(o.value));
                }
              }
              return fallback(index5)(str);
            };
          };
        };
      };
    };
  };
  var _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };
  var _take = function(fallback) {
    return function(n) {
      if (hasStringIterator) {
        return function(str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i2 = 0; i2 < n; ++i2) {
            var o = iter.next();
            if (o.done)
              return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };
  var _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt02) {
      if (hasArrayFrom) {
        return function(str) {
          return Array.from(str, unsafeCodePointAt02);
        };
      }
      return fallback;
    };
  };

  // output/Data.String.Common/foreign.js
  var replace = function(s1) {
    return function(s2) {
      return function(s3) {
        return s3.replace(s1, s2);
      };
    };
  };
  var replaceAll = function(s1) {
    return function(s2) {
      return function(s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
      };
    };
  };
  var split = function(sep) {
    return function(s2) {
      return s2.split(sep);
    };
  };
  var toLower = function(s2) {
    return s2.toLowerCase();
  };
  var toUpper = function(s2) {
    return s2.toUpperCase();
  };
  var joinWith = function(s2) {
    return function(xs) {
      return xs.join(s2);
    };
  };

  // output/Data.String.Common/index.js
  var $$null3 = function(s2) {
    return s2 === "";
  };

  // output/Data.String.CodePoints/index.js
  var $runtime_lazy6 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var fromEnum3 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var map14 = /* @__PURE__ */ map(functorMaybe);
  var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var div3 = /* @__PURE__ */ div(euclideanRingInt);
  var mod4 = /* @__PURE__ */ mod(euclideanRingInt);
  var compare5 = /* @__PURE__ */ compare(ordInt);
  var CodePoint = function(x2) {
    return x2;
  };
  var unsurrogate = function(lead) {
    return function(trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };
  var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
  };
  var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
  };
  var uncons3 = function(s2) {
    var v2 = length3(s2);
    if (v2 === 0) {
      return Nothing.value;
    }
    ;
    if (v2 === 1) {
      return new Just({
        head: fromEnum3(charAt(0)(s2)),
        tail: ""
      });
    }
    ;
    var cu1 = fromEnum3(charAt(1)(s2));
    var cu0 = fromEnum3(charAt(0)(s2));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) {
      return new Just({
        head: unsurrogate(cu0)(cu1),
        tail: drop2(2)(s2)
      });
    }
    ;
    return new Just({
      head: cu0,
      tail: drop2(1)(s2)
    });
  };
  var unconsButWithTuple = function(s2) {
    return map14(function(v2) {
      return new Tuple(v2.head, v2.tail);
    })(uncons3(s2));
  };
  var toCodePointArrayFallback = function(s2) {
    return unfoldr2(unconsButWithTuple)(s2);
  };
  var unsafeCodePointAt0Fallback = function(s2) {
    var cu0 = fromEnum3(charAt(0)(s2));
    var $47 = isLead(cu0) && length3(s2) > 1;
    if ($47) {
      var cu1 = fromEnum3(charAt(1)(s2));
      var $48 = isTrail(cu1);
      if ($48) {
        return unsurrogate(cu0)(cu1);
      }
      ;
      return cu0;
    }
    ;
    return cu0;
  };
  var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length6 = function($74) {
    return length4(toCodePointArray($74));
  };
  var fromCharCode2 = /* @__PURE__ */ function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton5($75($76));
    };
  }();
  var singletonFallback = function(v2) {
    if (v2 <= 65535) {
      return fromCharCode2(v2);
    }
    ;
    var lead = div3(v2 - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod4(v2 - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var singleton10 = /* @__PURE__ */ _singleton(singletonFallback);
  var takeFallback = function(v2) {
    return function(v1) {
      if (v2 < 1) {
        return "";
      }
      ;
      var v22 = uncons3(v1);
      if (v22 instanceof Just) {
        return singleton10(v22.value0.head) + takeFallback(v2 - 1 | 0)(v22.value0.tail);
      }
      ;
      return v1;
    };
  };
  var take4 = /* @__PURE__ */ _take(takeFallback);
  var eqCodePoint = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var ordCodePoint = {
    compare: function(x2) {
      return function(y2) {
        return compare5(x2)(y2);
      };
    },
    Eq0: function() {
      return eqCodePoint;
    }
  };
  var codePointFromChar = function($77) {
    return CodePoint(fromEnum3($77));
  };
  var codePointAtFallback = function($copy_n) {
    return function($copy_s) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(n, s2) {
        var v2 = uncons3(s2);
        if (v2 instanceof Just) {
          var $66 = n === 0;
          if ($66) {
            $tco_done = true;
            return new Just(v2.value0.head);
          }
          ;
          $tco_var_n = n - 1 | 0;
          $copy_s = v2.value0.tail;
          return;
        }
        ;
        $tco_done = true;
        return Nothing.value;
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_s);
      }
      ;
      return $tco_result;
    };
  };
  var codePointAt = function(v2) {
    return function(v1) {
      if (v2 < 0) {
        return Nothing.value;
      }
      ;
      if (v2 === 0 && v1 === "") {
        return Nothing.value;
      }
      ;
      if (v2 === 0) {
        return new Just(unsafeCodePointAt0(v1));
      }
      ;
      return _codePointAt(codePointAtFallback)(Just.create)(Nothing.value)(unsafeCodePointAt0)(v2)(v1);
    };
  };
  var boundedCodePoint = {
    bottom: 0,
    top: 1114111,
    Ord0: function() {
      return ordCodePoint;
    }
  };
  var boundedEnumCodePoint = /* @__PURE__ */ function() {
    return {
      cardinality: 1114111 + 1 | 0,
      fromEnum: function(v2) {
        return v2;
      },
      toEnum: function(n) {
        if (n >= 0 && n <= 1114111) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [n.constructor.name]);
      },
      Bounded0: function() {
        return boundedCodePoint;
      },
      Enum1: function() {
        return $lazy_enumCodePoint(0);
      }
    };
  }();
  var $lazy_enumCodePoint = /* @__PURE__ */ $runtime_lazy6("enumCodePoint", "Data.String.CodePoints", function() {
    return {
      succ: defaultSucc(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      pred: defaultPred(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      Ord0: function() {
        return ordCodePoint;
      }
    };
  });

  // output/Data.UInt/foreign.js
  function from3(val) {
    return val >>> 0;
  }
  function toInt2(uval) {
    return uval | 0;
  }
  function uintAdd(x2) {
    return function(y2) {
      return x2 + y2 >>> 0;
    };
  }
  function uintMul(x2) {
    return function(y2) {
      return Math.imul(x2, y2) >>> 0;
    };
  }
  function uintSub(x2) {
    return function(y2) {
      return x2 - y2 >>> 0;
    };
  }
  function uintEq(x2) {
    return function(y2) {
      return x2 == y2;
    };
  }
  function and2(n1) {
    return function(n2) {
      return (n1 & n2) >>> 0;
    };
  }
  function or2(n1) {
    return function(n2) {
      return (n1 | n2) >>> 0;
    };
  }
  function xor(n1) {
    return function(n2) {
      return (n1 ^ n2) >>> 0;
    };
  }
  function shl(n1) {
    return function(n2) {
      return n1 << n2 >>> 0;
    };
  }
  function shr(n1) {
    return function(n2) {
      return n1 >> n2 >>> 0;
    };
  }
  function complement(n) {
    return ~n >>> 0;
  }

  // output/Data.UInt/index.js
  var uintEqInstance = {
    eq: uintEq
  };
  var fromInt = from3;
  var uintSemiring = {
    zero: /* @__PURE__ */ fromInt(0),
    add: uintAdd,
    one: /* @__PURE__ */ fromInt(1),
    mul: uintMul
  };
  var uintRing = {
    sub: uintSub,
    Semiring0: function() {
      return uintSemiring;
    }
  };

  // output/Game.Signal/index.js
  var eq4 = /* @__PURE__ */ eq(uintEqInstance);
  var power2 = /* @__PURE__ */ power(monoidString);
  var div4 = /* @__PURE__ */ div(euclideanRingInt);
  var Signal = function(x2) {
    return x2;
  };
  var Binary = /* @__PURE__ */ function() {
    function Binary2() {
    }
    ;
    Binary2.value = new Binary2();
    return Binary2;
  }();
  var Decimal = /* @__PURE__ */ function() {
    function Decimal2() {
    }
    ;
    Decimal2.value = new Decimal2();
    return Decimal2;
  }();
  var Hexadecimal = /* @__PURE__ */ function() {
    function Hexadecimal2() {
    }
    ;
    Hexadecimal2.value = new Hexadecimal2();
    return Hexadecimal2;
  }();
  var SignalRepresentation = /* @__PURE__ */ function() {
    function SignalRepresentation2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SignalRepresentation2.create = function(value0) {
      return function(value1) {
        return new SignalRepresentation2(value0, value1);
      };
    };
    return SignalRepresentation2;
  }();
  var semiringSignal = uintSemiring;
  var zero2 = /* @__PURE__ */ zero(semiringSignal);
  var semigroupSignal = {
    append: /* @__PURE__ */ add(semiringSignal)
  };
  var ringSignal = uintRing;
  var monoidSignal = {
    mempty: zero2,
    Semigroup0: function() {
      return semigroupSignal;
    }
  };
  var heytingAlgebraSignal = {
    ff: zero2,
    tt: /* @__PURE__ */ complement(/* @__PURE__ */ zero(uintSemiring)),
    not: function(v2) {
      return complement(v2);
    },
    implies: function(v2) {
      return function(v1) {
        return or2(complement(v2))(v1);
      };
    },
    disj: function(v2) {
      return function(v1) {
        return or2(v2)(v1);
      };
    },
    conj: function(v2) {
      return function(v1) {
        return and2(v2)(v1);
      };
    }
  };
  var conj1 = /* @__PURE__ */ conj(heytingAlgebraSignal);
  var eqSignal = {
    eq: function(x2) {
      return function(y2) {
        return eq4(x2)(y2);
      };
    }
  };
  var eqBase = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Binary && y2 instanceof Binary) {
          return true;
        }
        ;
        if (x2 instanceof Decimal && y2 instanceof Decimal) {
          return true;
        }
        ;
        if (x2 instanceof Hexadecimal && y2 instanceof Hexadecimal) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var xor2 = function(v2) {
    return function(v1) {
      return xor(v2)(v1);
    };
  };
  var overSignal = function(f) {
    return function(v2) {
      return f(v2);
    };
  };
  var over2Signal = function(f) {
    return function(v2) {
      return function(v1) {
        return f(v2)(v1);
      };
    };
  };
  var mkSignal = function($95) {
    return Signal(fromInt($95));
  };
  var maxValue = function(v2) {
    if (v2 instanceof OneBit) {
      return fromInt(1);
    }
    ;
    if (v2 instanceof TwoBit) {
      return fromInt(3);
    }
    ;
    if (v2 instanceof FourBit) {
      return fromInt(15);
    }
    ;
    if (v2 instanceof EightBit) {
      return fromInt(255);
    }
    ;
    throw new Error("Failed pattern match at Game.Signal (line 66, column 12 - line 70, column 35): " + [v2.constructor.name]);
  };
  var canonical = function(capacity) {
    return function(signal) {
      return conj1(signal)(maxValue(capacity));
    };
  };
  var toInt3 = function(capacity) {
    return function(signal) {
      var v2 = canonical(capacity)(signal);
      return toInt2(v2);
    };
  };
  var baseRadix = function(v2) {
    if (v2 instanceof Binary) {
      return binary;
    }
    ;
    if (v2 instanceof Decimal) {
      return decimal;
    }
    ;
    if (v2 instanceof Hexadecimal) {
      return hexadecimal;
    }
    ;
    throw new Error("Failed pattern match at Game.Signal (line 102, column 13 - line 105, column 29): " + [v2.constructor.name]);
  };
  var printSignal = function(v2) {
    var zeroPad = function(len) {
      return function(str) {
        return power2("0")(len - length6(str) | 0) + str;
      };
    };
    var numberOfDigits = function() {
      if (v2.value0 instanceof Binary) {
        return toInt(v2.value1);
      }
      ;
      if (v2.value0 instanceof Decimal) {
        if (v2.value1 instanceof EightBit) {
          return 3;
        }
        ;
        if (v2.value1 instanceof FourBit) {
          return 2;
        }
        ;
        return 1;
      }
      ;
      if (v2.value0 instanceof Hexadecimal) {
        return div4(toInt(v2.value1))(4);
      }
      ;
      throw new Error("Failed pattern match at Game.Signal (line 118, column 22 - line 124, column 53): " + [v2.value0.constructor.name]);
    }();
    var $96 = zeroPad(numberOfDigits);
    var $97 = toStringAs(baseRadix(v2.value0));
    var $98 = toInt3(v2.value1);
    return function($99) {
      return $96($97($98($99)));
    };
  };
  var showSignal = /* @__PURE__ */ function() {
    return {
      show: printSignal(new SignalRepresentation(Hexadecimal.value, EightBit.value))
    };
  }();

  // output/Game.Piece.Types/index.js
  var eqMap2 = /* @__PURE__ */ eqMap(eqCardinalDirection);
  var compare6 = /* @__PURE__ */ compare(ordString);
  var and3 = /* @__PURE__ */ and(foldableArray)(heytingAlgebraBoolean);
  var eq32 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMap2(eqPort));
  var fold3 = /* @__PURE__ */ fold2(monoidOrdering);
  var compare14 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMap(ordCardinalDirection)(ordPort));
  var lookup3 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var fix2 = /* @__PURE__ */ fix(lazyLazy);
  var filter4 = /* @__PURE__ */ filter2(ordCardinalDirection);
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorMap);
  var Connection = /* @__PURE__ */ function() {
    function Connection2(value0) {
      this.value0 = value0;
    }
    ;
    Connection2.create = function(value0) {
      return new Connection2(value0);
    };
    return Connection2;
  }();
  var PieceId = function(x2) {
    return x2;
  };
  var showPieceId = {
    show: function(v2) {
      return v2;
    }
  };
  var show6 = /* @__PURE__ */ show(showPieceId);
  var showPiece = {
    show: function(v2) {
      return "(Piece " + (show6(v2.name) + ")");
    }
  };
  var eqPieceId = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var eq42 = /* @__PURE__ */ eq(eqPieceId);
  var ordPieceId = {
    compare: function(x2) {
      return function(y2) {
        return compare6(x2)(y2);
      };
    },
    Eq0: function() {
      return eqPieceId;
    }
  };
  var compare22 = /* @__PURE__ */ compare(ordPieceId);
  var eqPiece = {
    eq: function(v2) {
      return function(v1) {
        return and3([eq42(v2.name)(v1.name), eq32(v2.ports)(v1.ports)]);
      };
    }
  };
  var ordPiece = {
    compare: function(v2) {
      return function(v1) {
        return fold3([compare22(v2.name)(v1.name), compare14(v2.ports)(v1.ports)]);
      };
    },
    Eq0: function() {
      return eqPiece;
    }
  };
  var updateCapacity = function(dir2) {
    return function(capacity) {
      return function(v2) {
        return v2.updateCapacity(dir2)(capacity);
      };
    };
  };
  var shouldRipple = function(v2) {
    return v2.shouldRipple;
  };
  var name2 = function(v2) {
    return v2.name;
  };
  var mkPieceNoGlob = function(piece) {
    var go2 = function($$this) {
      return defer2(function(v2) {
        return {
          name: piece.name,
          "eval": piece["eval"],
          ports: piece.ports,
          complexity: piece.complexity,
          shouldRipple: piece.shouldRipple,
          updateCapacity: piece.updateCapacity,
          glob: function(v1) {
            return function(v22) {
              return Nothing.value;
            };
          },
          unglob: $$this,
          isSimplifiable: piece.isSimplifiable
        };
      });
    };
    return force(fix2(go2));
  };
  var isSimplifiable = function(v2) {
    return v2.isSimplifiable;
  };
  var glob = function(dir2) {
    return function(port2) {
      return function(v2) {
        return fromMaybe(v2)(v2.glob(dir2)(port2));
      };
    };
  };
  var getPorts = function(v2) {
    return v2.ports;
  };
  var getPort = function(v2) {
    return function(dir2) {
      return lookup3(dir2)(v2.ports);
    };
  };
  var getOutputDirs = function(v2) {
    return keys2(filter4(isOutput)(v2.ports));
  };
  var getInputDirs = function(v2) {
    return keys2(filter4(isInput)(v2.ports));
  };
  var $$eval = function(v2) {
    return v2["eval"];
  };
  var defaultPortInfo = function(piece) {
    return mapFlipped2(getPorts(piece))(function(port2) {
      return {
        connected: false,
        port: port2,
        signal: mkSignal(0)
      };
    });
  };

  // output/Game.GameEvent/index.js
  var AddPieceEvent = /* @__PURE__ */ function() {
    function AddPieceEvent2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AddPieceEvent2.create = function(value0) {
      return function(value1) {
        return new AddPieceEvent2(value0, value1);
      };
    };
    return AddPieceEvent2;
  }();
  var RemovePieceEvent = /* @__PURE__ */ function() {
    function RemovePieceEvent2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RemovePieceEvent2.create = function(value0) {
      return function(value1) {
        return new RemovePieceEvent2(value0, value1);
      };
    };
    return RemovePieceEvent2;
  }();
  var AddPathEvent = /* @__PURE__ */ function() {
    function AddPathEvent2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    AddPathEvent2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new AddPathEvent2(value0, value1, value22);
        };
      };
    };
    return AddPathEvent2;
  }();
  var GameStarted = /* @__PURE__ */ function() {
    function GameStarted2() {
    }
    ;
    GameStarted2.value = new GameStarted2();
    return GameStarted2;
  }();
  var BoardEvent = /* @__PURE__ */ function() {
    function BoardEvent3(value0) {
      this.value0 = value0;
    }
    ;
    BoardEvent3.create = function(value0) {
      return new BoardEvent3(value0);
    };
    return BoardEvent3;
  }();

  // output/GlobalState/index.js
  var NewGameEvent = /* @__PURE__ */ function() {
    function NewGameEvent2(value0) {
      this.value0 = value0;
    }
    ;
    NewGameEvent2.create = function(value0) {
      return new NewGameEvent2(value0);
    };
    return NewGameEvent2;
  }();
  var reduce = function(state3) {
    return function(v2) {
      return {
        enableDemonstrations: state3.enableDemonstrations,
        lastGameEvent: v2.value0
      };
    };
  };
  var newBoardEvent = function(boardEvent) {
    return new NewGameEvent(new BoardEvent(boardEvent));
  };
  var initialGlobalState = /* @__PURE__ */ function() {
    return {
      lastGameEvent: GameStarted.value,
      enableDemonstrations: true
    };
  }();

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce;
  var mkExists = unsafeCoerce;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  }();
  var unCoyoneda = function(f) {
    return function(v2) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v2);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v2) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v2);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ function() {
    function OrdBox2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new OrdBox2(value0, value1, value22);
        };
      };
    };
    return OrdBox2;
  }();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v2) {
      return function(v1) {
        return v2.value0(v2.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v2) {
      return function(v1) {
        return v2.value1(v2.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop(ordTuple2);
  var lookup1 = /* @__PURE__ */ lookup2(ordTuple2);
  var insert1 = /* @__PURE__ */ insert(ordTuple2);
  var pop2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(v2) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(v2);
            };
          };
        };
      };
    };
  };
  var lookup4 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(v2) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(v2);
            };
          };
        };
      };
    };
  };
  var insert5 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(val) {
              return function(v2) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(val)(v2);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_16 = traverse_(dictApplicative)(foldableMap);
    return function(v2) {
      return function(k) {
        return traverse_16(function($54) {
          return k($54);
        })(v2);
      };
    };
  };
  var empty4 = empty2;

  // output/DOM.HTML.Indexed.InputType/index.js
  var InputButton = /* @__PURE__ */ function() {
    function InputButton2() {
    }
    ;
    InputButton2.value = new InputButton2();
    return InputButton2;
  }();
  var InputCheckbox = /* @__PURE__ */ function() {
    function InputCheckbox2() {
    }
    ;
    InputCheckbox2.value = new InputCheckbox2();
    return InputCheckbox2;
  }();
  var InputColor = /* @__PURE__ */ function() {
    function InputColor2() {
    }
    ;
    InputColor2.value = new InputColor2();
    return InputColor2;
  }();
  var InputDate = /* @__PURE__ */ function() {
    function InputDate2() {
    }
    ;
    InputDate2.value = new InputDate2();
    return InputDate2;
  }();
  var InputDatetimeLocal = /* @__PURE__ */ function() {
    function InputDatetimeLocal2() {
    }
    ;
    InputDatetimeLocal2.value = new InputDatetimeLocal2();
    return InputDatetimeLocal2;
  }();
  var InputEmail = /* @__PURE__ */ function() {
    function InputEmail2() {
    }
    ;
    InputEmail2.value = new InputEmail2();
    return InputEmail2;
  }();
  var InputFile = /* @__PURE__ */ function() {
    function InputFile2() {
    }
    ;
    InputFile2.value = new InputFile2();
    return InputFile2;
  }();
  var InputHidden = /* @__PURE__ */ function() {
    function InputHidden2() {
    }
    ;
    InputHidden2.value = new InputHidden2();
    return InputHidden2;
  }();
  var InputImage = /* @__PURE__ */ function() {
    function InputImage2() {
    }
    ;
    InputImage2.value = new InputImage2();
    return InputImage2;
  }();
  var InputMonth = /* @__PURE__ */ function() {
    function InputMonth2() {
    }
    ;
    InputMonth2.value = new InputMonth2();
    return InputMonth2;
  }();
  var InputNumber = /* @__PURE__ */ function() {
    function InputNumber2() {
    }
    ;
    InputNumber2.value = new InputNumber2();
    return InputNumber2;
  }();
  var InputPassword = /* @__PURE__ */ function() {
    function InputPassword2() {
    }
    ;
    InputPassword2.value = new InputPassword2();
    return InputPassword2;
  }();
  var InputRadio = /* @__PURE__ */ function() {
    function InputRadio2() {
    }
    ;
    InputRadio2.value = new InputRadio2();
    return InputRadio2;
  }();
  var InputRange = /* @__PURE__ */ function() {
    function InputRange2() {
    }
    ;
    InputRange2.value = new InputRange2();
    return InputRange2;
  }();
  var InputReset = /* @__PURE__ */ function() {
    function InputReset2() {
    }
    ;
    InputReset2.value = new InputReset2();
    return InputReset2;
  }();
  var InputSearch = /* @__PURE__ */ function() {
    function InputSearch2() {
    }
    ;
    InputSearch2.value = new InputSearch2();
    return InputSearch2;
  }();
  var InputSubmit = /* @__PURE__ */ function() {
    function InputSubmit2() {
    }
    ;
    InputSubmit2.value = new InputSubmit2();
    return InputSubmit2;
  }();
  var InputTel = /* @__PURE__ */ function() {
    function InputTel2() {
    }
    ;
    InputTel2.value = new InputTel2();
    return InputTel2;
  }();
  var InputText = /* @__PURE__ */ function() {
    function InputText2() {
    }
    ;
    InputText2.value = new InputText2();
    return InputText2;
  }();
  var InputTime = /* @__PURE__ */ function() {
    function InputTime2() {
    }
    ;
    InputTime2.value = new InputTime2();
    return InputTime2;
  }();
  var InputUrl = /* @__PURE__ */ function() {
    function InputUrl2() {
    }
    ;
    InputUrl2.value = new InputUrl2();
    return InputUrl2;
  }();
  var InputWeek = /* @__PURE__ */ function() {
    function InputWeek2() {
    }
    ;
    InputWeek2.value = new InputWeek2();
    return InputWeek2;
  }();
  var renderInputType = function(v2) {
    if (v2 instanceof InputButton) {
      return "button";
    }
    ;
    if (v2 instanceof InputCheckbox) {
      return "checkbox";
    }
    ;
    if (v2 instanceof InputColor) {
      return "color";
    }
    ;
    if (v2 instanceof InputDate) {
      return "date";
    }
    ;
    if (v2 instanceof InputDatetimeLocal) {
      return "datetime-local";
    }
    ;
    if (v2 instanceof InputEmail) {
      return "email";
    }
    ;
    if (v2 instanceof InputFile) {
      return "file";
    }
    ;
    if (v2 instanceof InputHidden) {
      return "hidden";
    }
    ;
    if (v2 instanceof InputImage) {
      return "image";
    }
    ;
    if (v2 instanceof InputMonth) {
      return "month";
    }
    ;
    if (v2 instanceof InputNumber) {
      return "number";
    }
    ;
    if (v2 instanceof InputPassword) {
      return "password";
    }
    ;
    if (v2 instanceof InputRadio) {
      return "radio";
    }
    ;
    if (v2 instanceof InputRange) {
      return "range";
    }
    ;
    if (v2 instanceof InputReset) {
      return "reset";
    }
    ;
    if (v2 instanceof InputSearch) {
      return "search";
    }
    ;
    if (v2 instanceof InputSubmit) {
      return "submit";
    }
    ;
    if (v2 instanceof InputTel) {
      return "tel";
    }
    ;
    if (v2 instanceof InputText) {
      return "text";
    }
    ;
    if (v2 instanceof InputTime) {
      return "time";
    }
    ;
    if (v2 instanceof InputUrl) {
      return "url";
    }
    ;
    if (v2 instanceof InputWeek) {
      return "week";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 33, column 19 - line 55, column 22): " + [v2.constructor.name]);
  };

  // output/DOM.HTML.Indexed.StepValue/index.js
  var show7 = /* @__PURE__ */ show(showNumber);
  var Any = /* @__PURE__ */ function() {
    function Any2() {
    }
    ;
    Any2.value = new Any2();
    return Any2;
  }();
  var Step = /* @__PURE__ */ function() {
    function Step3(value0) {
      this.value0 = value0;
    }
    ;
    Step3.create = function(value0) {
      return new Step3(value0);
    };
    return Step3;
  }();
  var renderStepValue = function(v2) {
    if (v2 instanceof Any) {
      return "any";
    }
    ;
    if (v2 instanceof Step) {
      return show7(v2.value0);
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 13, column 19 - line 15, column 19): " + [v2.constructor.name]);
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  }();
  var Action = /* @__PURE__ */ function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  }();
  var functorInput = {
    map: function(f) {
      return function(m2) {
        if (m2 instanceof RefUpdate) {
          return new RefUpdate(m2.value0, m2.value1);
        }
        ;
        if (m2 instanceof Action) {
          return new Action(f(m2.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Query.Input (line 0, column 0 - line 0, column 0): " + [m2.constructor.name]);
      };
    }
  };

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a3, r, f) {
    return a3 == null ? r : f(a3);
  }
  function notNull(x2) {
    return x2;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Halogen.VDom.Machine/index.js
  var Step2 = /* @__PURE__ */ function() {
    function Step3(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step3(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step3;
  }();
  var unStep = unsafeCoerce;
  var step = function(v2, a3) {
    return v2.value2(v2.value1, a3);
  };
  var mkStep = unsafeCoerce;
  var halt = function(v2) {
    return v2.value3(v2.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v2) {
    return v2.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map15 = /* @__PURE__ */ map(functorArray);
  var map16 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ function() {
    function Text2(value0) {
      this.value0 = value0;
    }
    ;
    Text2.create = function(value0) {
      return new Text2(value0);
    };
    return Text2;
  }();
  var Elem = /* @__PURE__ */ function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  }();
  var Keyed = /* @__PURE__ */ function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  }();
  var Widget = /* @__PURE__ */ function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  }();
  var Grafted = /* @__PURE__ */ function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  }();
  var Graft = /* @__PURE__ */ function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  }();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g2) {
        return unGraft(function(v2) {
          return graft(new Graft(function($63) {
            return f(v2.value0($63));
          }, function($64) {
            return g2(v2.value1($64));
          }, v2.value2));
        });
      };
    }
  };
  var bimap2 = /* @__PURE__ */ bimap(bifunctorGraft);
  var bifunctorVDom = {
    bimap: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Text) {
            return new Text(v22.value0);
          }
          ;
          if (v22 instanceof Grafted) {
            return new Grafted(bimap2(v2)(v1)(v22.value0));
          }
          ;
          return new Grafted(graft(new Graft(v2, v1, v22)));
        };
      };
    }
  };
  var runGraft = /* @__PURE__ */ unGraft(function(v2) {
    var go2 = function(v22) {
      if (v22 instanceof Text) {
        return new Text(v22.value0);
      }
      ;
      if (v22 instanceof Elem) {
        return new Elem(v22.value0, v22.value1, v2.value0(v22.value2), map15(go2)(v22.value3));
      }
      ;
      if (v22 instanceof Keyed) {
        return new Keyed(v22.value0, v22.value1, v2.value0(v22.value2), map15(map16(go2))(v22.value3));
      }
      ;
      if (v22 instanceof Widget) {
        return new Widget(v2.value1(v22.value0));
      }
      ;
      if (v22 instanceof Grafted) {
        return new Grafted(bimap2(v2.value0)(v2.value1)(v22.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v22.constructor.name]);
    };
    return go2(v2.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key2, obj) {
    return obj[key2];
  }
  function unsafeHasAny(key2, obj) {
    return obj.hasOwnProperty(key2);
  }
  function unsafeSetAny(key2, val, obj) {
    obj[key2] = val;
  }
  function forE2(a3, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a3.length; i2++) {
      b2.push(f(i2, a3[i2]));
    }
    return b2;
  }
  function forEachE(a3, f) {
    for (var i2 = 0; i2 < a3.length; i2++) {
      f(a3[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a22, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a22.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a22[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a22[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as3, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as3.length; i2++) {
      var a3 = as3[i2];
      var k = fk(a3);
      o[k] = f(k, i2, a3);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as3, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as3.length; i2++) {
      var a3 = as3[i2];
      var k = fk(a3);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a3);
      } else {
        o2[k] = f3(k, i2, a3);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a3, b2) {
    return a3 === b2;
  }
  function createTextNode(s2, doc) {
    return doc.createTextNode(s2);
  }
  function setTextContent(s2, n) {
    n.textContent = s2;
  }
  function createElement(ns, name16, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name16);
    } else {
      return doc.createElement(name16);
    }
  }
  function insertChildIx(i2, a3, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a3) {
      b2.insertBefore(a3, n);
    }
  }
  function removeChild(a3, b2) {
    if (b2 && a3.parentNode === b2) {
      b2.removeChild(a3);
    }
  }
  function parentNode(a3) {
    return a3.parentNode;
  }
  function setAttribute(ns, attr4, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr4, val);
    } else {
      el.setAttribute(attr4, val);
    }
  }
  function removeAttribute(ns, attr4, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr4);
    } else {
      el.removeAttribute(attr4);
    }
  }
  function hasAttribute(ns, attr4, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr4);
    } else {
      return el.hasAttribute(attr4);
    }
  }
  function addEventListener(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name16) {
    return function(doctype) {
      return doctype[name16];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");
  function classList(element4) {
    return function() {
      return element4.classList;
    };
  }
  function setAttribute2(name16) {
    return function(value14) {
      return function(element4) {
        return function() {
          element4.setAttribute(name16, value14);
        };
      };
    };
  }
  function clientWidth(el) {
    return function() {
      return el.clientWidth;
    };
  }
  function getBoundingClientRect(el) {
    return function() {
      var rect2 = el.getBoundingClientRect();
      return {
        top: rect2.top,
        right: rect2.right,
        bottom: rect2.bottom,
        left: rect2.left,
        width: rect2.width,
        height: rect2.height,
        x: rect2.x,
        y: rect2.y
      };
    };
  }

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector2) {
    return function(node) {
      return function() {
        return node.querySelector(selector2);
      };
    };
  }

  // output/Web.DOM.ParentNode/index.js
  var map17 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map17(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.Internal.FFI/foreign.js
  function _unsafeReadProtoTagged(nothing, just, name16, value14) {
    if (typeof window !== "undefined") {
      var ty = window[name16];
      if (ty != null && value14 instanceof ty) {
        return just(value14);
      }
    }
    var obj = value14;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name16) {
        return just(value14);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  }

  // output/Web.Internal.FFI/index.js
  var unsafeReadProtoTagged = function(name16) {
    return function(value14) {
      return _unsafeReadProtoTagged(Nothing.value, Just.create, name16, value14);
    };
  };

  // output/Web.DOM.Element/index.js
  var toNode = unsafeCoerce;
  var fromEventTarget = /* @__PURE__ */ unsafeReadProtoTagged("Element");

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy7 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var haltWidget = function(v2) {
    return halt(v2.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy7("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step(state3.widget, vdom.value0);
        var res$prime = unStep(function(v2) {
          return mkStep(new Step2(v2.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v2) {
    var parent2 = parentNode(v2.node);
    return removeChild(v2.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy7("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step2(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step2(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v2) {
    var parent2 = parentNode(v2.node);
    removeChild(v2.node, parent2);
    forInE(v2.children, function(v1, s2) {
      return halt(s2);
    });
    return halt(v2.attrs);
  };
  var haltElem = function(v2) {
    var parent2 = parentNode(v2.node);
    removeChild(v2.node, parent2);
    forEachE(v2.children, halt);
    return halt(v2.attrs);
  };
  var eqElemSpec = function(ns1, v2, ns2, v1) {
    var $63 = v2 === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy7("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v2 = length4(vdom.value3);
        var v1 = length4(state3.children);
        if (v1 === 0 && v2 === 0) {
          var attrs2 = step(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step2(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v22, s2) {
          return halt(s2);
        };
        var onThese = function(ix5, s2, v22) {
          var res = step(s2, v22);
          insertChildIx(ix5, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix5, v22) {
          var res = state3.build(v22);
          insertChildIx(ix5, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step2(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy7("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v2 = length4(vdom.value3);
        if (state3.length === 0 && v2 === 0) {
          var attrs2 = step(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step2(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v22, s2) {
          return halt(s2);
        };
        var onThese = function(v22, ix$prime, s2, v3) {
          var res = step(s2, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v22, ix5, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix5, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v2
        };
        return mkStep(new Step2(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v2, build, w) {
    var res = v2.buildWidget(v2)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step2(v1.value0, {
        build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v2, build, s2) {
    var node = createTextNode(s2, v2.document);
    var state3 = {
      build,
      node,
      value: s2
    };
    return mkStep(new Step2(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v2, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v2.document);
    var node = toNode(el);
    var onChild = function(v1, ix5, v22) {
      var res = build(v22.value1);
      insertChildIx(ix5, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v2.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length4(ch1)
    };
    return mkStep(new Step2(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v2, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v2.document);
    var node = toNode(el);
    var onChild = function(ix5, child) {
      var res = build(child);
      insertChildIx(ix5, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v2.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step2(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy7("build", "Halogen.VDom.DOM", function() {
      return function(v2) {
        if (v2 instanceof Text) {
          return buildText(spec, $lazy_build(59), v2.value0);
        }
        ;
        if (v2 instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v2.value0, v2.value1, v2.value2, v2.value3);
        }
        ;
        if (v2 instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v2.value0, v2.value1, v2.value2, v2.value3);
        }
        ;
        if (v2 instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v2.value0);
        }
        ;
        if (v2 instanceof Grafted) {
          return $lazy_build(63)(runGraft(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v2.constructor.name]);
      };
    });
    var build = $lazy_build(58);
    return build;
  };

  // output/Foreign.Object/foreign.js
  function _fmapObject(m0, f) {
    var m2 = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m2[k] = f(m0[k]);
      }
    }
    return m2;
  }
  function _mapWithKey(m0, f) {
    var m2 = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m2[k] = f(k)(m0[k]);
      }
    }
    return m2;
  }
  function _foldM(bind40) {
    return function(f) {
      return function(mz) {
        return function(m2) {
          var acc = mz;
          function g2(k2) {
            return function(z2) {
              return f(z2)(k2)(m2[k2]);
            };
          }
          for (var k in m2) {
            if (hasOwnProperty.call(m2, k)) {
              acc = bind40(acc)(g2(k));
            }
          }
          return acc;
        };
      };
    };
  }
  function _lookup(no, yes, k, m2) {
    return k in m2 ? yes(m2[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m2) {
      var r = [];
      for (var k in m2) {
        if (hasOwnProperty.call(m2, k)) {
          r.push(f(k)(m2[k]));
        }
      }
      return r;
    };
  }
  var keys3 = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Foreign.Object/index.js
  var foldr4 = /* @__PURE__ */ foldr(foldableArray);
  var values2 = /* @__PURE__ */ toArrayWithKey(function(v2) {
    return function(v1) {
      return v1;
    };
  });
  var toUnfoldable5 = function(dictUnfoldable) {
    var $89 = toUnfoldable3(dictUnfoldable);
    var $90 = toArrayWithKey(Tuple.create);
    return function($91) {
      return $89($90($91));
    };
  };
  var mapWithKey = function(f) {
    return function(m2) {
      return _mapWithKey(m2, f);
    };
  };
  var lookup5 = /* @__PURE__ */ function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  }();
  var functorObject = {
    map: function(f) {
      return function(m2) {
        return _fmapObject(m2, f);
      };
    }
  };
  var functorWithIndexObject = {
    mapWithIndex: mapWithKey,
    Functor0: function() {
      return functorObject;
    }
  };
  var fromHomogeneous = function() {
    return unsafeCoerce;
  };
  var fold4 = /* @__PURE__ */ _foldM(applyFlipped);
  var foldMap3 = function(dictMonoid) {
    var append113 = append(dictMonoid.Semigroup0());
    var mempty4 = mempty(dictMonoid);
    return function(f) {
      return fold4(function(acc) {
        return function(k) {
          return function(v2) {
            return append113(acc)(f(k)(v2));
          };
        };
      })(mempty4);
    };
  };
  var foldableObject = {
    foldl: function(f) {
      return fold4(function(z2) {
        return function(v2) {
          return f(z2);
        };
      });
    },
    foldr: function(f) {
      return function(z2) {
        return function(m2) {
          return foldr4(f)(z2)(values2(m2));
        };
      };
    },
    foldMap: function(dictMonoid) {
      var foldMap12 = foldMap3(dictMonoid);
      return function(f) {
        return foldMap12($$const(f));
      };
    }
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener2(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener2(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy8 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var map18 = /* @__PURE__ */ map(functorFn);
  var map19 = /* @__PURE__ */ map(functorMaybe);
  var Created = /* @__PURE__ */ function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  }();
  var Removed = /* @__PURE__ */ function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  }();
  var Attribute = /* @__PURE__ */ function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  }();
  var Property = /* @__PURE__ */ function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  }();
  var Handler = /* @__PURE__ */ function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  }();
  var Ref = /* @__PURE__ */ function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  }();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key2, el) {
    var v2 = hasAttribute(nullImpl, key2, el);
    if (v2) {
      return removeAttribute(nullImpl, key2, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key2, el));
    if (v1 === "string") {
      return unsafeSetAny(key2, "", el);
    }
    ;
    if (key2 === "rowSpan") {
      return unsafeSetAny(key2, 1, el);
    }
    ;
    if (key2 === "colSpan") {
      return unsafeSetAny(key2, 1, el);
    }
    ;
    return unsafeSetAny(key2, jsUndefined, el);
  };
  var propToStrKey = function(v2) {
    if (v2 instanceof Attribute && v2.value0 instanceof Just) {
      return "attr/" + (v2.value0.value0 + (":" + v2.value1));
    }
    ;
    if (v2 instanceof Attribute) {
      return "attr/:" + v2.value1;
    }
    ;
    if (v2 instanceof Property) {
      return "prop/" + v2.value0;
    }
    ;
    if (v2 instanceof Handler) {
      return "handler/" + v2.value0;
    }
    ;
    if (v2 instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v2.constructor.name]);
  };
  var propFromString = unsafeCoerce;
  var propFromNumber = unsafeCoerce;
  var propFromInt = unsafeCoerce;
  var propFromBoolean = unsafeCoerce;
  var functorProp = {
    map: function(v2) {
      return function(v1) {
        if (v1 instanceof Handler) {
          return new Handler(v1.value0, map18(map19(v2))(v1.value1));
        }
        ;
        if (v1 instanceof Ref) {
          return new Ref(map18(map19(v2))(v1.value0));
        }
        ;
        return v1;
      };
    }
  };
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v2, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v2) {
        if (v2 instanceof Just) {
          return emit(v2.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v2 = lookup5("ref")(state3.props);
        if (v2 instanceof Just && v2.value0 instanceof Ref) {
          return mbEmit(v2.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v2, v1, v11, v22) {
          if (v11 instanceof Attribute && v22 instanceof Attribute) {
            var $66 = v11.value2 === v22.value2;
            if ($66) {
              return v22;
            }
            ;
            setAttribute(toNullable(v22.value0), v22.value1, v22.value2, el);
            return v22;
          }
          ;
          if (v11 instanceof Property && v22 instanceof Property) {
            var v4 = refEq2(v11.value1, v22.value1);
            if (v4) {
              return v22;
            }
            ;
            if (v22.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v22.value1);
              if ($75) {
                return v22;
              }
              ;
              setProperty(v22.value0, v22.value1, el);
              return v22;
            }
            ;
            setProperty(v22.value0, v22.value1, el);
            return v22;
          }
          ;
          if (v11 instanceof Handler && v22 instanceof Handler) {
            var handler3 = unsafeLookup(v22.value0, prevEvents);
            write2(v22.value1)(snd(handler3))();
            pokeMutMap(v22.value0, handler3, events);
            return v22;
          }
          ;
          return v22;
        };
      };
      var applyProp = function(events) {
        return function(v2, v1, v22) {
          if (v22 instanceof Attribute) {
            setAttribute(toNullable(v22.value0), v22.value1, v22.value2, el);
            return v22;
          }
          ;
          if (v22 instanceof Property) {
            setProperty(v22.value0, v22.value1, el);
            return v22;
          }
          ;
          if (v22 instanceof Handler) {
            var v3 = unsafeGetAny(v22.value0, events);
            if (unsafeHasAny(v22.value0, events)) {
              write2(v22.value1)(snd(v3))();
              return v22;
            }
            ;
            var ref3 = $$new(v22.value1)();
            var listener = eventListener(function(ev) {
              return function __do5() {
                var f$prime = read2(ref3)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v22.value0, new Tuple(listener, ref3), events);
            addEventListener(v22.value0, listener, el);
            return v22;
          }
          ;
          if (v22 instanceof Ref) {
            mbEmit(v22.value0(new Created(el)));
            return v22;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v22.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy8("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step2(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step2(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var map20 = /* @__PURE__ */ map(functorArray);
  var map110 = /* @__PURE__ */ map(functorProp);
  var map22 = /* @__PURE__ */ map(functorInput);
  var bimap3 = /* @__PURE__ */ bimap(bifunctorVDom);
  var HTML = function(x2) {
    return x2;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text = function($29) {
    return HTML(Text.create($29));
  };
  var ref = function(f) {
    return new Ref(function($30) {
      return f(function(v2) {
        if (v2 instanceof Created) {
          return new Just(v2.value0);
        }
        ;
        if (v2 instanceof Removed) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Halogen.HTML.Core (line 109, column 21 - line 111, column 23): " + [v2.constructor.name]);
      }($30));
    });
  };
  var prop3 = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v2) {
      var $31 = Property.create(v2);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var isPropStepValue = {
    toPropValue: function($36) {
      return propFromString(renderStepValue($36));
    }
  };
  var isPropNumber = {
    toPropValue: propFromNumber
  };
  var isPropMediaType = {
    toPropValue: /* @__PURE__ */ function() {
      var $42 = unwrap();
      return function($43) {
        return propFromString($42($43));
      };
    }()
  };
  var isPropInt = {
    toPropValue: propFromInt
  };
  var isPropInputType = {
    toPropValue: function($45) {
      return propFromString(renderInputType($45));
    }
  };
  var isPropBoolean = {
    toPropValue: propFromBoolean
  };
  var handler = /* @__PURE__ */ function() {
    return Handler.create;
  }();
  var element = function(ns) {
    return function(name16) {
      return function(props) {
        return function(children2) {
          return new Elem(ns, name16, props, children2);
        };
      };
    };
  };
  var bifunctorHTML = {
    bimap: function(f) {
      return function(g2) {
        return function(v2) {
          return bimap3(map20(map110(map22(g2))))(f)(v2);
        };
      };
    }
  };
  var attr = function(ns) {
    return function(v2) {
      return Attribute.create(ns)(v2);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity13 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  }();
  var Lift = /* @__PURE__ */ function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  }();
  var Ap = /* @__PURE__ */ function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  }();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ function() {
    return Lift.create;
  }();
  var goLeft = function(dictApplicative) {
    var pure41 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure41(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply8 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply8(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x2) {
        return mkAp(new Pure(f))(x2);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure41 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z2) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v2) {
            if (v2.value1.value0 instanceof Pure) {
              var v1 = goApply1(v2.value0)(v2.value1.value1)(pure41(v2.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v2.value1.value0 instanceof Lift) {
              var v1 = goApply1(v2.value0)(v2.value1.value1)(nat(v2.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v2.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v2.value1.value0.value1, v2.value1.value1);
              $copy_v = goLeft1(v2.value0)(nextVals)(nat)(v2.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v2.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton4(z2)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity13);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  }();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  }();
  var uncons4 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v2) {
      if (v2.value0 instanceof Nil && v2.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v2.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse(v2.value1), Nil.value);
        return;
      }
      ;
      if (v2.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v2.value0.value0, new CatQueue(v2.value0.value1, v2.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v2.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc4 = function(v2) {
    return function(a3) {
      return new CatQueue(v2.value0, new Cons(a3, v2.value1));
    };
  };
  var $$null4 = function(v2) {
    if (v2.value0 instanceof Nil && v2.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty6 = /* @__PURE__ */ function() {
    return new CatQueue(Nil.value, Nil.value);
  }();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  }();
  var CatCons = /* @__PURE__ */ function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  }();
  var link = function(v2) {
    return function(v1) {
      if (v2 instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v2;
      }
      ;
      if (v2 instanceof CatCons) {
        return new CatCons(v2.value0, snoc4(v2.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v2.constructor.name, v1.constructor.name]);
    };
  };
  var foldr5 = function(k) {
    return function(b2) {
      return function(q3) {
        var foldl7 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v2, v1, v22) {
                if (v22 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v22 instanceof Cons) {
                  $tco_var_v = v2;
                  $tco_var_v1 = v2(v1)(v22.value0);
                  $copy_v2 = v22.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v2 = uncons4(xs);
              if (v2 instanceof Nothing) {
                $tco_done1 = true;
                return foldl7(function(x2) {
                  return function(i2) {
                    return i2(x2);
                  };
                })(b2)(ys);
              }
              ;
              if (v2 instanceof Just) {
                $tco_var_xs = v2.value0.value1;
                $copy_ys = new Cons(k(v2.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v2.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q3)(Nil.value);
      };
    };
  };
  var uncons5 = function(v2) {
    if (v2 instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v2 instanceof CatCons) {
      return new Just(new Tuple(v2.value0, function() {
        var $66 = $$null4(v2.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr5(link)(CatNil.value)(v2.value1);
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v2.constructor.name]);
  };
  var empty7 = /* @__PURE__ */ function() {
    return CatNil.value;
  }();
  var append4 = link;
  var semigroupCatList = {
    append: append4
  };
  var snoc5 = function(cat) {
    return function(a3) {
      return append4(cat)(new CatCons(a3, empty6));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy9 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var append5 = /* @__PURE__ */ append(semigroupCatList);
  var map21 = /* @__PURE__ */ map(functorFn);
  var Free = /* @__PURE__ */ function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  }();
  var Return = /* @__PURE__ */ function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  }();
  var Bind = /* @__PURE__ */ function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  }();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v2) {
      var runExpF = function(v23) {
        return v23;
      };
      var concatF = function(v23) {
        return function(r) {
          return new Free(v23.value0, append5(v23.value1)(r));
        };
      };
      if (v2.value0 instanceof Return) {
        var v22 = uncons5(v2.value1);
        if (v22 instanceof Nothing) {
          $tco_done = true;
          return new Return(v2.value0.value0);
        }
        ;
        if (v22 instanceof Just) {
          $copy_v = concatF(runExpF(v22.value0.value0)(v2.value0.value0))(v22.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v22.constructor.name]);
      }
      ;
      if (v2.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v2.value0.value0, function(a3) {
          return concatF(v2.value0.value1(a3))(v2.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v2.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty7);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)(function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        }())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v2) {
      return function(k) {
        return new Free(v2.value0, snoc5(v2.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy9("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var bind3 = /* @__PURE__ */ bind(freeBind);
  var pure3 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure3($192);
    }));
  };
  var substFree = function(k) {
    var go2 = function(f) {
      var v2 = toView(f);
      if (v2 instanceof Return) {
        return pure3(v2.value0);
      }
      ;
      if (v2 instanceof Bind) {
        return bind3(k(v2.value0))(map21(go2)(v2.value1));
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [v2.constructor.name]);
    };
    return go2;
  };
  var hoistFree = function(k) {
    return substFree(function($193) {
      return liftF(k($193));
    });
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map123 = map(Monad0.Bind1().Apply0().Functor0());
    var pure116 = pure(Monad0.Applicative0());
    var tailRecM5 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v2 = toView(f);
        if (v2 instanceof Return) {
          return map123(Done.create)(pure116(v2.value0));
        }
        ;
        if (v2 instanceof Bind) {
          return map123(function($199) {
            return Loop.create(v2.value1($199));
          })(k(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v2.constructor.name]);
      };
      return tailRecM5(go2);
    };
  };

  // output/Halogen.Query.ChildQuery/index.js
  var ChildQuery = /* @__PURE__ */ function() {
    function ChildQuery3(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ChildQuery3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ChildQuery3(value0, value1, value22);
        };
      };
    };
    return ChildQuery3;
  }();
  var unChildQueryBox = unsafeCoerce;
  var mkChildQueryBox = unsafeCoerce;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a3) {
    return function(b2) {
      return a3 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void5 = /* @__PURE__ */ $$void(functorEffect);
  var coerce5 = /* @__PURE__ */ coerce();
  var bind4 = /* @__PURE__ */ bind(bindEffect);
  var append6 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v2) {
    return v2;
  };
  var subscribe = function(v2) {
    return function(k) {
      return v2(function($76) {
        return $$void5(k($76));
      });
    };
  };
  var notify = function(v2) {
    return function(a3) {
      return v2(a3);
    };
  };
  var makeEmitter = coerce5;
  var functorEmitter = {
    map: function(f) {
      return function(v2) {
        return function(k) {
          return v2(function($77) {
            return k(f($77));
          });
        };
      };
    }
  };
  var create = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do5() {
          modify_(function(v2) {
            return append6(v2)([k]);
          })(subscribers)();
          return modify_(deleteBy2(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a3) {
        return bind4(read2(subscribers))(traverse_1(function(k) {
          return k(a3);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity14 = /* @__PURE__ */ identity(categoryFn);
  var lookup6 = /* @__PURE__ */ lookup4();
  var over3 = /* @__PURE__ */ over()();
  var SubscriptionId = function(x2) {
    return x2;
  };
  var ForkId = function(x2) {
    return x2;
  };
  var State = /* @__PURE__ */ function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  }();
  var Subscribe = /* @__PURE__ */ function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  }();
  var Unsubscribe = /* @__PURE__ */ function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  }();
  var Lift2 = /* @__PURE__ */ function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  }();
  var ChildQuery2 = /* @__PURE__ */ function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  }();
  var Raise = /* @__PURE__ */ function() {
    function Raise2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise2.create = function(value0) {
      return function(value1) {
        return new Raise2(value0, value1);
      };
    };
    return Raise2;
  }();
  var Par = /* @__PURE__ */ function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  }();
  var Fork = /* @__PURE__ */ function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  }();
  var Join = /* @__PURE__ */ function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  }();
  var Kill = /* @__PURE__ */ function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  }();
  var GetRef = /* @__PURE__ */ function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  }();
  var HalogenAp = function(x2) {
    return x2;
  };
  var HalogenM = function(x2) {
    return x2;
  };
  var subscribe2 = function(es) {
    return liftF(new Subscribe(function(v2) {
      return es;
    }, identity14));
  };
  var raise = function(o) {
    return liftF(new Raise(o, unit));
  };
  var query = function() {
    return function(dictIsSymbol) {
      var lookup111 = lookup6(dictIsSymbol);
      return function(dictOrd) {
        var lookup27 = lookup111(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(q3) {
              return liftF(new ChildQuery2(mkChildQueryBox(new ChildQuery(function(dictApplicative) {
                var pure116 = pure(dictApplicative);
                return function(k) {
                  var $177 = maybe(pure116(Nothing.value))(k);
                  var $178 = lookup27(label5)(p2);
                  return function($179) {
                    return $177($178($179));
                  };
                };
              }, q3, identity14))));
            };
          };
        };
      };
    };
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadTransHalogenM = {
    lift: function(dictMonad) {
      return function($180) {
        return HalogenM(liftF(Lift2.create($180)));
      };
    }
  };
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var monadEffectHalogenM = function(dictMonadEffect) {
    return {
      liftEffect: function() {
        var $186 = liftEffect(dictMonadEffect);
        return function($187) {
          return HalogenM(liftF(Lift2.create($186($187))));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var monadAffHalogenM = function(dictMonadAff) {
    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    return {
      liftAff: function() {
        var $188 = liftAff(dictMonadAff);
        return function($189) {
          return HalogenM(liftF(Lift2.create($188($189))));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectHalogenM1;
      }
    };
  };
  var hoist = function(dictFunctor) {
    return function(nat) {
      return function(v2) {
        var go2 = function(v1) {
          if (v1 instanceof State) {
            return new State(v1.value0);
          }
          ;
          if (v1 instanceof Subscribe) {
            return new Subscribe(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Unsubscribe) {
            return new Unsubscribe(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Lift2) {
            return new Lift2(nat(v1.value0));
          }
          ;
          if (v1 instanceof ChildQuery2) {
            return new ChildQuery2(v1.value0);
          }
          ;
          if (v1 instanceof Raise) {
            return new Raise(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Par) {
            return new Par(over3(HalogenAp)(hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
          }
          ;
          if (v1 instanceof Fork) {
            return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);
          }
          ;
          if (v1 instanceof Join) {
            return new Join(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Kill) {
            return new Kill(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof GetRef) {
            return new GetRef(v1.value0, v1.value1);
          }
          ;
          throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 312, column 8 - line 323, column 29): " + [v1.constructor.name]);
        };
        return hoistFree(go2)(v2);
      };
    };
  };
  var getRef = function(p2) {
    return liftF(new GetRef(p2, identity14));
  };
  var functorHalogenM = freeFunctor;
  var bindHalogenM = freeBind;
  var applicativeHalogenM = freeApplicative;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ function() {
    function Initialize2(value0) {
      this.value0 = value0;
    }
    ;
    Initialize2.create = function(value0) {
      return new Initialize2(value0);
    };
    return Initialize2;
  }();
  var Finalize = /* @__PURE__ */ function() {
    function Finalize2(value0) {
      this.value0 = value0;
    }
    ;
    Finalize2.create = function(value0) {
      return new Finalize2(value0);
    };
    return Finalize2;
  }();
  var Receive = /* @__PURE__ */ function() {
    function Receive4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive4.create = function(value0) {
      return function(value1) {
        return new Receive4(value0, value1);
      };
    };
    return Receive4;
  }();
  var Action2 = /* @__PURE__ */ function() {
    function Action3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action3.create = function(value0) {
      return function(value1) {
        return new Action3(value0, value1);
      };
    };
    return Action3;
  }();
  var Query = /* @__PURE__ */ function() {
    function Query3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query3.create = function(value0) {
      return function(value1) {
        return new Query3(value0, value1);
      };
    };
    return Query3;
  }();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy10 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var Thunk = /* @__PURE__ */ function() {
    function Thunk2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Thunk2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Thunk2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Thunk2;
  }();
  var unsafeThunkId = unsafeCoerce;
  var unsafeEqThunk = function(v2, v1) {
    return refEq2(v2.value0, v1.value0) && (refEq2(v2.value1, v1.value1) && v2.value1(v2.value3, v1.value3));
  };
  var thunk = function(tid, eqFn, f, a3) {
    return new Thunk(tid, eqFn, f, a3);
  };
  var thunked = function(eqFn) {
    return function(f) {
      var tid = unsafeThunkId({
        f
      });
      var eqFn$prime = mkFn2(eqFn);
      return function(a3) {
        return thunk(tid, eqFn$prime, f, a3);
      };
    };
  };
  var runThunk = function(v2) {
    return v2.value2(v2.value3);
  };
  var mapThunk = function(k) {
    return function(v2) {
      return new Thunk(v2.value0, v2.value1, function($51) {
        return k(v2.value2($51));
      }, v2.value3);
    };
  };
  var hoist2 = mapThunk;
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy10("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step2(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step2(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t2) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t2)));
        return mkStep(new Step2(extract2(vdom), {
          thunk: t2,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map23 = /* @__PURE__ */ map(functorHalogenM);
  var lmap2 = /* @__PURE__ */ lmap(bifunctorHTML);
  var map111 = /* @__PURE__ */ map(functorFn);
  var map24 = /* @__PURE__ */ map(functorMaybe);
  var bimap4 = /* @__PURE__ */ bimap(bifunctorHTML);
  var pure4 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup7 = /* @__PURE__ */ lookup4();
  var pop3 = /* @__PURE__ */ pop2();
  var insert6 = /* @__PURE__ */ insert5();
  var ComponentSlot = /* @__PURE__ */ function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  }();
  var ThunkSlot = /* @__PURE__ */ function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  }();
  var unComponentSlot = unsafeCoerce;
  var unComponent = unsafeCoerce;
  var mkEval = function(args) {
    return function(v2) {
      if (v2 instanceof Initialize) {
        return voidLeft3(traverse_3(args.handleAction)(args.initialize))(v2.value0);
      }
      ;
      if (v2 instanceof Finalize) {
        return voidLeft3(traverse_3(args.handleAction)(args.finalize))(v2.value0);
      }
      ;
      if (v2 instanceof Receive) {
        return voidLeft3(traverse_3(args.handleAction)(args.receive(v2.value0)))(v2.value1);
      }
      ;
      if (v2 instanceof Action2) {
        return voidLeft3(args.handleAction(v2.value0))(v2.value1);
      }
      ;
      if (v2 instanceof Query) {
        return unCoyoneda(function(g2) {
          var $45 = map23(maybe(v2.value1(unit))(g2));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v2.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce;
  var mkComponent = unsafeCoerce;
  var hoistSlot = function(dictFunctor) {
    return function(nat) {
      return function(v2) {
        if (v2 instanceof ComponentSlot) {
          return unComponentSlot(function(slot15) {
            return new ComponentSlot(mkComponentSlot({
              get: slot15.get,
              pop: slot15.pop,
              set: slot15.set,
              input: slot15.input,
              output: slot15.output,
              component: hoist3(dictFunctor)(nat)(slot15.component)
            }));
          })(v2.value0);
        }
        ;
        if (v2 instanceof ThunkSlot) {
          return new ThunkSlot(hoist2(lmap2(hoistSlot(dictFunctor)(nat)))(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Component (line 279, column 17 - line 284, column 53): " + [v2.constructor.name]);
      };
    };
  };
  var hoist3 = function(dictFunctor) {
    var hoist12 = hoist(dictFunctor);
    return function(nat) {
      return unComponent(function(c2) {
        return mkComponent({
          initialState: c2.initialState,
          render: function() {
            var $47 = lmap2(hoistSlot(dictFunctor)(nat));
            return function($48) {
              return $47(c2.render($48));
            };
          }(),
          "eval": function() {
            var $49 = hoist12(nat);
            return function($50) {
              return $49(c2["eval"]($50));
            };
          }()
        });
      });
    };
  };
  var functorComponentSlotBox = {
    map: function(f) {
      return unComponentSlot(function(slot15) {
        return mkComponentSlot({
          get: slot15.get,
          pop: slot15.pop,
          set: slot15.set,
          component: slot15.component,
          input: slot15.input,
          output: map111(map24(f))(slot15.output)
        });
      });
    }
  };
  var map32 = /* @__PURE__ */ map(functorComponentSlotBox);
  var functorComponentSlot = {
    map: function(f) {
      return function(v2) {
        if (v2 instanceof ComponentSlot) {
          return new ComponentSlot(map32(f)(v2.value0));
        }
        ;
        if (v2 instanceof ThunkSlot) {
          return new ThunkSlot(mapThunk(bimap4(map(functorComponentSlot)(f))(f))(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Component (line 209, column 11 - line 211, column 74): " + [v2.constructor.name]);
      };
    }
  };
  var defaultEval = /* @__PURE__ */ function() {
    return {
      handleAction: $$const(pure4(unit)),
      handleQuery: $$const(pure4(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  }();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup111 = lookup7(dictIsSymbol);
      var pop12 = pop3(dictIsSymbol);
      var insert17 = insert6(dictIsSymbol);
      return function(dictOrd) {
        var lookup27 = lookup111(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert17(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup27(label5)(p2),
                    pop: pop22(label5)(p2),
                    set: insert22(label5)(p2),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork = function(dict) {
    return dict.fork;
  };

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value14) {
    var tag2 = Object.prototype.toString.call(value14);
    if (tag2.indexOf("[object HTML") === 0 && tag2.indexOf("Element]") === tag2.length - 8) {
      return just(value14);
    } else {
      return nothing;
    }
  }
  function setDraggable(draggable3) {
    return function(elt) {
      return function() {
        elt.draggable = draggable3;
      };
    };
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode2 = unsafeCoerce;
  var toElement = unsafeCoerce;
  var fromElement = function(x2) {
    return _read(Nothing.value, Just.create, x2);
  };

  // output/Halogen.Query/index.js
  var $$void6 = /* @__PURE__ */ $$void(functorHalogenM);
  var query2 = /* @__PURE__ */ query();
  var identity15 = /* @__PURE__ */ identity(categoryFn);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var tell2 = function() {
    return function(dictIsSymbol) {
      var query1 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query1(dictOrd);
        return function(slot15) {
          return function(label5) {
            return function(req) {
              return $$void6(query22(slot15)(label5)(req(unit)));
            };
          };
        };
      };
    };
  };
  var request = function() {
    return function(dictIsSymbol) {
      var query1 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query1(dictOrd);
        return function(slot15) {
          return function(label5) {
            return function(req) {
              return query22(slot15)(label5)(req(identity15));
            };
          };
        };
      };
    };
  };
  var getHTMLElementRef = /* @__PURE__ */ function() {
    var $24 = map(functorHalogenM)(function(v2) {
      return bindFlipped4(fromElement)(v2);
    });
    return function($25) {
      return $24(getRef($25));
    };
  }();

  // output/Halogen.Store.Select/index.js
  var unless2 = /* @__PURE__ */ unless(applicativeEffect);
  var selectEmitter = function(v2) {
    return function(emitter) {
      return makeEmitter(function(push2) {
        return function __do5() {
          var previousDerivedRef = $$new(Nothing.value)();
          var subscription = subscribe(emitter)(function(store) {
            return function __do6() {
              var previousDerived = read2(previousDerivedRef)();
              var newDerived = v2.select(store);
              var isUnchanged = maybe(false)(v2.eq(newDerived))(previousDerived);
              return unless2(isUnchanged)(function __do7() {
                write2(new Just(newDerived))(previousDerivedRef)();
                return push2(newDerived)();
              })();
            };
          })();
          return unsubscribe(subscription);
        };
      });
    };
  };

  // output/Halogen.Store.Monad/index.js
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure1 = /* @__PURE__ */ pure(applicativeAff);
  var map25 = /* @__PURE__ */ map(functorAff);
  var lift7 = /* @__PURE__ */ lift(monadTransHalogenM);
  var monadTransStoreT = monadTransReaderT;
  var monadStoreT = function(dictMonad) {
    return monadReaderT(dictMonad);
  };
  var monadEffectStoreT = function(dictMonadEffect) {
    return monadEffectReader(dictMonadEffect);
  };
  var monadStoreStoreT = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var bind210 = bind(bindReaderT(Monad0.Bind1()));
    var ask2 = ask(monadAskReaderT(Monad0));
    var liftEffect14 = liftEffect(monadEffectReader(dictMonadEffect));
    var pure210 = pure(Monad0.Applicative0());
    var monadEffectStoreT1 = monadEffectStoreT(dictMonadEffect);
    return {
      getStore: bind210(ask2)(function(store) {
        return liftEffect14(read2(store.value));
      }),
      updateStore: function(action2) {
        return bind210(ask2)(function(store) {
          return liftEffect14(function __do5() {
            var current = read2(store.value)();
            var newStore = store.reducer(current)(action2);
            write2(newStore)(store.value)();
            return notify(store.listener)(newStore)();
          });
        });
      },
      emitSelected: function(selector2) {
        var $247 = selectEmitter(selector2);
        return function($248) {
          return pure210($247(function(v2) {
            return v2.emitter;
          }($248)));
        };
      },
      MonadEffect0: function() {
        return monadEffectStoreT1;
      }
    };
  };
  var monadAffStoreT = function(dictMonadAff) {
    return monadAffReader(dictMonadAff);
  };
  var functorStoreT = function(dictFunctor) {
    return functorReaderT(dictFunctor);
  };
  var updateStore = function(dict) {
    return dict.updateStore;
  };
  var runAndEmitStoreT = function(dictMonad) {
    var hoist5 = hoist3(dictMonad.Bind1().Apply0().Functor0());
    return function(initialStore) {
      return function(reducer) {
        return function(component16) {
          return bind12(liftEffect3(function __do5() {
            var value14 = $$new(initialStore)();
            var v2 = create();
            return {
              value: value14,
              emitter: v2.emitter,
              listener: v2.listener,
              reducer
            };
          }))(function(hs) {
            return pure1({
              emitter: hs.emitter,
              component: hoist5(function(v2) {
                return runReaderT(v2)(hs);
              })(component16)
            });
          });
        };
      };
    };
  };
  var runStoreT = function(dictMonad) {
    var runAndEmitStoreT1 = runAndEmitStoreT(dictMonad);
    return function(initialStore) {
      return function(reducer) {
        return function(component16) {
          return map25(function(v2) {
            return v2.component;
          })(runAndEmitStoreT1(initialStore)(reducer)(component16));
        };
      };
    };
  };
  var getStore = function(dict) {
    return dict.getStore;
  };
  var emitSelected = function(dict) {
    return dict.emitSelected;
  };
  var monadStoreHalogenM = function(dictMonadStore) {
    var MonadEffect0 = dictMonadStore.MonadEffect0();
    var lift92 = lift7(MonadEffect0.Monad0());
    var monadEffectHalogenM4 = monadEffectHalogenM(MonadEffect0);
    return {
      getStore: lift92(getStore(dictMonadStore)),
      updateStore: function() {
        var $251 = updateStore(dictMonadStore);
        return function($252) {
          return lift92($251($252));
        };
      }(),
      emitSelected: function() {
        var $253 = emitSelected(dictMonadStore);
        return function($254) {
          return lift92($253($254));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectHalogenM4;
      }
    };
  };

  // output/Data.Log.Filter/index.js
  var greaterThanOrEq2 = /* @__PURE__ */ greaterThanOrEq(ordLogLevel);
  var filterLevel = function(dictMonadEffect) {
    var pure41 = pure(dictMonadEffect.Monad0().Applicative0());
    return function(op) {
      return function(level2) {
        return function(logger) {
          return function(message2) {
            var $13 = op(message2.level)(level2);
            if ($13) {
              return logger(message2);
            }
            ;
            return pure41(unit);
          };
        };
      };
    };
  };
  var minimumLevel = function(dictMonadEffect) {
    return filterLevel(dictMonadEffect)(greaterThanOrEq2);
  };

  // output/Ansi.Codes/index.js
  var show8 = /* @__PURE__ */ show(showInt);
  var intercalate4 = /* @__PURE__ */ intercalate(foldableNonEmptyList)(monoidString);
  var map26 = /* @__PURE__ */ map(functorNonEmptyList);
  var Bold = /* @__PURE__ */ function() {
    function Bold2() {
    }
    ;
    Bold2.value = new Bold2();
    return Bold2;
  }();
  var Dim = /* @__PURE__ */ function() {
    function Dim2() {
    }
    ;
    Dim2.value = new Dim2();
    return Dim2;
  }();
  var Italic = /* @__PURE__ */ function() {
    function Italic2() {
    }
    ;
    Italic2.value = new Italic2();
    return Italic2;
  }();
  var Underline = /* @__PURE__ */ function() {
    function Underline2() {
    }
    ;
    Underline2.value = new Underline2();
    return Underline2;
  }();
  var Inverse = /* @__PURE__ */ function() {
    function Inverse2() {
    }
    ;
    Inverse2.value = new Inverse2();
    return Inverse2;
  }();
  var Strikethrough = /* @__PURE__ */ function() {
    function Strikethrough2() {
    }
    ;
    Strikethrough2.value = new Strikethrough2();
    return Strikethrough2;
  }();
  var ToEnd = /* @__PURE__ */ function() {
    function ToEnd2() {
    }
    ;
    ToEnd2.value = new ToEnd2();
    return ToEnd2;
  }();
  var FromBeginning = /* @__PURE__ */ function() {
    function FromBeginning2() {
    }
    ;
    FromBeginning2.value = new FromBeginning2();
    return FromBeginning2;
  }();
  var Entire = /* @__PURE__ */ function() {
    function Entire2() {
    }
    ;
    Entire2.value = new Entire2();
    return Entire2;
  }();
  var Black = /* @__PURE__ */ function() {
    function Black2() {
    }
    ;
    Black2.value = new Black2();
    return Black2;
  }();
  var Red = /* @__PURE__ */ function() {
    function Red2() {
    }
    ;
    Red2.value = new Red2();
    return Red2;
  }();
  var Green = /* @__PURE__ */ function() {
    function Green2() {
    }
    ;
    Green2.value = new Green2();
    return Green2;
  }();
  var Yellow = /* @__PURE__ */ function() {
    function Yellow2() {
    }
    ;
    Yellow2.value = new Yellow2();
    return Yellow2;
  }();
  var Blue = /* @__PURE__ */ function() {
    function Blue2() {
    }
    ;
    Blue2.value = new Blue2();
    return Blue2;
  }();
  var Magenta = /* @__PURE__ */ function() {
    function Magenta2() {
    }
    ;
    Magenta2.value = new Magenta2();
    return Magenta2;
  }();
  var Cyan = /* @__PURE__ */ function() {
    function Cyan2() {
    }
    ;
    Cyan2.value = new Cyan2();
    return Cyan2;
  }();
  var White = /* @__PURE__ */ function() {
    function White2() {
    }
    ;
    White2.value = new White2();
    return White2;
  }();
  var BrightBlack = /* @__PURE__ */ function() {
    function BrightBlack2() {
    }
    ;
    BrightBlack2.value = new BrightBlack2();
    return BrightBlack2;
  }();
  var BrightRed = /* @__PURE__ */ function() {
    function BrightRed2() {
    }
    ;
    BrightRed2.value = new BrightRed2();
    return BrightRed2;
  }();
  var BrightGreen = /* @__PURE__ */ function() {
    function BrightGreen2() {
    }
    ;
    BrightGreen2.value = new BrightGreen2();
    return BrightGreen2;
  }();
  var BrightYellow = /* @__PURE__ */ function() {
    function BrightYellow2() {
    }
    ;
    BrightYellow2.value = new BrightYellow2();
    return BrightYellow2;
  }();
  var BrightBlue = /* @__PURE__ */ function() {
    function BrightBlue2() {
    }
    ;
    BrightBlue2.value = new BrightBlue2();
    return BrightBlue2;
  }();
  var BrightMagenta = /* @__PURE__ */ function() {
    function BrightMagenta2() {
    }
    ;
    BrightMagenta2.value = new BrightMagenta2();
    return BrightMagenta2;
  }();
  var BrightCyan = /* @__PURE__ */ function() {
    function BrightCyan2() {
    }
    ;
    BrightCyan2.value = new BrightCyan2();
    return BrightCyan2;
  }();
  var BrightWhite = /* @__PURE__ */ function() {
    function BrightWhite2() {
    }
    ;
    BrightWhite2.value = new BrightWhite2();
    return BrightWhite2;
  }();
  var Reset = /* @__PURE__ */ function() {
    function Reset2() {
    }
    ;
    Reset2.value = new Reset2();
    return Reset2;
  }();
  var PMode = /* @__PURE__ */ function() {
    function PMode2(value0) {
      this.value0 = value0;
    }
    ;
    PMode2.create = function(value0) {
      return new PMode2(value0);
    };
    return PMode2;
  }();
  var PForeground = /* @__PURE__ */ function() {
    function PForeground2(value0) {
      this.value0 = value0;
    }
    ;
    PForeground2.create = function(value0) {
      return new PForeground2(value0);
    };
    return PForeground2;
  }();
  var PBackground = /* @__PURE__ */ function() {
    function PBackground2(value0) {
      this.value0 = value0;
    }
    ;
    PBackground2.create = function(value0) {
      return new PBackground2(value0);
    };
    return PBackground2;
  }();
  var Up2 = /* @__PURE__ */ function() {
    function Up3(value0) {
      this.value0 = value0;
    }
    ;
    Up3.create = function(value0) {
      return new Up3(value0);
    };
    return Up3;
  }();
  var Down2 = /* @__PURE__ */ function() {
    function Down3(value0) {
      this.value0 = value0;
    }
    ;
    Down3.create = function(value0) {
      return new Down3(value0);
    };
    return Down3;
  }();
  var Forward = /* @__PURE__ */ function() {
    function Forward2(value0) {
      this.value0 = value0;
    }
    ;
    Forward2.create = function(value0) {
      return new Forward2(value0);
    };
    return Forward2;
  }();
  var Back = /* @__PURE__ */ function() {
    function Back2(value0) {
      this.value0 = value0;
    }
    ;
    Back2.create = function(value0) {
      return new Back2(value0);
    };
    return Back2;
  }();
  var NextLine = /* @__PURE__ */ function() {
    function NextLine2(value0) {
      this.value0 = value0;
    }
    ;
    NextLine2.create = function(value0) {
      return new NextLine2(value0);
    };
    return NextLine2;
  }();
  var PreviousLine = /* @__PURE__ */ function() {
    function PreviousLine2(value0) {
      this.value0 = value0;
    }
    ;
    PreviousLine2.create = function(value0) {
      return new PreviousLine2(value0);
    };
    return PreviousLine2;
  }();
  var HorizontalAbsolute = /* @__PURE__ */ function() {
    function HorizontalAbsolute2(value0) {
      this.value0 = value0;
    }
    ;
    HorizontalAbsolute2.create = function(value0) {
      return new HorizontalAbsolute2(value0);
    };
    return HorizontalAbsolute2;
  }();
  var Position = /* @__PURE__ */ function() {
    function Position2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Position2.create = function(value0) {
      return function(value1) {
        return new Position2(value0, value1);
      };
    };
    return Position2;
  }();
  var EraseData = /* @__PURE__ */ function() {
    function EraseData2(value0) {
      this.value0 = value0;
    }
    ;
    EraseData2.create = function(value0) {
      return new EraseData2(value0);
    };
    return EraseData2;
  }();
  var EraseLine = /* @__PURE__ */ function() {
    function EraseLine2(value0) {
      this.value0 = value0;
    }
    ;
    EraseLine2.create = function(value0) {
      return new EraseLine2(value0);
    };
    return EraseLine2;
  }();
  var ScrollUp = /* @__PURE__ */ function() {
    function ScrollUp2(value0) {
      this.value0 = value0;
    }
    ;
    ScrollUp2.create = function(value0) {
      return new ScrollUp2(value0);
    };
    return ScrollUp2;
  }();
  var ScrollDown = /* @__PURE__ */ function() {
    function ScrollDown2(value0) {
      this.value0 = value0;
    }
    ;
    ScrollDown2.create = function(value0) {
      return new ScrollDown2(value0);
    };
    return ScrollDown2;
  }();
  var Graphics = /* @__PURE__ */ function() {
    function Graphics2(value0) {
      this.value0 = value0;
    }
    ;
    Graphics2.create = function(value0) {
      return new Graphics2(value0);
    };
    return Graphics2;
  }();
  var SavePosition = /* @__PURE__ */ function() {
    function SavePosition2() {
    }
    ;
    SavePosition2.value = new SavePosition2();
    return SavePosition2;
  }();
  var RestorePosition = /* @__PURE__ */ function() {
    function RestorePosition2() {
    }
    ;
    RestorePosition2.value = new RestorePosition2();
    return RestorePosition2;
  }();
  var QueryPosition = /* @__PURE__ */ function() {
    function QueryPosition2() {
    }
    ;
    QueryPosition2.value = new QueryPosition2();
    return QueryPosition2;
  }();
  var HideCursor = /* @__PURE__ */ function() {
    function HideCursor2() {
    }
    ;
    HideCursor2.value = new HideCursor2();
    return HideCursor2;
  }();
  var ShowCursor = /* @__PURE__ */ function() {
    function ShowCursor2() {
    }
    ;
    ShowCursor2.value = new ShowCursor2();
    return ShowCursor2;
  }();
  var prefix = "\x1B[";
  var eraseParamToString = function(ep) {
    if (ep instanceof ToEnd) {
      return "0";
    }
    ;
    if (ep instanceof FromBeginning) {
      return "1";
    }
    ;
    if (ep instanceof Entire) {
      return "2";
    }
    ;
    throw new Error("Failed pattern match at Ansi.Codes (line 95, column 3 - line 98, column 25): " + [ep.constructor.name]);
  };
  var colorSuffix = "m";
  var colorCode = function(c2) {
    if (c2 instanceof Black) {
      return 30;
    }
    ;
    if (c2 instanceof Red) {
      return 31;
    }
    ;
    if (c2 instanceof Green) {
      return 32;
    }
    ;
    if (c2 instanceof Yellow) {
      return 33;
    }
    ;
    if (c2 instanceof Blue) {
      return 34;
    }
    ;
    if (c2 instanceof Magenta) {
      return 35;
    }
    ;
    if (c2 instanceof Cyan) {
      return 36;
    }
    ;
    if (c2 instanceof White) {
      return 37;
    }
    ;
    if (c2 instanceof BrightBlack) {
      return 90;
    }
    ;
    if (c2 instanceof BrightRed) {
      return 91;
    }
    ;
    if (c2 instanceof BrightGreen) {
      return 92;
    }
    ;
    if (c2 instanceof BrightYellow) {
      return 93;
    }
    ;
    if (c2 instanceof BrightBlue) {
      return 94;
    }
    ;
    if (c2 instanceof BrightMagenta) {
      return 95;
    }
    ;
    if (c2 instanceof BrightCyan) {
      return 96;
    }
    ;
    if (c2 instanceof BrightWhite) {
      return 97;
    }
    ;
    throw new Error("Failed pattern match at Ansi.Codes (line 173, column 3 - line 189, column 22): " + [c2.constructor.name]);
  };
  var codeForRenderingMode = function(m2) {
    if (m2 instanceof Bold) {
      return 1;
    }
    ;
    if (m2 instanceof Dim) {
      return 2;
    }
    ;
    if (m2 instanceof Italic) {
      return 3;
    }
    ;
    if (m2 instanceof Underline) {
      return 4;
    }
    ;
    if (m2 instanceof Inverse) {
      return 7;
    }
    ;
    if (m2 instanceof Strikethrough) {
      return 9;
    }
    ;
    throw new Error("Failed pattern match at Ansi.Codes (line 138, column 3 - line 144, column 23): " + [m2.constructor.name]);
  };
  var graphicsParamToString = function(gp) {
    if (gp instanceof Reset) {
      return "0";
    }
    ;
    if (gp instanceof PMode) {
      return show8(codeForRenderingMode(gp.value0));
    }
    ;
    if (gp instanceof PForeground) {
      return show8(colorCode(gp.value0));
    }
    ;
    if (gp instanceof PBackground) {
      return show8(colorCode(gp.value0) + 10 | 0);
    }
    ;
    throw new Error("Failed pattern match at Ansi.Codes (line 116, column 3 - line 120, column 45): " + [gp.constructor.name]);
  };
  var escapeCodeToString = /* @__PURE__ */ function() {
    var go2 = function(c2) {
      if (c2 instanceof Up2) {
        return show8(c2.value0) + "A";
      }
      ;
      if (c2 instanceof Down2) {
        return show8(c2.value0) + "B";
      }
      ;
      if (c2 instanceof Forward) {
        return show8(c2.value0) + "C";
      }
      ;
      if (c2 instanceof Back) {
        return show8(c2.value0) + "D";
      }
      ;
      if (c2 instanceof NextLine) {
        return show8(c2.value0) + "E";
      }
      ;
      if (c2 instanceof PreviousLine) {
        return show8(c2.value0) + "F";
      }
      ;
      if (c2 instanceof HorizontalAbsolute) {
        return show8(c2.value0) + "G";
      }
      ;
      if (c2 instanceof Position) {
        return show8(c2.value0) + (";" + (show8(c2.value1) + "H"));
      }
      ;
      if (c2 instanceof EraseData) {
        return eraseParamToString(c2.value0) + "J";
      }
      ;
      if (c2 instanceof EraseLine) {
        return eraseParamToString(c2.value0) + "K";
      }
      ;
      if (c2 instanceof ScrollUp) {
        return show8(c2.value0) + "S";
      }
      ;
      if (c2 instanceof ScrollDown) {
        return show8(c2.value0) + "T";
      }
      ;
      if (c2 instanceof Graphics) {
        return intercalate4(";")(map26(graphicsParamToString)(c2.value0)) + colorSuffix;
      }
      ;
      if (c2 instanceof SavePosition) {
        return "s";
      }
      ;
      if (c2 instanceof RestorePosition) {
        return "u";
      }
      ;
      if (c2 instanceof QueryPosition) {
        return "6n";
      }
      ;
      if (c2 instanceof HideCursor) {
        return "?25l";
      }
      ;
      if (c2 instanceof ShowCursor) {
        return "?25h";
      }
      ;
      throw new Error("Failed pattern match at Ansi.Codes (line 53, column 5 - line 71, column 37): " + [c2.constructor.name]);
    };
    return function($846) {
      return function(v2) {
        return prefix + v2;
      }(go2($846));
    };
  }();

  // output/Ansi.Output/index.js
  var pure5 = /* @__PURE__ */ pure(applicativeNonEmptyList);
  var withGraphics = function(params2) {
    return function(text7) {
      return escapeCodeToString(new Graphics(params2)) + (text7 + escapeCodeToString(new Graphics(pure5(Reset.value))));
    };
  };
  var foreground = function(c2) {
    return pure5(new PForeground(c2));
  };
  var bold = /* @__PURE__ */ function() {
    return pure5(new PMode(Bold.value));
  }();

  // output/Data.Log.Tag/index.js
  var StringTag = /* @__PURE__ */ function() {
    function StringTag2(value0) {
      this.value0 = value0;
    }
    ;
    StringTag2.create = function(value0) {
      return new StringTag2(value0);
    };
    return StringTag2;
  }();
  var NumberTag = /* @__PURE__ */ function() {
    function NumberTag2(value0) {
      this.value0 = value0;
    }
    ;
    NumberTag2.create = function(value0) {
      return new NumberTag2(value0);
    };
    return NumberTag2;
  }();
  var IntTag = /* @__PURE__ */ function() {
    function IntTag2(value0) {
      this.value0 = value0;
    }
    ;
    IntTag2.create = function(value0) {
      return new IntTag2(value0);
    };
    return IntTag2;
  }();
  var BooleanTag = /* @__PURE__ */ function() {
    function BooleanTag2(value0) {
      this.value0 = value0;
    }
    ;
    BooleanTag2.create = function(value0) {
      return new BooleanTag2(value0);
    };
    return BooleanTag2;
  }();
  var JSDateTag = /* @__PURE__ */ function() {
    function JSDateTag2(value0) {
      this.value0 = value0;
    }
    ;
    JSDateTag2.create = function(value0) {
      return new JSDateTag2(value0);
    };
    return JSDateTag2;
  }();
  var TagSetTag = /* @__PURE__ */ function() {
    function TagSetTag2(value0) {
      this.value0 = value0;
    }
    ;
    TagSetTag2.create = function(value0) {
      return new TagSetTag2(value0);
    };
    return TagSetTag2;
  }();
  var mkTagType = function(tagger) {
    return function(name16) {
      var $3 = singleton6(name16);
      return function($4) {
        return $3(tagger($4));
      };
    };
  };
  var tag = /* @__PURE__ */ function() {
    return mkTagType(StringTag.create);
  }();

  // output/Data.Log.Formatter.Pretty/index.js
  var append7 = /* @__PURE__ */ append(semigroupString);
  var mapFlipped3 = /* @__PURE__ */ mapFlipped(functorEffect);
  var bind5 = /* @__PURE__ */ bind(bindEffect);
  var empty8 = /* @__PURE__ */ empty(plusMaybe);
  var pure6 = /* @__PURE__ */ pure(applicativeMaybe);
  var map27 = /* @__PURE__ */ map(functorFn);
  var show9 = /* @__PURE__ */ show(showInt);
  var show12 = /* @__PURE__ */ show(showNumber);
  var show22 = /* @__PURE__ */ show(showBoolean);
  var sequence3 = /* @__PURE__ */ sequence(traversableArray);
  var map112 = /* @__PURE__ */ map(functorArray);
  var toUnfoldable6 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var showBasic = function(dictApplicative) {
    var pure116 = pure(dictApplicative);
    return function(value14) {
      return function(label5) {
        return pure116(singleton7(label5 + value14));
      };
    };
  };
  var indentEachLine = function(dictFunctor) {
    return map(dictFunctor)(append7("   "));
  };
  var indentEachLine1 = /* @__PURE__ */ indentEachLine(functorArray);
  var color = function($91) {
    return withGraphics(foreground($91));
  };
  var showLevel = function(v2) {
    if (v2 instanceof Trace) {
      return color(Cyan.value)("[TRACE]");
    }
    ;
    if (v2 instanceof Debug) {
      return color(Blue.value)("[DEBUG]");
    }
    ;
    if (v2 instanceof Info) {
      return color(White.value)("[INFO]");
    }
    ;
    if (v2 instanceof Warn) {
      return color(Yellow.value)("[WARN]");
    }
    ;
    if (v2 instanceof $$Error) {
      return color(Red.value)("[ERROR]");
    }
    ;
    throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 38, column 1 - line 38, column 32): " + [v2.constructor.name]);
  };
  var showMainLine = function(dictMonadEffect) {
    var liftEffect11 = liftEffect(dictMonadEffect);
    return function(v2) {
      return liftEffect11(mapFlipped3(toISOString(v2.timestamp))(function(ts) {
        return joinWith(" ")([showLevel(v2.level), color(BrightBlack.value)(ts), color(Cyan.value)(v2.message)]);
      }));
    };
  };
  var showSpecial = function(dictApplicative) {
    var $92 = showBasic(dictApplicative);
    var $93 = color(Yellow.value);
    return function($94) {
      return $92($93($94));
    };
  };
  var showSpecial1 = /* @__PURE__ */ showSpecial(applicativeEffect);
  var showJsDate = function(dictMonadEffect) {
    var liftEffect11 = liftEffect(dictMonadEffect);
    return function(value14) {
      return function(label5) {
        return liftEffect11(bind5(toISOString(value14))(flip(showSpecial1)(label5)));
      };
    };
  };
  var bold$prime = /* @__PURE__ */ withGraphics(bold);
  var tagLines = function(dictMonadEffect) {
    var map214 = map(dictMonadEffect.Monad0().Bind1().Apply0().Functor0());
    return function(tags) {
      if (isEmpty(tags)) {
        return empty8;
      }
      ;
      if (otherwise) {
        return pure6(map214(map27(indentEachLine1)(concat))(lineify(dictMonadEffect)(tags)));
      }
      ;
      throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 50, column 1 - line 50, column 74): " + [tags.constructor.name]);
    };
  };
  var showTag = function(dictMonadEffect) {
    var Applicative0 = dictMonadEffect.Monad0().Applicative0();
    var showBasic1 = showBasic(Applicative0);
    var showSpecial2 = showSpecial(Applicative0);
    var showJsDate1 = showJsDate(dictMonadEffect);
    return function(v2) {
      if (v2 instanceof StringTag) {
        return showBasic1(v2.value0);
      }
      ;
      if (v2 instanceof IntTag) {
        return showSpecial2(show9(v2.value0));
      }
      ;
      if (v2 instanceof NumberTag) {
        return showSpecial2(show12(v2.value0));
      }
      ;
      if (v2 instanceof BooleanTag) {
        return showSpecial2(show22(v2.value0));
      }
      ;
      if (v2 instanceof TagSetTag) {
        return showSubTags(dictMonadEffect)(v2.value0);
      }
      ;
      if (v2 instanceof JSDateTag) {
        return showJsDate1(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 61, column 1 - line 61, column 72): " + [v2.constructor.name]);
    };
  };
  var showSubTags = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var map214 = map(Monad0.Bind1().Apply0().Functor0());
    var pure116 = pure(Monad0.Applicative0());
    return function(value14) {
      return function(label5) {
        return map214(cons2(label5))(fromMaybe(pure116([]))(tagLines(dictMonadEffect)(value14)));
      };
    };
  };
  var showField = function(dictMonadEffect) {
    return function(v2) {
      return showTag(dictMonadEffect)(v2.value1)(bold$prime(v2.value0) + bold$prime(": "));
    };
  };
  var lineify = function(dictMonadEffect) {
    var sequence12 = sequence3(dictMonadEffect.Monad0().Applicative0());
    return function(tags) {
      return sequence12(map112(showField(dictMonadEffect))(toUnfoldable6(tags)));
    };
  };
  var showTags = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var pure116 = pure(Monad0.Applicative0());
    var mapFlipped1 = mapFlipped(Monad0.Bind1().Apply0().Functor0());
    var $95 = tagLines(dictMonadEffect);
    return function($96) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return pure116("");
        }
        ;
        if (v2 instanceof Just) {
          return mapFlipped1(v2.value0)(function() {
            var $97 = append7("\n");
            var $98 = joinWith("\n");
            return function($99) {
              return $97($98($99));
            };
          }());
        }
        ;
        throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 46, column 25 - line 48, column 56): " + [v2.constructor.name]);
      }($95($96));
    };
  };
  var prettyFormatter = function(dictMonadEffect) {
    var Apply0 = dictMonadEffect.Monad0().Bind1().Apply0();
    var apply8 = apply(Apply0);
    var map214 = map(Apply0.Functor0());
    var showMainLine1 = showMainLine(dictMonadEffect);
    var showTags1 = showTags(dictMonadEffect);
    return function(message2) {
      return apply8(map214(append7)(showMainLine1(message2)))(showTags1(message2.tags));
    };
  };

  // output/Effect.Console/foreign.js
  var log3 = function(s2) {
    return function() {
      console.log(s2);
    };
  };
  var warn2 = function(s2) {
    return function() {
      console.warn(s2);
    };
  };

  // output/Effect.Class.Console/index.js
  var log4 = function(dictMonadEffect) {
    var $67 = liftEffect(dictMonadEffect);
    return function($68) {
      return $67(log3($68));
    };
  };

  // output/Logging/index.js
  var logMessage = function(dictMonadEffect) {
    var minimumLevel2 = minimumLevel(dictMonadEffect);
    var composeKleisli3 = composeKleisli(dictMonadEffect.Monad0().Bind1());
    var prettyFormatter2 = prettyFormatter(dictMonadEffect);
    var log6 = log4(dictMonadEffect);
    return function(logLevel) {
      return minimumLevel2(logLevel)(composeKleisli3(prettyFormatter2)(log6));
    };
  };

  // output/AppM/index.js
  var monadEffectLoggerT2 = /* @__PURE__ */ monadEffectLoggerT(monadEffectAff);
  var monadLoggerT2 = /* @__PURE__ */ monadLoggerT(monadAff);
  var lift8 = /* @__PURE__ */ lift(monadTransStoreT)(monadLoggerT2);
  var log5 = /* @__PURE__ */ log2(/* @__PURE__ */ monadLoggerLoggerT(monadEffectAff));
  var functorStoreT2 = /* @__PURE__ */ functorStoreT(/* @__PURE__ */ functorLoggerT(functorAff));
  var map28 = /* @__PURE__ */ map(functorAff);
  var hoist4 = /* @__PURE__ */ hoist3(functorAff);
  var runStoreT2 = /* @__PURE__ */ runStoreT(monadLoggerT2);
  var hoist1 = /* @__PURE__ */ hoist3(functorStoreT2);
  var unwrap7 = /* @__PURE__ */ unwrap();
  var monadStoreGlobalStateActi = /* @__PURE__ */ monadStoreStoreT(monadEffectLoggerT2);
  var monadEffectAppM = /* @__PURE__ */ monadEffectStoreT(monadEffectLoggerT2);
  var monadLoggerAppM = {
    log: function(message2) {
      return lift8(log5(message2));
    },
    MonadEffect0: function() {
      return monadEffectAppM;
    }
  };
  var monadAppM = /* @__PURE__ */ monadStoreT(monadLoggerT2);
  var monadAffAppM = /* @__PURE__ */ monadAffStoreT(/* @__PURE__ */ monadAffLoggerT(monadAffAff));
  var runAppM = function(component16) {
    var unLogger = function(dictMonadEffect) {
      var logMessage2 = logMessage(dictMonadEffect);
      return function(loggerT) {
        return runLoggerT(loggerT)(logMessage2(Info.value));
      };
    };
    return map28(hoist4(unLogger(monadEffectAff)))(runStoreT2(initialGlobalState)(reduce)(hoist1(unwrap7)(component16)));
  };

  // output/Data.Bifoldable/index.js
  var bifoldableTuple = {
    bifoldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(g2) {
          return function(v2) {
            return append22(f(v2.value0))(g2(v2.value1));
          };
        };
      };
    },
    bifoldr: function(f) {
      return function(g2) {
        return function(z2) {
          return function(v2) {
            return f(v2.value0)(g2(v2.value1)(z2));
          };
        };
      };
    },
    bifoldl: function(f) {
      return function(g2) {
        return function(z2) {
          return function(v2) {
            return g2(f(z2)(v2.value0))(v2.value1);
          };
        };
      };
    }
  };

  // output/Data.Bitraversable/index.js
  var bitraverse = function(dict) {
    return dict.bitraverse;
  };
  var ltraverse = function(dictBitraversable) {
    var bitraverse1 = bitraverse(dictBitraversable);
    return function(dictApplicative) {
      var bitraverse22 = bitraverse1(dictApplicative);
      var pure41 = pure(dictApplicative);
      return function(f) {
        return bitraverse22(f)(pure41);
      };
    };
  };
  var bitraversableTuple = {
    bitraverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      var apply8 = apply(Apply0);
      var map65 = map(Apply0.Functor0());
      return function(f) {
        return function(g2) {
          return function(v2) {
            return apply8(map65(Tuple.create)(f(v2.value0)))(g2(v2.value1));
          };
        };
      };
    },
    bisequence: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      var apply8 = apply(Apply0);
      var map65 = map(Apply0.Functor0());
      return function(v2) {
        return apply8(map65(Tuple.create)(v2.value0))(v2.value1);
      };
    },
    Bifunctor0: function() {
      return bifunctorTuple;
    },
    Bifoldable1: function() {
      return bifoldableTuple;
    }
  };

  // output/JSURI/foreign.js
  function encodeURIComponent_to_RFC3986(input3) {
    return input3.replace(/[!'()*]/g, function(c2) {
      return "%" + c2.charCodeAt(0).toString(16);
    });
  }
  function _encodeURIComponent(fail3, succeed, input3) {
    try {
      return succeed(encodeURIComponent_to_RFC3986(encodeURIComponent(input3)));
    } catch (err) {
      return fail3(err);
    }
  }
  function _decodeURIComponent(fail3, succeed, input3) {
    try {
      return succeed(decodeURIComponent(input3));
    } catch (err) {
      return fail3(err);
    }
  }

  // output/JSURI/index.js
  var $$encodeURIComponent = /* @__PURE__ */ function() {
    return runFn3(_encodeURIComponent)($$const(Nothing.value))(Just.create);
  }();
  var $$decodeURIComponent = /* @__PURE__ */ function() {
    return runFn3(_decodeURIComponent)($$const(Nothing.value))(Just.create);
  }();

  // output/Routing.Duplex.Types/index.js
  var emptyRouteState = {
    segments: [],
    params: [],
    hash: ""
  };

  // output/Routing.Duplex.Parser/index.js
  var $runtime_lazy11 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var bitraverse2 = /* @__PURE__ */ bitraverse(bitraversableTuple)(applicativeEither);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeEither);
  var lookup8 = /* @__PURE__ */ lookup(foldableArray)(eqString);
  var map29 = /* @__PURE__ */ map(functorNonEmptyArray);
  var map113 = /* @__PURE__ */ map(functorFn);
  var foldl4 = /* @__PURE__ */ foldl(foldableNonEmptyArray);
  var composeKleisli2 = /* @__PURE__ */ composeKleisli(bindEither);
  var append8 = /* @__PURE__ */ append(semigroupNonEmptyArray);
  var Expected = /* @__PURE__ */ function() {
    function Expected2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Expected2.create = function(value0) {
      return function(value1) {
        return new Expected2(value0, value1);
      };
    };
    return Expected2;
  }();
  var ExpectedEndOfPath = /* @__PURE__ */ function() {
    function ExpectedEndOfPath2(value0) {
      this.value0 = value0;
    }
    ;
    ExpectedEndOfPath2.create = function(value0) {
      return new ExpectedEndOfPath2(value0);
    };
    return ExpectedEndOfPath2;
  }();
  var MissingParam = /* @__PURE__ */ function() {
    function MissingParam2(value0) {
      this.value0 = value0;
    }
    ;
    MissingParam2.create = function(value0) {
      return new MissingParam2(value0);
    };
    return MissingParam2;
  }();
  var MalformedURIComponent = /* @__PURE__ */ function() {
    function MalformedURIComponent2(value0) {
      this.value0 = value0;
    }
    ;
    MalformedURIComponent2.create = function(value0) {
      return new MalformedURIComponent2(value0);
    };
    return MalformedURIComponent2;
  }();
  var EndOfPath = /* @__PURE__ */ function() {
    function EndOfPath2() {
    }
    ;
    EndOfPath2.value = new EndOfPath2();
    return EndOfPath2;
  }();
  var Fail = /* @__PURE__ */ function() {
    function Fail3(value0) {
      this.value0 = value0;
    }
    ;
    Fail3.create = function(value0) {
      return new Fail3(value0);
    };
    return Fail3;
  }();
  var Success = /* @__PURE__ */ function() {
    function Success2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Success2.create = function(value0) {
      return function(value1) {
        return new Success2(value0, value1);
      };
    };
    return Success2;
  }();
  var Alt = /* @__PURE__ */ function() {
    function Alt2(value0) {
      this.value0 = value0;
    }
    ;
    Alt2.create = function(value0) {
      return new Alt2(value0);
    };
    return Alt2;
  }();
  var Chomp = /* @__PURE__ */ function() {
    function Chomp2(value0) {
      this.value0 = value0;
    }
    ;
    Chomp2.create = function(value0) {
      return new Chomp2(value0);
    };
    return Chomp2;
  }();
  var Prefix = /* @__PURE__ */ function() {
    function Prefix2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Prefix2.create = function(value0) {
      return function(value1) {
        return new Prefix2(value0, value1);
      };
    };
    return Prefix2;
  }();
  var prefix2 = /* @__PURE__ */ function() {
    return Prefix.create;
  }();
  var parsePath = /* @__PURE__ */ function() {
    var toRouteState = function(v2) {
      return {
        segments: v2.value0.value0,
        params: v2.value0.value1,
        hash: v2.value1
      };
    };
    var splitNonEmpty = function(v2) {
      return function(v1) {
        if (v1 === "") {
          return [];
        }
        ;
        return split(v2)(v1);
      };
    };
    var splitAt4 = function(k) {
      return function(p2) {
        return function(str) {
          var v2 = indexOf(p2)(str);
          if (v2 instanceof Just) {
            return new Tuple(take2(v2.value0)(str), drop2(v2.value0 + length3(p2) | 0)(str));
          }
          ;
          if (v2 instanceof Nothing) {
            return k(str);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 191, column 5 - line 193, column 23): " + [v2.constructor.name]);
        };
      };
    };
    var decodeURIComponent$prime = function(str) {
      var v2 = $$decodeURIComponent(str);
      if (v2 instanceof Nothing) {
        return new Left(new MalformedURIComponent(str));
      }
      ;
      if (v2 instanceof Just) {
        return new Right(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Routing.Duplex.Parser (line 195, column 29 - line 197, column 22): " + [v2.constructor.name]);
    };
    var splitKeyValue = function() {
      var $349 = bitraverse2(decodeURIComponent$prime)(decodeURIComponent$prime);
      var $350 = splitAt4(flip(Tuple.create)(""))("=");
      return function($351) {
        return $349($350($351));
      };
    }();
    var splitParams = function() {
      var $352 = traverse2(splitKeyValue);
      var $353 = splitNonEmpty("&");
      return function($354) {
        return $352($353($354));
      };
    }();
    var splitSegments = function() {
      var $355 = splitNonEmpty("/");
      return function($356) {
        return function(v2) {
          if (v2.length === 2 && (v2[0] === "" && v2[1] === "")) {
            return new Right([""]);
          }
          ;
          return traverse2(decodeURIComponent$prime)(v2);
        }($355($356));
      };
    }();
    var splitPath = function() {
      var $357 = bitraverse2(splitSegments)(splitParams);
      var $358 = splitAt4(flip(Tuple.create)(""))("?");
      return function($359) {
        return $357($358($359));
      };
    }();
    var $360 = map(functorEither)(toRouteState);
    var $361 = ltraverse(bitraversableTuple)(applicativeEither)(splitPath);
    var $362 = splitAt4(flip(Tuple.create)(""))("#");
    return function($363) {
      return $360($361($362($363)));
    };
  }();
  var param = function(key2) {
    return new Chomp(function(state3) {
      var v2 = lookup8(key2)(state3.params);
      if (v2 instanceof Just) {
        return new Success(state3, v2.value0);
      }
      ;
      return new Fail(new MissingParam(key2));
    });
  };
  var functorRouteResult = {
    map: function(f) {
      return function(m2) {
        if (m2 instanceof Fail) {
          return new Fail(m2.value0);
        }
        ;
        if (m2 instanceof Success) {
          return new Success(m2.value0, f(m2.value1));
        }
        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 0, column 0 - line 0, column 0): " + [m2.constructor.name]);
      };
    }
  };
  var map210 = /* @__PURE__ */ map(functorRouteResult);
  var functorRouteParser = {
    map: function(f) {
      return function(m2) {
        if (m2 instanceof Alt) {
          return new Alt(map29(map(functorRouteParser)(f))(m2.value0));
        }
        ;
        if (m2 instanceof Chomp) {
          return new Chomp(map113(map210(f))(m2.value0));
        }
        ;
        if (m2 instanceof Prefix) {
          return new Prefix(m2.value0, map(functorRouteParser)(f)(m2.value1));
        }
        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 0, column 0 - line 0, column 0): " + [m2.constructor.name]);
      };
    }
  };
  var end = /* @__PURE__ */ function() {
    return new Chomp(function(state3) {
      var v2 = head(state3.segments);
      if (v2 instanceof Nothing) {
        return new Success(state3, unit);
      }
      ;
      if (v2 instanceof Just) {
        return new Fail(new ExpectedEndOfPath(v2.value0));
      }
      ;
      throw new Error("Failed pattern match at Routing.Duplex.Parser (line 266, column 3 - line 268, column 45): " + [v2.constructor.name]);
    });
  }();
  var chompPrefix = function(pre2) {
    return function(state3) {
      var v2 = head(state3.segments);
      if (v2 instanceof Just && pre2 === v2.value0) {
        return new Success({
          params: state3.params,
          hash: state3.hash,
          segments: drop3(1)(state3.segments)
        }, unit);
      }
      ;
      if (v2 instanceof Just) {
        return new Fail(new Expected(pre2, v2.value0));
      }
      ;
      return new Fail(EndOfPath.value);
    };
  };
  var $lazy_runRouteParser = /* @__PURE__ */ $runtime_lazy11("runRouteParser", "Routing.Duplex.Parser", function() {
    var goAlt = function(v2) {
      return function(v1) {
        return function(v22) {
          if (v1 instanceof Fail) {
            return $lazy_runRouteParser(161)(v2)(v22);
          }
          ;
          return v1;
        };
      };
    };
    var go2 = function($copy_state) {
      return function($copy_v) {
        var $tco_var_state = $copy_state;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(state3, v2) {
          if (v2 instanceof Alt) {
            $tco_done = true;
            return foldl4(goAlt(state3))(new Fail(EndOfPath.value))(v2.value0);
          }
          ;
          if (v2 instanceof Chomp) {
            $tco_done = true;
            return v2.value0(state3);
          }
          ;
          if (v2 instanceof Prefix) {
            var v1 = chompPrefix(v2.value0)(state3);
            if (v1 instanceof Fail) {
              $tco_done = true;
              return new Fail(v1.value0);
            }
            ;
            if (v1 instanceof Success) {
              $tco_var_state = v1.value0;
              $copy_v = v2.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 157, column 7 - line 159, column 40): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 153, column 14 - line 159, column 40): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_state, $copy_v);
        }
        ;
        return $tco_result;
      };
    };
    return go2;
  });
  var runRouteParser = /* @__PURE__ */ $lazy_runRouteParser(150);
  var run3 = function(p2) {
    return composeKleisli2(parsePath)(function() {
      var $366 = flip(runRouteParser)(p2);
      return function($367) {
        return function(v2) {
          if (v2 instanceof Fail) {
            return new Left(v2.value0);
          }
          ;
          if (v2 instanceof Success) {
            return new Right(v2.value1);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 200, column 49 - line 202, column 29): " + [v2.constructor.name]);
        }($366($367));
      };
    }());
  };
  var as = function(print7) {
    return function(decode) {
      return function(p2) {
        return new Chomp(function(state3) {
          var v2 = runRouteParser(state3)(p2);
          if (v2 instanceof Fail) {
            return new Fail(v2.value0);
          }
          ;
          if (v2 instanceof Success) {
            var v1 = decode(v2.value1);
            if (v1 instanceof Left) {
              return new Fail(new Expected(v1.value0, print7(v2.value1)));
            }
            ;
            if (v1 instanceof Right) {
              return new Success(v2.value0, v1.value0);
            }
            ;
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 254, column 7 - line 256, column 36): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 251, column 3 - line 256, column 36): " + [v2.constructor.name]);
        });
      };
    };
  };
  var applyRouteParser = {
    apply: function(fx) {
      return function(x2) {
        return new Chomp(function(state3) {
          var v2 = runRouteParser(state3)(fx);
          if (v2 instanceof Fail) {
            return new Fail(v2.value0);
          }
          ;
          if (v2 instanceof Success) {
            return map210(v2.value1)(runRouteParser(v2.value0)(x2));
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 81, column 5 - line 83, column 56): " + [v2.constructor.name]);
        });
      };
    },
    Functor0: function() {
      return functorRouteParser;
    }
  };
  var applicativeRouteParser = {
    pure: /* @__PURE__ */ function() {
      var $368 = flip(Success.create);
      return function($369) {
        return Chomp.create($368($369));
      };
    }(),
    Apply0: function() {
      return applyRouteParser;
    }
  };
  var pure7 = /* @__PURE__ */ pure(applicativeRouteParser);
  var altSnoc = function(v2) {
    return function(v1) {
      var v22 = function(v3) {
        return snoc3(v2)(v1);
      };
      if (v1 instanceof Prefix) {
        var $310 = last3(v2);
        if ($310 instanceof Prefix) {
          var $311 = v1.value0 === $310.value0;
          if ($311) {
            return snoc$prime(init3(v2))(new Prefix(v1.value0, alt(altRouteParser)($310.value1)(v1.value1)));
          }
          ;
          return v22(true);
        }
        ;
        return v22(true);
      }
      ;
      return v22(true);
    };
  };
  var altRouteParser = {
    alt: function(v2) {
      return function(v1) {
        if (v2 instanceof Alt && v1 instanceof Alt) {
          return new Alt(altAppend(v2.value0)(v1.value0));
        }
        ;
        if (v2 instanceof Alt) {
          return new Alt(altSnoc(v2.value0)(v1));
        }
        ;
        if (v1 instanceof Alt) {
          return new Alt(altCons(v2)(v1.value0));
        }
        ;
        if (v2 instanceof Prefix && (v1 instanceof Prefix && v2.value0 === v1.value0)) {
          return new Prefix(v2.value0, alt(altRouteParser)(v2.value1)(v1.value1));
        }
        ;
        return new Alt(cons3(v2)(singleton8(v1)));
      };
    },
    Functor0: function() {
      return functorRouteParser;
    }
  };
  var altCons = function(v2) {
    return function(v1) {
      var v22 = function(v3) {
        return cons3(v2)(v1);
      };
      if (v2 instanceof Prefix) {
        var $330 = head2(v1);
        if ($330 instanceof Prefix) {
          var $331 = v2.value0 === $330.value0;
          if ($331) {
            return cons$prime(new Prefix(v2.value0, alt(altRouteParser)(v2.value1)($330.value1)))(tail2(v1));
          }
          ;
          return v22(true);
        }
        ;
        return v22(true);
      }
      ;
      return v22(true);
    };
  };
  var altAppend = function($copy_ls) {
    return function($copy_rs) {
      var $tco_var_ls = $copy_ls;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(ls, rs) {
        var v2 = function(v12) {
          if (otherwise) {
            return append8(ls)(rs);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 103, column 1 - line 107, column 35): " + [ls.constructor.name, rs.constructor.name]);
        };
        var $340 = last3(ls);
        if ($340 instanceof Prefix) {
          var $341 = head2(rs);
          if ($341 instanceof Prefix) {
            var $342 = $340.value0 === $341.value0;
            if ($342) {
              var rs$prime = cons$prime(new Prefix($340.value0, alt(altRouteParser)($340.value1)($341.value1)))(tail2(rs));
              var v1 = fromArray(init3(ls));
              if (v1 instanceof Just) {
                $tco_var_ls = v1.value0;
                $copy_rs = rs$prime;
                return;
              }
              ;
              if (v1 instanceof Nothing) {
                $tco_done = true;
                return rs$prime;
              }
              ;
              throw new Error("Failed pattern match at Routing.Duplex.Parser (line 116, column 9 - line 118, column 25): " + [v1.constructor.name]);
            }
            ;
            $tco_done = true;
            return v2(true);
          }
          ;
          $tco_done = true;
          return v2(true);
        }
        ;
        $tco_done = true;
        return v2(true);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_ls, $copy_rs);
      }
      ;
      return $tco_result;
    };
  };
  var alt2 = /* @__PURE__ */ alt(altRouteParser);
  var $$default = /* @__PURE__ */ function() {
    var $370 = flip(alt2);
    return function($371) {
      return $370(pure7($371));
    };
  }();

  // output/Routing.Duplex.Printer/index.js
  var append9 = /* @__PURE__ */ append(/* @__PURE__ */ semigroupMaybe(semigroupString));
  var semigroupRoutePrinter = {
    append: function(v2) {
      return function(v1) {
        return function($33) {
          return v1(v2($33));
        };
      };
    }
  };
  var put2 = function(str) {
    return function(state3) {
      return {
        params: state3.params,
        hash: state3.hash,
        segments: snoc2(state3.segments)(str)
      };
    };
  };
  var printPath = function(v2) {
    var printSegments = function(v1) {
      if (v1.length === 1 && v1[0] === "") {
        return "/";
      }
      ;
      return joinWith("/")(mapMaybe3($$encodeURIComponent)(v1));
    };
    var printParam = function(v1) {
      return function(v22) {
        if (v22 === "") {
          return $$encodeURIComponent(v1);
        }
        ;
        return append9($$encodeURIComponent(v1))(append9(new Just("="))($$encodeURIComponent(v22)));
      };
    };
    var printParams = function(v1) {
      if (v1.length === 0) {
        return "";
      }
      ;
      return "?" + joinWith("&")(mapMaybe3(uncurry(printParam))(v1));
    };
    var printHash = function(v1) {
      if (v1 === "") {
        return "";
      }
      ;
      return "#" + v1;
    };
    return printSegments(v2.segments) + (printParams(v2.params) + printHash(v2.hash));
  };
  var param2 = function(key2) {
    return function(val) {
      return function(state3) {
        return {
          segments: state3.segments,
          hash: state3.hash,
          params: cons2(new Tuple(key2, val))(state3.params)
        };
      };
    };
  };
  var run4 = /* @__PURE__ */ function() {
    var $34 = applyFlipped(emptyRouteState);
    var $35 = unwrap();
    return function($36) {
      return printPath($34($35($36)));
    };
  }();
  var monoidRoutePRinter = {
    mempty: /* @__PURE__ */ identity(categoryFn),
    Semigroup0: function() {
      return semigroupRoutePrinter;
    }
  };

  // output/Routing.Duplex/index.js
  var append10 = /* @__PURE__ */ append(semigroupRoutePrinter);
  var applyFirst2 = /* @__PURE__ */ applyFirst(applyRouteParser);
  var pure8 = /* @__PURE__ */ pure(applicativeRouteParser);
  var identity16 = /* @__PURE__ */ identity(categoryFn);
  var apply3 = /* @__PURE__ */ apply(applyRouteParser);
  var map30 = /* @__PURE__ */ map(functorRouteParser);
  var mempty2 = /* @__PURE__ */ mempty(monoidRoutePRinter);
  var apply1 = /* @__PURE__ */ apply(applyFn);
  var map114 = /* @__PURE__ */ map(functorFn);
  var RouteDuplex = /* @__PURE__ */ function() {
    function RouteDuplex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RouteDuplex2.create = function(value0) {
      return function(value1) {
        return new RouteDuplex2(value0, value1);
      };
    };
    return RouteDuplex2;
  }();
  var record = /* @__PURE__ */ function() {
    return new RouteDuplex(mempty(monoidFn(monoidRoutePRinter)), pure8({}));
  }();
  var prop4 = function(dictIsSymbol) {
    var get4 = get2(dictIsSymbol)();
    var insert17 = insert4(dictIsSymbol)()();
    return function() {
      return function() {
        return function() {
          return function(sym) {
            return function(v2) {
              return function(v1) {
                return new RouteDuplex(function(r) {
                  return append10(v1.value0(r))(v2.value0(get4(sym)(r)));
                }, apply3(map30(flip(insert17(sym)))(v1.value1))(v2.value1));
              };
            };
          };
        };
      };
    };
  };
  var profunctorRouteDuplex = {
    dimap: function(f) {
      return function(g2) {
        return function(v2) {
          return new RouteDuplex(function($137) {
            return v2.value0(f($137));
          }, map30(g2)(v2.value1));
        };
      };
    }
  };
  var print = function(v2) {
    return function($138) {
      return run4(v2.value0($138));
    };
  };
  var prefix3 = function(s2) {
    return function(v2) {
      return new RouteDuplex(function(a3) {
        return append10(put2(s2))(v2.value0(a3));
      }, prefix2(s2)(v2.value1));
    };
  };
  var path = /* @__PURE__ */ function() {
    var $139 = flip(foldr(foldableArray)(prefix3));
    var $140 = split("/");
    return function($141) {
      return $139($140($141));
    };
  }();
  var root = /* @__PURE__ */ path("");
  var parse2 = function(v2) {
    return run3(v2.value1);
  };
  var params = function(dict) {
    return dict.params;
  };
  var param3 = function(p2) {
    return new RouteDuplex(param2(p2), param(p2));
  };
  var functorRouteDuplex = {
    map: function(f) {
      return function(m2) {
        return new RouteDuplex(m2.value0, map30(f)(m2.value1));
      };
    }
  };
  var end2 = function(v2) {
    return new RouteDuplex(v2.value0, applyFirst2(v2.value1)(end));
  };
  var $$default2 = function(d2) {
    return function(v2) {
      return new RouteDuplex(v2.value0, $$default(d2)(v2.value1));
    };
  };
  var buildParamsNil = {
    buildParams: function(v2) {
      return function(v1) {
        return identity16;
      };
    }
  };
  var buildParams = function(dict) {
    return dict.buildParams;
  };
  var buildParamsCons = function(dictIsSymbol) {
    var prop15 = prop4(dictIsSymbol)()()();
    var get4 = get2(dictIsSymbol)();
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function() {
          return function() {
            return function(dictRouteDuplexBuildParams) {
              var buildParams1 = buildParams(dictRouteDuplexBuildParams);
              return {
                buildParams: function(v2) {
                  return function(r) {
                    return function(prev) {
                      return buildParams1($$Proxy.value)(r)(prop15($$Proxy.value)(get4($$Proxy.value)(r)(param3(reflectSymbol2($$Proxy.value))))(prev));
                    };
                  };
                }
              };
            };
          };
        };
      };
    };
  };
  var routeDuplexParams = function() {
    return function(dictRouteDuplexBuildParams) {
      var buildParams1 = buildParams(dictRouteDuplexBuildParams);
      return {
        params: function(r) {
          return buildParams1($$Proxy.value)(r)(record);
        }
      };
    };
  };
  var as2 = function(f) {
    return function(g2) {
      return function(v2) {
        return new RouteDuplex(function($142) {
          return v2.value0(f($142));
        }, as(identity16)(g2)(v2.value1));
      };
    };
  };
  var applyRouteDuplex = {
    apply: function(v2) {
      return function(v1) {
        return new RouteDuplex(apply1(map114(append10)(v2.value0))(v1.value0), apply3(v2.value1)(v1.value1));
      };
    },
    Functor0: function() {
      return functorRouteDuplex;
    }
  };
  var applicativeRouteDuplex = {
    pure: /* @__PURE__ */ function() {
      var $143 = RouteDuplex.create($$const(mempty2));
      return function($144) {
        return $143(pure8($144));
      };
    }(),
    Apply0: function() {
      return applyRouteDuplex;
    }
  };

  // output/Routing.Duplex.Generic/index.js
  var identity17 = /* @__PURE__ */ identity(categoryFn);
  var map31 = /* @__PURE__ */ map(functorRouteParser);
  var alt3 = /* @__PURE__ */ alt(altRouteParser);
  var dimap2 = /* @__PURE__ */ dimap(profunctorRouteDuplex);
  var noArgs = /* @__PURE__ */ function() {
    return pure(applicativeRouteDuplex)(NoArguments.value);
  }();
  var gRouteNoArguments = {
    gRouteDuplexCtr: identity17
  };
  var gRouteDuplexCtr = function(dict) {
    return dict.gRouteDuplexCtr;
  };
  var gRouteDuplex = function(dict) {
    return dict.gRouteDuplex;
  };
  var gRouteSum = function(dictGRouteDuplex) {
    var gRouteDuplex1 = gRouteDuplex(dictGRouteDuplex);
    return function(dictGRouteDuplex1) {
      var gRouteDuplex2 = gRouteDuplex(dictGRouteDuplex1);
      return {
        gRouteDuplex: function(end$prime) {
          return function(r) {
            var v2 = gRouteDuplex1(end$prime)(r);
            var v1 = gRouteDuplex2(end$prime)(r);
            var enc = function(v22) {
              if (v22 instanceof Inl) {
                return v2.value0(v22.value0);
              }
              ;
              if (v22 instanceof Inr) {
                return v1.value0(v22.value0);
              }
              ;
              throw new Error("Failed pattern match at Routing.Duplex.Generic (line 51, column 11 - line 53, column 22): " + [v22.constructor.name]);
            };
            var dec = alt3(map31(Inl.create)(v2.value1))(map31(Inr.create)(v1.value1));
            return new RouteDuplex(enc, dec);
          };
        }
      };
    };
  };
  var sum2 = function(dictGeneric) {
    var from4 = from(dictGeneric);
    var to3 = to(dictGeneric);
    return function(dictGRouteDuplex) {
      var $71 = dimap2(from4)(to3);
      var $72 = gRouteDuplex(dictGRouteDuplex)(end2);
      return function($73) {
        return $71($72($73));
      };
    };
  };
  var gRouteConstructor = function(dictIsSymbol) {
    var get4 = get2(dictIsSymbol)();
    return function() {
      return function(dictGRouteDuplexCtr) {
        var gRouteDuplexCtr1 = gRouteDuplexCtr(dictGRouteDuplexCtr);
        return {
          gRouteDuplex: function(end$prime) {
            return function(r) {
              var v2 = end$prime(gRouteDuplexCtr1(get4($$Proxy.value)(r)));
              var enc = function(v1) {
                return v2.value0(v1);
              };
              var dec = map31(Constructor)(v2.value1);
              return new RouteDuplex(enc, dec);
            };
          }
        };
      };
    };
  };
  var gRouteAll = {
    gRouteDuplexCtr: function(v2) {
      return new RouteDuplex(function(v1) {
        return v2.value0(v1);
      }, map31(Argument)(v2.value1));
    }
  };

  // output/Routing.Duplex.Generic.Syntax/index.js
  var gsepStringRoute = function(dictGRouteDuplexCtr) {
    var gRouteDuplexCtr2 = gRouteDuplexCtr(dictGRouteDuplexCtr);
    return {
      gsep: function(a3) {
        var $15 = prefix3(a3);
        return function($16) {
          return $15(gRouteDuplexCtr2($16));
        };
      }
    };
  };
  var gsep = function(dict) {
    return dict.gsep;
  };
  var gparamsString = function(dictRouteDuplexParams) {
    var params2 = params(dictRouteDuplexParams);
    return {
      gparams: function(a3) {
        var $19 = prefix3(a3);
        return function($20) {
          return $19(params2($20));
        };
      }
    };
  };
  var gparams = function(dict) {
    return dict.gparams;
  };

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return doc.readyState;
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  }();
  var Interactive = /* @__PURE__ */ function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  }();
  var Complete = /* @__PURE__ */ function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  }();
  var parse4 = function(v2) {
    if (v2 === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v2 === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v2 === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map33 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce;
  var toNonElementParentNode = unsafeCoerce;
  var toEventTarget = unsafeCoerce;
  var toDocument = unsafeCoerce;
  var readyState = function(doc) {
    return map33(function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse4($5));
      };
    }())(function() {
      return _readyState(doc);
    });
  };

  // output/Web.HTML.HTMLInputElement/foreign.js
  function valueAsNumber(input3) {
    return function() {
      return input3.valueAsNumber;
    };
  }
  function setValueAsNumber(valueAsNumber2) {
    return function(input3) {
      return function() {
        input3.valueAsNumber = valueAsNumber2;
      };
    };
  }

  // output/Web.HTML.HTMLInputElement/index.js
  var fromElement2 = /* @__PURE__ */ unsafeReadProtoTagged("HTMLInputElement");

  // output/Web.HTML.Location/foreign.js
  function hash3(location4) {
    return function() {
      return location4.hash;
    };
  }
  function setHash(hash4) {
    return function(location4) {
      return function() {
        location4.hash = hash4;
      };
    };
  }

  // output/Web.HTML.Window/foreign.js
  function document2(window2) {
    return function() {
      return window2.document;
    };
  }
  function location2(window2) {
    return function() {
      return window2.location;
    };
  }
  function confirm(str) {
    return function(window2) {
      return function() {
        return window2.confirm(str);
      };
    };
  }
  function localStorage(window2) {
    return function() {
      return window2.localStorage;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget2 = unsafeCoerce;

  // output/Web.HTML.Event.HashChangeEvent.EventTypes/index.js
  var hashchange = "hashchange";

  // output/Routing.Hash/index.js
  var bind6 = /* @__PURE__ */ bind(bindEffect);
  var map34 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindEffect);
  var join3 = /* @__PURE__ */ join(bindEffect);
  var apply4 = /* @__PURE__ */ apply(applyEffect);
  var pure9 = /* @__PURE__ */ pure(applicativeEffect);
  var voidRight2 = /* @__PURE__ */ voidRight(functorEffect);
  var setHash2 = function(h7) {
    return bind6(bind6(windowImpl)(location2))(setHash(h7));
  };
  var getHash = /* @__PURE__ */ bind6(/* @__PURE__ */ bind6(windowImpl)(location2))(/* @__PURE__ */ function() {
    var $16 = map34(function() {
      var $18 = fromMaybe("");
      var $19 = stripPrefix("#");
      return function($20) {
        return $18($19($20));
      };
    }());
    return function($17) {
      return $16(hash3($17));
    };
  }());
  var foldHashes = function(cb) {
    return function(init4) {
      return function __do5() {
        var ref3 = bindFlipped5($$new)(bindFlipped5(init4)(getHash))();
        var win = map34(toEventTarget2)(windowImpl)();
        var listener = eventListener(function(v2) {
          return bindFlipped5(flip(write2)(ref3))(join3(apply4(map34(cb)(read2(ref3)))(getHash)));
        })();
        addEventListener2(hashchange)(listener)(false)(win)();
        return removeEventListener2(hashchange)(listener)(false)(win);
      };
    };
  };
  var matchesWith = function(dictFoldable) {
    var indexl2 = indexl(dictFoldable);
    return function(parser) {
      return function(cb) {
        var go2 = function(a3) {
          var $21 = maybe(pure9(a3))(function(b2) {
            return voidRight2(new Just(b2))(cb(a3)(b2));
          });
          var $22 = indexl2(0);
          return function($23) {
            return $21($22(parser($23)));
          };
        };
        return foldHashes(go2)(go2(Nothing.value));
      };
    };
  };

  // output/Capability.Navigate/index.js
  var genericShowConstructor2 = /* @__PURE__ */ genericShowConstructor(genericShowArgsNoArguments);
  var HomeIsSymbol = {
    reflectSymbol: function() {
      return "Home";
    }
  };
  var AboutIsSymbol = {
    reflectSymbol: function() {
      return "About";
    }
  };
  var InstructionsIsSymbol = {
    reflectSymbol: function() {
      return "Instructions";
    }
  };
  var LevelSelectIsSymbol = {
    reflectSymbol: function() {
      return "LevelSelect";
    }
  };
  var levelNameIsSymbol = {
    reflectSymbol: function() {
      return "levelName";
    }
  };
  var suiteNameIsSymbol = {
    reflectSymbol: function() {
      return "suiteName";
    }
  };
  var LevelIsSymbol = {
    reflectSymbol: function() {
      return "Level";
    }
  };
  var gsep2 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteNoArguments));
  var Home = /* @__PURE__ */ function() {
    function Home2() {
    }
    ;
    Home2.value = new Home2();
    return Home2;
  }();
  var About = /* @__PURE__ */ function() {
    function About2() {
    }
    ;
    About2.value = new About2();
    return About2;
  }();
  var Instructions = /* @__PURE__ */ function() {
    function Instructions2() {
    }
    ;
    Instructions2.value = new Instructions2();
    return Instructions2;
  }();
  var LevelSelect = /* @__PURE__ */ function() {
    function LevelSelect2() {
    }
    ;
    LevelSelect2.value = new LevelSelect2();
    return LevelSelect2;
  }();
  var Level = /* @__PURE__ */ function() {
    function Level2(value0) {
      this.value0 = value0;
    }
    ;
    Level2.create = function(value0) {
      return new Level2(value0);
    };
    return Level2;
  }();
  var showUnderscore = {
    show: function(v2) {
      return "Underscore " + v2;
    }
  };
  var genericRoute_ = {
    to: function(x2) {
      if (x2 instanceof Inl) {
        return Home.value;
      }
      ;
      if (x2 instanceof Inr && x2.value0 instanceof Inl) {
        return About.value;
      }
      ;
      if (x2 instanceof Inr && (x2.value0 instanceof Inr && x2.value0.value0 instanceof Inl)) {
        return Instructions.value;
      }
      ;
      if (x2 instanceof Inr && (x2.value0 instanceof Inr && (x2.value0.value0 instanceof Inr && x2.value0.value0.value0 instanceof Inl))) {
        return LevelSelect.value;
      }
      ;
      if (x2 instanceof Inr && (x2.value0 instanceof Inr && (x2.value0.value0 instanceof Inr && x2.value0.value0.value0 instanceof Inr))) {
        return new Level(x2.value0.value0.value0.value0);
      }
      ;
      throw new Error("Failed pattern match at Capability.Navigate (line 40, column 1 - line 40, column 32): " + [x2.constructor.name]);
    },
    from: function(x2) {
      if (x2 instanceof Home) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x2 instanceof About) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x2 instanceof Instructions) {
        return new Inr(new Inr(new Inl(NoArguments.value)));
      }
      ;
      if (x2 instanceof LevelSelect) {
        return new Inr(new Inr(new Inr(new Inl(NoArguments.value))));
      }
      ;
      if (x2 instanceof Level) {
        return new Inr(new Inr(new Inr(new Inr(x2.value0))));
      }
      ;
      throw new Error("Failed pattern match at Capability.Navigate (line 40, column 1 - line 40, column 32): " + [x2.constructor.name]);
    }
  };
  var showRoute = {
    show: /* @__PURE__ */ genericShow(genericRoute_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor2(HomeIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor2(AboutIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor2(InstructionsIsSymbol))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor2(LevelSelectIsSymbol))(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons(levelNameIsSymbol)(/* @__PURE__ */ showRecordFieldsConsNil(suiteNameIsSymbol)(showUnderscore))(showUnderscore))))(LevelIsSymbol))))))
  };
  var eqUnderscore = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var eq15 = /* @__PURE__ */ eq(eqUnderscore);
  var eqRoute = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Home && y2 instanceof Home) {
          return true;
        }
        ;
        if (x2 instanceof About && y2 instanceof About) {
          return true;
        }
        ;
        if (x2 instanceof Instructions && y2 instanceof Instructions) {
          return true;
        }
        ;
        if (x2 instanceof LevelSelect && y2 instanceof LevelSelect) {
          return true;
        }
        ;
        if (x2 instanceof Level && y2 instanceof Level) {
          return eq15(x2.value0.levelName)(y2.value0.levelName) && eq15(x2.value0.suiteName)(y2.value0.suiteName);
        }
        ;
        return false;
      };
    }
  };
  var toUnderscore = function(s2) {
    return replaceAll(" ")("_")(s2);
  };
  var underscore = /* @__PURE__ */ function() {
    var hasUnderscore = function(str) {
      var $145 = contains(" ")(str);
      if ($145) {
        return new Left(str);
      }
      ;
      return new Right(toUnderscore(str));
    };
    return as2(function(v2) {
      return v2;
    })(hasUnderscore);
  }();
  var routeCodec = /* @__PURE__ */ function() {
    return $$default2(Home.value)(root(sum2(genericRoute_)(gRouteSum(gRouteConstructor(HomeIsSymbol)()(gRouteNoArguments))(gRouteSum(gRouteConstructor(AboutIsSymbol)()(gRouteNoArguments))(gRouteSum(gRouteConstructor(InstructionsIsSymbol)()(gRouteNoArguments))(gRouteSum(gRouteConstructor(LevelSelectIsSymbol)()(gRouteNoArguments))(gRouteConstructor(LevelIsSymbol)()(gRouteAll))))))({
      Home: gsep2("home")(noArgs),
      About: gsep2("about")(noArgs),
      Instructions: gsep2("how-to-play")(noArgs),
      LevelSelect: gsep2("level-select")(noArgs),
      Level: gparams(gparamsString(routeDuplexParams()(buildParamsCons(levelNameIsSymbol)()()()()(buildParamsCons(suiteNameIsSymbol)()()()()(buildParamsNil)))))("level")({
        suiteName: underscore,
        levelName: underscore
      })
    })));
  }();
  var navigateTo = function(dictMonadEffect) {
    var liftEffect11 = liftEffect(dictMonadEffect);
    return function(route) {
      return liftEffect11(setHash2(print(routeCodec)(route)));
    };
  };
  var level = function(v2) {
    return new Level({
      suiteName: toUnderscore(v2.suiteName),
      levelName: toUnderscore(v2.levelName)
    });
  };
  var fromUnderscore = function(v2) {
    return replaceAll("_")(" ")(v2);
  };

  // output/Web.Storage.Storage/foreign.js
  function _getItem(key2) {
    return function(storage) {
      return function() {
        return storage.getItem(key2);
      };
    };
  }
  function setItem(key2) {
    return function(value14) {
      return function(storage) {
        return function() {
          storage.setItem(key2, value14);
        };
      };
    };
  }
  function clear2(storage) {
    return function() {
      storage.clear();
    };
  }

  // output/Web.Storage.Storage/index.js
  var map35 = /* @__PURE__ */ map(functorEffect);
  var getItem = function(s2) {
    var $5 = map35(toMaybe);
    var $6 = _getItem(s2);
    return function($7) {
      return $5($6($7));
    };
  };

  // output/Capability.Progress/index.js
  var bind7 = /* @__PURE__ */ bind(bindEffect);
  var show10 = /* @__PURE__ */ show(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "levelName";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "suiteName";
    }
  })(showString))(showString)));
  var mapFlipped4 = /* @__PURE__ */ mapFlipped(functorEffect);
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var Incomplete = /* @__PURE__ */ function() {
    function Incomplete2() {
    }
    ;
    Incomplete2.value = new Incomplete2();
    return Incomplete2;
  }();
  var Completed = /* @__PURE__ */ function() {
    function Completed4() {
    }
    ;
    Completed4.value = new Completed4();
    return Completed4;
  }();
  var showLevelProgress = {
    show: function(v2) {
      if (v2 instanceof Incomplete) {
        return "Incomplete";
      }
      ;
      if (v2 instanceof Completed) {
        return "Completed";
      }
      ;
      throw new Error("Failed pattern match at Capability.Progress (line 41, column 10 - line 43, column 31): " + [v2.constructor.name]);
    }
  };
  var semigroupLevelProgress = {
    append: function(v2) {
      return function(v1) {
        if (v2 instanceof Completed && v1 instanceof Completed) {
          return Completed.value;
        }
        ;
        return Incomplete.value;
      };
    }
  };
  var levelProgress = function(dictChoice) {
    var toStr = function(v2) {
      if (v2 instanceof Incomplete) {
        return "Incomplete";
      }
      ;
      if (v2 instanceof Completed) {
        return "Completed";
      }
      ;
      throw new Error("Failed pattern match at Capability.Progress (line 32, column 13 - line 34, column 31): " + [v2.constructor.name]);
    };
    var fromStr = function(v2) {
      if (v2 === "Incomplete") {
        return new Just(Incomplete.value);
      }
      ;
      if (v2 === "Completed") {
        return new Just(Completed.value);
      }
      ;
      return Nothing.value;
    };
    return prism$prime(toStr)(fromStr)(dictChoice);
  };
  var levelProgress1 = /* @__PURE__ */ levelProgress(taggedChoice);
  var levelProgress2 = /* @__PURE__ */ levelProgress(/* @__PURE__ */ choiceForget(monoidFirst));
  var saveLevelProgress = function(dictMonadEffect) {
    var liftEffect11 = liftEffect(dictMonadEffect);
    return function(id4) {
      return function(progress3) {
        return liftEffect11(bind7(bind7(windowImpl)(localStorage))(setItem(show10(id4))(review(levelProgress1)(progress3))));
      };
    };
  };
  var getLevelProgress = function(dictMonadEffect) {
    var liftEffect11 = liftEffect(dictMonadEffect);
    return function(id4) {
      return liftEffect11(mapFlipped4(bind7(bind7(windowImpl)(localStorage))(getItem(show10(id4))))(bindFlipped6(preview(levelProgress2))));
    };
  };
  var deleteProgress = function(dictMonadEffect) {
    return liftEffect(dictMonadEffect)(bind7(bind7(windowImpl)(localStorage))(clear2));
  };

  // output/Halogen.HTML.Elements/index.js
  var pure10 = /* @__PURE__ */ pure(applicativeMaybe);
  var elementNS = function($15) {
    return element(pure10($15));
  };
  var element2 = /* @__PURE__ */ function() {
    return element(Nothing.value);
  }();
  var h1 = /* @__PURE__ */ element2("h1");
  var h1_ = /* @__PURE__ */ h1([]);
  var h2 = /* @__PURE__ */ element2("h2");
  var h2_ = /* @__PURE__ */ h2([]);
  var h3 = /* @__PURE__ */ element2("h3");
  var h3_ = /* @__PURE__ */ h3([]);
  var input = function(props) {
    return element2("input")(props)([]);
  };
  var li = /* @__PURE__ */ element2("li");
  var li_ = /* @__PURE__ */ li([]);
  var option = /* @__PURE__ */ element2("option");
  var source = function(props) {
    return element2("source")(props)([]);
  };
  var span4 = /* @__PURE__ */ element2("span");
  var span_ = /* @__PURE__ */ span4([]);
  var table = /* @__PURE__ */ element2("table");
  var table_ = /* @__PURE__ */ table([]);
  var tbody = /* @__PURE__ */ element2("tbody");
  var tbody_ = /* @__PURE__ */ tbody([]);
  var td = /* @__PURE__ */ element2("td");
  var td_ = /* @__PURE__ */ td([]);
  var tfoot = /* @__PURE__ */ element2("tfoot");
  var tfoot_ = /* @__PURE__ */ tfoot([]);
  var th = /* @__PURE__ */ element2("th");
  var th_ = /* @__PURE__ */ th([]);
  var thead = /* @__PURE__ */ element2("thead");
  var thead_ = /* @__PURE__ */ thead([]);
  var tr = /* @__PURE__ */ element2("tr");
  var tr_ = /* @__PURE__ */ tr([]);
  var ul = /* @__PURE__ */ element2("ul");
  var ul_ = /* @__PURE__ */ ul([]);
  var video = /* @__PURE__ */ element2("video");
  var div5 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div5([]);
  var datalist = /* @__PURE__ */ element2("datalist");
  var colgroup = /* @__PURE__ */ element2("colgroup");
  var colgroup_ = /* @__PURE__ */ colgroup([]);
  var col = function(props) {
    return element2("col")(props)([]);
  };
  var button2 = /* @__PURE__ */ element2("button");
  var br = function(props) {
    return element2("br")(props)([]);
  };
  var br_ = /* @__PURE__ */ br([]);
  var b = /* @__PURE__ */ element2("b");
  var b_ = /* @__PURE__ */ b([]);
  var a = /* @__PURE__ */ element2("a");

  // output/Halogen.HTML.Properties/index.js
  var unwrap8 = /* @__PURE__ */ unwrap();
  var ref2 = /* @__PURE__ */ function() {
    var go2 = function(p2) {
      return function(mel) {
        return new Just(new RefUpdate(p2, mel));
      };
    };
    return function($29) {
      return ref(go2($29));
    };
  }();
  var prop5 = function(dictIsProp) {
    return prop3(dictIsProp);
  };
  var prop12 = /* @__PURE__ */ prop5(isPropBoolean);
  var prop22 = /* @__PURE__ */ prop5(isPropString);
  var prop32 = /* @__PURE__ */ prop5(isPropInt);
  var prop42 = /* @__PURE__ */ prop5(isPropNumber);
  var rowSpan2 = /* @__PURE__ */ prop32("rowSpan");
  var src9 = /* @__PURE__ */ prop22("src");
  var step3 = /* @__PURE__ */ prop5(isPropStepValue)("step");
  var type_17 = function(dictIsProp) {
    return prop5(dictIsProp)("type");
  };
  var value12 = function(dictIsProp) {
    return prop5(dictIsProp)("value");
  };
  var muted2 = /* @__PURE__ */ prop12("muted");
  var min5 = /* @__PURE__ */ prop42("min");
  var max6 = /* @__PURE__ */ prop42("max");
  var loop2 = /* @__PURE__ */ prop12("loop");
  var id2 = /* @__PURE__ */ prop22("id");
  var href4 = /* @__PURE__ */ prop22("href");
  var draggable2 = /* @__PURE__ */ prop12("draggable");
  var controls2 = /* @__PURE__ */ prop12("controls");
  var colSpan2 = /* @__PURE__ */ prop32("colSpan");
  var classes = /* @__PURE__ */ function() {
    var $32 = prop22("className");
    var $33 = joinWith(" ");
    var $34 = map(functorArray)(unwrap8);
    return function($35) {
      return $32($33($34($35)));
    };
  }();
  var class_ = /* @__PURE__ */ function() {
    var $36 = prop22("className");
    return function($37) {
      return $36(unwrap8($37));
    };
  }();
  var autoplay2 = /* @__PURE__ */ prop12("autoplay");
  var attr2 = /* @__PURE__ */ function() {
    return attr(Nothing.value);
  }();
  var list = /* @__PURE__ */ attr2("list");
  var style = /* @__PURE__ */ attr2("style");

  // output/Component.Layout.DefaultLayout/index.js
  var defaultLayout = function(inner) {
    return div5([id2("default-layout")])([div5([id2("title")])([text("A.B.E.D.")]), div5([class_("inner")])([inner])]);
  };

  // output/Control.Monad.Except/index.js
  var unwrap9 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap9(runExceptT($3));
  };

  // output/Web.Event.Event/foreign.js
  function _target(e) {
    return e.target;
  }
  function preventDefault(e) {
    return function() {
      return e.preventDefault();
    };
  }

  // output/Web.Event.Event/index.js
  var target5 = function($3) {
    return toMaybe(_target($3));
  };

  // output/Web.HTML.Event.DragEvent.EventTypes/index.js
  var drop5 = "drop";
  var dragover = "dragover";
  var dragleave = "dragleave";
  var dragexit = "dragexit";
  var dragenter = "dragenter";
  var dragend = "dragend";
  var drag = "drag";

  // output/Web.HTML.Event.EventTypes/index.js
  var input2 = "input";
  var domcontentloaded = "DOMContentLoaded";

  // output/Web.UIEvent.KeyboardEvent.EventTypes/index.js
  var keydown = "keydown";

  // output/Web.UIEvent.MouseEvent.EventTypes/index.js
  var mouseup = "mouseup";
  var mouseover = "mouseover";
  var mousemove = "mousemove";
  var mouseleave = "mouseleave";
  var mouseenter = "mouseenter";
  var mousedown = "mousedown";
  var click2 = "click";
  var auxclick = "auxclick";

  // output/Halogen.HTML.Events/index.js
  var mouseHandler = unsafeCoerce;
  var keyHandler = unsafeCoerce;
  var handler2 = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return new Just(new Action(f(ev)));
      });
    };
  };
  var onAuxClick = /* @__PURE__ */ function() {
    var $13 = handler2(auxclick);
    return function($14) {
      return $13(mouseHandler($14));
    };
  }();
  var onClick = /* @__PURE__ */ function() {
    var $15 = handler2(click2);
    return function($16) {
      return $15(mouseHandler($16));
    };
  }();
  var onInput = /* @__PURE__ */ handler2(input2);
  var onKeyDown = /* @__PURE__ */ function() {
    var $23 = handler2(keydown);
    return function($24) {
      return $23(keyHandler($24));
    };
  }();
  var onMouseDown = /* @__PURE__ */ function() {
    var $27 = handler2(mousedown);
    return function($28) {
      return $27(mouseHandler($28));
    };
  }();
  var onMouseEnter = /* @__PURE__ */ function() {
    var $29 = handler2(mouseenter);
    return function($30) {
      return $29(mouseHandler($30));
    };
  }();
  var onMouseLeave = /* @__PURE__ */ function() {
    var $31 = handler2(mouseleave);
    return function($32) {
      return $31(mouseHandler($32));
    };
  }();
  var onMouseMove = /* @__PURE__ */ function() {
    var $33 = handler2(mousemove);
    return function($34) {
      return $33(mouseHandler($34));
    };
  }();
  var onMouseOver = /* @__PURE__ */ function() {
    var $37 = handler2(mouseover);
    return function($38) {
      return $37(mouseHandler($38));
    };
  }();
  var onMouseUp = /* @__PURE__ */ function() {
    var $39 = handler2(mouseup);
    return function($40) {
      return $39(mouseHandler($40));
    };
  }();
  var dragHandler = unsafeCoerce;
  var onDrag = /* @__PURE__ */ function() {
    var $63 = handler2(drag);
    return function($64) {
      return $63(dragHandler($64));
    };
  }();
  var onDragEnd = /* @__PURE__ */ function() {
    var $65 = handler2(dragend);
    return function($66) {
      return $65(dragHandler($66));
    };
  }();
  var onDragEnter = /* @__PURE__ */ function() {
    var $67 = handler2(dragenter);
    return function($68) {
      return $67(dragHandler($68));
    };
  }();
  var onDragExit = /* @__PURE__ */ function() {
    var $69 = handler2(dragexit);
    return function($70) {
      return $69(dragHandler($70));
    };
  }();
  var onDragLeave = /* @__PURE__ */ function() {
    var $71 = handler2(dragleave);
    return function($72) {
      return $71(dragHandler($72));
    };
  }();
  var onDragOver = /* @__PURE__ */ function() {
    var $73 = handler2(dragover);
    return function($74) {
      return $73(dragHandler($74));
    };
  }();
  var onDrop = /* @__PURE__ */ function() {
    var $77 = handler2(drop5);
    return function($78) {
      return $77(dragHandler($78));
    };
  }();

  // output/Component.About/index.js
  var bind8 = /* @__PURE__ */ bind(bindEffect);
  var when2 = /* @__PURE__ */ when(applicativeEffect);
  var deleteProgress2 = /* @__PURE__ */ deleteProgress(monadEffectEffect);
  var DeleteProgress = /* @__PURE__ */ function() {
    function DeleteProgress2() {
    }
    ;
    DeleteProgress2.value = new DeleteProgress2();
    return DeleteProgress2;
  }();
  var component = function(dictMonadAff) {
    var liftEffect11 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    var render6 = function(state3) {
      return defaultLayout(div5([class_("about-component")])([h1_([text("about page")]), h3_([text("This game created by Mitch Stevens \u{1F1E6}\u{1F1FA}")]), text(`Note: I am not a """web developer""". As a result, I don't know CSS and I have no idea how this will look on your browser. Since I know this ""game""" works on my machine, I suggest you play this using:`), ul_([li_([text("Brave browser, chrome is probably also fine.")]), li_([text("At least 768px screen width; if you use phone you're gonna have a bad time.")])]), br_, text("email here: mitchstevens95 at gmail dot com"), br_, text("Source Code: "), a([href4("github.com/MitchStevens/abed-ps")])([text("github.com/MitchStevens/abed-ps")]), br_, button2([onClick(function(v2) {
        return DeleteProgress.value;
      })])([text("Delete all progress")])]));
    };
    var initialState5 = function(v2) {
      return {};
    };
    var $$eval3 = mkEval({
      handleQuery: defaultEval.handleQuery,
      receive: defaultEval.receive,
      initialize: defaultEval.initialize,
      finalize: defaultEval.finalize,
      handleAction: function(v1) {
        return liftEffect11(function __do5() {
          var confirmDelete = bind8(windowImpl)(confirm("Really delete all progress?"))();
          return when2(confirmDelete)(deleteProgress2)();
        });
      }
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState5,
      render: render6
    });
  };

  // output/Component.Home/index.js
  var NavigateTo = /* @__PURE__ */ function() {
    function NavigateTo3(value0) {
      this.value0 = value0;
    }
    ;
    NavigateTo3.create = function(value0) {
      return new NavigateTo3(value0);
    };
    return NavigateTo3;
  }();
  var component2 = function(dictMonadAff) {
    var navigateTo3 = navigateTo(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    var render6 = function(state3) {
      return defaultLayout(h1([id2("home-component")])([a([onClick(function(v2) {
        return new NavigateTo(LevelSelect.value);
      }), class_("link")])([text("Choose a level")]), br_, a([onClick(function(v2) {
        return new NavigateTo(Instructions.value);
      }), class_("link")])([text("How to play")]), br_, a([onClick(function(v2) {
        return new NavigateTo(About.value);
      }), class_("link")])([text("About")])]));
    };
    var initialState5 = function(v2) {
      return {
        titleText: ""
      };
    };
    var $$eval3 = mkEval({
      handleQuery: defaultEval.handleQuery,
      receive: defaultEval.receive,
      finalize: defaultEval.finalize,
      handleAction: function(v1) {
        return navigateTo3(v1.value0);
      },
      initialize: Nothing.value
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState5,
      render: render6
    });
  };

  // output/Component.Instructions/index.js
  var component3 = /* @__PURE__ */ function() {
    var render6 = function(v2) {
      return defaultLayout(div5([id2("instructions-component")])([h1_([text("How to play")]), h2_([text("Coming soon...")])]));
    };
    var initialState5 = function(v2) {
      return {};
    };
    var $$eval3 = mkEval(defaultEval);
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState5,
      render: render6
    });
  }();

  // output/Web.DOM.DOMTokenList/foreign.js
  function add2(list2) {
    return function(token) {
      return function() {
        return list2.add(token);
      };
    };
  }
  function remove(list2) {
    return function(token) {
      return function() {
        return list2.remove(token);
      };
    };
  }

  // output/Capability.Animate/index.js
  var bind9 = /* @__PURE__ */ bind(bindEffect);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var headShake = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var Monad0 = MonadEffect0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind118 = bind(Bind1);
    var liftEffect11 = liftEffect(MonadEffect0);
    var for_7 = for_(Monad0.Applicative0())(foldableMaybe);
    var discard111 = discard2(Bind1);
    var liftAff2 = liftAff(dictMonadAff);
    return function(selector2) {
      return bind118(liftEffect11(bind9(windowImpl)(document2)))(function(htmlDocument) {
        return bind118(liftEffect11(querySelector(selector2)(toParentNode(htmlDocument))))(function(maybeElement) {
          return for_7(maybeElement)(function(element4) {
            return bind118(liftEffect11(classList(element4)))(function(tokenList) {
              return discard111(liftEffect11(add2(tokenList)("head-shake")))(function() {
                return discard111(liftAff2(delay(1e3)))(function() {
                  return liftEffect11(remove(tokenList)("head-shake"));
                });
              });
            });
          });
        });
      });
    };
  };

  // output/Halogen.Query.Event/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var eventListener2 = function(eventType) {
    return function(target6) {
      return function(f) {
        return makeEmitter(function(push2) {
          return function __do5() {
            var listener = eventListener(function(ev) {
              return traverse_4(push2)(f(ev));
            })();
            addEventListener2(eventType)(listener)(false)(target6)();
            return removeEventListener2(eventType)(listener)(false)(target6);
          };
        });
      };
    };
  };

  // output/Web.UIEvent.KeyboardEvent/foreign.js
  function key(e) {
    return e.key;
  }
  function ctrlKey(e) {
    return e.ctrlKey;
  }

  // output/Web.UIEvent.KeyboardEvent/index.js
  var fromEvent = /* @__PURE__ */ unsafeReadProtoTagged("KeyboardEvent");

  // output/Web.UIEvent.MouseEvent/foreign.js
  function clientX(e) {
    return e.clientX;
  }
  function clientY(e) {
    return e.clientY;
  }
  function button3(e) {
    return e.button;
  }

  // output/Web.UIEvent.MouseEvent/index.js
  var toEvent = unsafeCoerce;

  // output/Capability.GlobalEventEmmiters/index.js
  var bind10 = /* @__PURE__ */ bind(bindEffect);
  var globalKeyDownEventEmitter = function __do2() {
    var htmlDocument = bind10(windowImpl)(document2)();
    var target6 = toEventTarget(htmlDocument);
    return eventListener2(keydown)(target6)(fromEvent);
  };

  // output/Data.Lens.AffineTraversal/index.js
  var identity18 = /* @__PURE__ */ identity(categoryFn);
  var fanout2 = /* @__PURE__ */ fanout(semigroupoidFn)(strongFn);
  var affineTraversal$prime = function(to3) {
    return function(dictStrong) {
      var second3 = second2(dictStrong);
      return function(dictChoice) {
        var dimap3 = dimap(dictChoice.Profunctor0());
        var right2 = right(dictChoice);
        return function(pab) {
          return dimap3(to3)(function(v2) {
            return either(identity18)(v2.value0)(v2.value1);
          })(second3(right2(pab)));
        };
      };
    };
  };
  var affineTraversal = function(set3) {
    return function(pre2) {
      return function(dictStrong) {
        return function(dictChoice) {
          return affineTraversal$prime(fanout2(set3)(pre2))(dictStrong)(dictChoice);
        };
      };
    };
  };

  // output/Data.Lens.Prism.Maybe/index.js
  var _Just = function(dictChoice) {
    return prism(Just.create)(maybe(new Left(Nothing.value))(Right.create))(dictChoice);
  };

  // output/Data.Lens.Index/index.js
  var ix = function(dict) {
    return dict.ix;
  };
  var indexMap = function(dictOrd) {
    var update3 = update(dictOrd);
    var lookup27 = lookup2(dictOrd);
    return {
      ix: function(k) {
        return function(dictStrong) {
          return function(dictChoice) {
            var set3 = function(s2) {
              return function(b2) {
                return update3(function(v2) {
                  return new Just(b2);
                })(k)(s2);
              };
            };
            var pre2 = function(s2) {
              return maybe(new Left(s2))(Right.create)(lookup27(k)(s2));
            };
            return affineTraversal(set3)(pre2)(dictStrong)(dictChoice);
          };
        };
      }
    };
  };

  // output/Data.Lens.At/index.js
  var atMap = function(dictOrd) {
    var lookup27 = lookup2(dictOrd);
    var $$delete10 = $$delete2(dictOrd);
    var insert17 = insert(dictOrd);
    var indexMap2 = indexMap(dictOrd);
    return {
      at: function(k) {
        return function(dictStrong) {
          return lens(lookup27(k))(function(m2) {
            return maybe$prime(function(v2) {
              return $$delete10(k)(m2);
            })(function(v2) {
              return insert17(k)(v2)(m2);
            });
          })(dictStrong);
        };
      },
      Index0: function() {
        return indexMap2;
      }
    };
  };
  var at = function(dict) {
    return dict.at;
  };

  // output/Data.Zipper/index.js
  var map36 = /* @__PURE__ */ map(functorList);
  var unfoldr3 = /* @__PURE__ */ unfoldr(unfoldableList);
  var map115 = /* @__PURE__ */ map(functorMaybe);
  var Zipper = /* @__PURE__ */ function() {
    function Zipper2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Zipper2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Zipper2(value0, value1, value22);
        };
      };
    };
    return Zipper2;
  }();
  var functorZipper = {
    map: function(f) {
      return function(v2) {
        return new Zipper(map36(f)(v2.value0), f(v2.value1), map36(f)(v2.value2));
      };
    }
  };
  var singleton11 = function(v2) {
    return new Zipper(Nil.value, v2, Nil.value);
  };
  var moveRight = function(v2) {
    if (v2.value2 instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v2.value2 instanceof Cons) {
      return new Just(new Zipper(new Cons(v2.value1, v2.value0), v2.value2.value0, v2.value2.value1));
    }
    ;
    throw new Error("Failed pattern match at Data.Zipper (line 69, column 30 - line 71, column 50): " + [v2.value2.constructor.name]);
  };
  var moveLeft = function(v2) {
    if (v2.value0 instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v2.value0 instanceof Cons) {
      return new Just(new Zipper(v2.value0.value1, v2.value0.value0, new Cons(v2.value1, v2.value2)));
    }
    ;
    throw new Error("Failed pattern match at Data.Zipper (line 64, column 29 - line 66, column 50): " + [v2.value0.constructor.name]);
  };
  var extendZipper = {
    extend: function(f) {
      return function(zipper) {
        var dup = function(x2) {
          return new Tuple(x2, x2);
        };
        var lefts = reverse(unfoldr3(function(z2) {
          return map115(dup)(moveLeft(z2));
        })(zipper));
        var rights = unfoldr3(function(z2) {
          return map115(dup)(moveRight(z2));
        })(zipper);
        return new Zipper(map36(f)(lefts), f(zipper), map36(f)(rights));
      };
    },
    Functor0: function() {
      return functorZipper;
    }
  };
  var comonadZipper = {
    extract: function(v2) {
      return v2.value1;
    },
    Extend0: function() {
      return extendZipper;
    }
  };
  var head3 = /* @__PURE__ */ extract(comonadZipper);
  var append11 = function(v$prime) {
    return function(v2) {
      return new Zipper(new Cons(v2.value1, v2.value0), v$prime, Nil.value);
    };
  };
  var _head2 = function(dictStrong) {
    return lens(head3)(function(v2) {
      return function(x2) {
        return new Zipper(v2.value0, x2, v2.value2);
      };
    })(dictStrong);
  };

  // output/Data.Compactable/index.js
  var $$void7 = /* @__PURE__ */ $$void(functorST);
  var pure12 = /* @__PURE__ */ pure(applicativeST);
  var apply5 = /* @__PURE__ */ apply(applyST);
  var map37 = /* @__PURE__ */ map(functorST);
  var separate = function(dict) {
    return dict.separate;
  };
  var compactableArray = {
    compact: function(xs) {
      return function __do5() {
        var result = newSTArray();
        var iter = iterator(function(v2) {
          return index2(xs)(v2);
        })();
        iterate(iter)(function($108) {
          return $$void7(function(v2) {
            if (v2 instanceof Nothing) {
              return pure12(0);
            }
            ;
            if (v2 instanceof Just) {
              return push(v2.value0)(result);
            }
            ;
            throw new Error("Failed pattern match at Data.Compactable (line 111, column 34 - line 113, column 35): " + [v2.constructor.name]);
          }($108));
        })();
        return unsafeFreeze(result)();
      }();
    },
    separate: function(xs) {
      return function __do5() {
        var ls = newSTArray();
        var rs = newSTArray();
        var iter = iterator(function(v2) {
          return index2(xs)(v2);
        })();
        iterate(iter)(function($109) {
          return $$void7(function(v2) {
            if (v2 instanceof Left) {
              return push(v2.value0)(ls);
            }
            ;
            if (v2 instanceof Right) {
              return push(v2.value0)(rs);
            }
            ;
            throw new Error("Failed pattern match at Data.Compactable (line 122, column 34 - line 124, column 31): " + [v2.constructor.name]);
          }($109));
        })();
        return apply5(map37(function(v2) {
          return function(v1) {
            return {
              left: v2,
              right: v1
            };
          };
        })(unsafeFreeze(ls)))(unsafeFreeze(rs))();
      }();
    }
  };
  var compact = function(dict) {
    return dict.compact;
  };

  // output/Data.Filterable/index.js
  var append12 = /* @__PURE__ */ append(semigroupArray);
  var foldl5 = /* @__PURE__ */ foldl(foldableArray);
  var filterableArray = {
    partitionMap: function(p2) {
      var go2 = function(acc) {
        return function(x2) {
          var v2 = p2(x2);
          if (v2 instanceof Left) {
            return {
              right: acc.right,
              left: append12(acc.left)([v2.value0])
            };
          }
          ;
          if (v2 instanceof Right) {
            return {
              left: acc.left,
              right: append12(acc.right)([v2.value0])
            };
          }
          ;
          throw new Error("Failed pattern match at Data.Filterable (line 149, column 16 - line 151, column 50): " + [v2.constructor.name]);
        };
      };
      return foldl5(go2)({
        left: [],
        right: []
      });
    },
    partition: partition2,
    filterMap: mapMaybe3,
    filter: filter3,
    Compactable0: function() {
      return compactableArray;
    },
    Functor1: function() {
      return functorArray;
    }
  };
  var filter5 = function(dict) {
    return dict.filter;
  };
  var eitherBool = function(p2) {
    return function(x2) {
      var $84 = p2(x2);
      if ($84) {
        return new Right(x2);
      }
      ;
      return new Left(x2);
    };
  };

  // output/Data.Group/index.js
  var ginverse = function(dict) {
    return dict.ginverse;
  };

  // output/Data.Witherable/index.js
  var witherDefault = function(dictWitherable) {
    var compact2 = compact(dictWitherable.Filterable0().Compactable0());
    var traverse5 = traverse(dictWitherable.Traversable1());
    return function(dictApplicative) {
      var map65 = map(dictApplicative.Apply0().Functor0());
      var traverse12 = traverse5(dictApplicative);
      return function(p2) {
        var $184 = map65(compact2);
        var $185 = traverse12(p2);
        return function($186) {
          return $184($185($186));
        };
      };
    };
  };
  var wither = function(dict) {
    return dict.wither;
  };
  var wiltDefault = function(dictWitherable) {
    var separate2 = separate(dictWitherable.Filterable0().Compactable0());
    var traverse5 = traverse(dictWitherable.Traversable1());
    return function(dictApplicative) {
      var map65 = map(dictApplicative.Apply0().Functor0());
      var traverse12 = traverse5(dictApplicative);
      return function(p2) {
        var $187 = map65(separate2);
        var $188 = traverse12(p2);
        return function($189) {
          return $187($188($189));
        };
      };
    };
  };
  var witherableArray = {
    wilt: function(dictApplicative) {
      return wiltDefault(witherableArray)(dictApplicative);
    },
    wither: function(dictApplicative) {
      return witherDefault(witherableArray)(dictApplicative);
    },
    Filterable0: function() {
      return filterableArray;
    },
    Traversable1: function() {
      return traversableArray;
    }
  };

  // output/Game.Board.PieceInfo/index.js
  var prop6 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "rotation";
    }
  })()();
  var _rotation = function(dictStrong) {
    return prop6($$Proxy.value)(dictStrong);
  };

  // output/Game.Edge/index.js
  var eq5 = /* @__PURE__ */ eq(eqCardinalDirection);
  var eq16 = /* @__PURE__ */ eq(eqLocation);
  var append13 = /* @__PURE__ */ append(semigroupOrdering);
  var compare7 = /* @__PURE__ */ compare(ordLocation);
  var compare15 = /* @__PURE__ */ compare(ordCardinalDirection);
  var eqEdge = {
    eq: function(x2) {
      return function(y2) {
        return eq5(x2.dir)(y2.dir) && eq16(x2.loc)(y2.loc);
      };
    }
  };
  var ordEdge = {
    compare: function(v2) {
      return function(v1) {
        return append13(compare7(v2.loc)(v1.loc))(compare15(v2.dir)(v1.dir));
      };
    },
    Eq0: function() {
      return eqEdge;
    }
  };
  var edge = function(loc) {
    return function(dir2) {
      return {
        loc,
        dir: dir2
      };
    };
  };
  var matchEdge = function(v2) {
    return edge(followDirection(v2.loc)(v2.dir))(oppositeDirection(v2.dir));
  };

  // output/Game.Board.RelativeEdge/index.js
  var show11 = /* @__PURE__ */ show(showLocation);
  var show13 = /* @__PURE__ */ show(showCardinalDirection);
  var eq6 = /* @__PURE__ */ eq(eqEdge);
  var compare8 = /* @__PURE__ */ compare(ordEdge);
  var showRelativeEdge = {
    show: function(v2) {
      return "(RelEdge " + (show11(v2.loc) + (" " + (show13(v2.dir) + ")")));
    }
  };
  var eqRelativeEdge = {
    eq: function(x2) {
      return function(y2) {
        return eq6(x2)(y2);
      };
    }
  };
  var ordRelativeEdge = {
    compare: function(x2) {
      return function(y2) {
        return compare8(x2)(y2);
      };
    },
    Eq0: function() {
      return eqRelativeEdge;
    }
  };
  var relativeEdgeLocation = function(v2) {
    return v2.loc;
  };
  var relativeEdgeDirection = function(v2) {
    return v2.dir;
  };
  var relative = function(loc) {
    return function(dir2) {
      return {
        loc,
        dir: dir2
      };
    };
  };
  var absolute = edge;

  // output/Data.Map.Unsafe/index.js
  var unsafeMapKey = function(f) {
    var go2 = function(v2) {
      if (v2 instanceof Leaf) {
        return Leaf.value;
      }
      ;
      if (v2 instanceof Node) {
        return new Node(v2.value0, v2.value1, f(v2.value2), v2.value3, go2(v2.value4), go2(v2.value5));
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Unsafe (line 12, column 10 - line 14, column 65): " + [v2.constructor.name]);
    };
    return go2;
  };

  // output/Game.Board.Types/index.js
  var show14 = /* @__PURE__ */ show(showLocation);
  var show15 = /* @__PURE__ */ show(showInt);
  var submap2 = /* @__PURE__ */ submap(ordRelativeEdge);
  var unwrap10 = /* @__PURE__ */ unwrap();
  var _Newtype3 = /* @__PURE__ */ _Newtype()();
  var prop7 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "size";
    }
  })()();
  var prop13 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "pieces";
    }
  })()();
  var bind11 = /* @__PURE__ */ bind(bindArray);
  var member3 = /* @__PURE__ */ member2(ordLocation);
  var pure13 = /* @__PURE__ */ pure(applicativeArray);
  var LocationOccupied = /* @__PURE__ */ function() {
    function LocationOccupied2(value0) {
      this.value0 = value0;
    }
    ;
    LocationOccupied2.create = function(value0) {
      return new LocationOccupied2(value0);
    };
    return LocationOccupied2;
  }();
  var LocationNotOccupied = /* @__PURE__ */ function() {
    function LocationNotOccupied2(value0) {
      this.value0 = value0;
    }
    ;
    LocationNotOccupied2.create = function(value0) {
      return new LocationNotOccupied2(value0);
    };
    return LocationNotOccupied2;
  }();
  var InvalidLocation = /* @__PURE__ */ function() {
    function InvalidLocation2(value0) {
      this.value0 = value0;
    }
    ;
    InvalidLocation2.create = function(value0) {
      return new InvalidLocation2(value0);
    };
    return InvalidLocation2;
  }();
  var InvalidBoardInitialisation = /* @__PURE__ */ function() {
    function InvalidBoardInitialisation2(value0) {
      this.value0 = value0;
    }
    ;
    InvalidBoardInitialisation2.create = function(value0) {
      return new InvalidBoardInitialisation2(value0);
    };
    return InvalidBoardInitialisation2;
  }();
  var BadBoardSize = /* @__PURE__ */ function() {
    function BadBoardSize2(value0) {
      this.value0 = value0;
    }
    ;
    BadBoardSize2.create = function(value0) {
      return new BadBoardSize2(value0);
    };
    return BadBoardSize2;
  }();
  var Cyclic = /* @__PURE__ */ function() {
    function Cyclic2() {
    }
    ;
    Cyclic2.value = new Cyclic2();
    return Cyclic2;
  }();
  var Other = /* @__PURE__ */ function() {
    function Other2(value0) {
      this.value0 = value0;
    }
    ;
    Other2.create = function(value0) {
      return new Other2(value0);
    };
    return Other2;
  }();
  var showBoardError = {
    show: function(v2) {
      if (v2 instanceof LocationOccupied) {
        return "Location Occupied: " + show14(v2.value0);
      }
      ;
      if (v2 instanceof LocationNotOccupied) {
        return "Location Not Occupied: " + show14(v2.value0);
      }
      ;
      if (v2 instanceof InvalidLocation) {
        return "Location " + (show14(v2.value0) + " is outside range of the board");
      }
      ;
      if (v2 instanceof InvalidBoardInitialisation) {
        return "Invalid Board Initialisation: " + (show15(v2.value0) + " is not a valid board size");
      }
      ;
      if (v2 instanceof BadBoardSize) {
        return "Boards of size " + (show15(v2.value0) + " are not valid");
      }
      ;
      if (v2 instanceof Cyclic) {
        return "ABED does not admit cyclic boards";
      }
      ;
      if (v2 instanceof Other) {
        return "Other error: " + v2.value0;
      }
      ;
      throw new Error("Failed pattern match at Game.Board.Types (line 62, column 10 - line 69, column 45): " + [v2.constructor.name]);
    }
  };
  var toLocalInputs = function(loc) {
    var $180 = unsafeMapKey(relativeEdgeDirection);
    var $181 = submap2(new Just(relative(loc)(Up.value)))(new Just(relative(loc)(Left2.value)));
    return function($182) {
      return $180($181($182));
    };
  };
  var standardBoard = {
    size: 3,
    pieces: empty2
  };
  var runBoardT = function(dictMonad) {
    return function(boardM) {
      return function(b2) {
        return runExceptT(runStateT(boardM)(b2));
      };
    };
  };
  var runBoardT1 = /* @__PURE__ */ runBoardT(monadIdentity);
  var runBoardM = function(boardM) {
    return function(b2) {
      return unwrap10(runBoardT1(boardM)(b2));
    };
  };
  var _size = function(dictStrong) {
    var $183 = _Newtype3(dictStrong.Profunctor0());
    var $184 = prop7($$Proxy.value)(dictStrong);
    return function($185) {
      return $183($184($185));
    };
  };
  var _size1 = /* @__PURE__ */ _size(strongForget);
  var _pieces = function(dictStrong) {
    var $186 = _Newtype3(dictStrong.Profunctor0());
    var $187 = prop13($$Proxy.value)(dictStrong);
    return function($188) {
      return $186($187($188));
    };
  };
  var allOccupiedLocations = /* @__PURE__ */ view(/* @__PURE__ */ function() {
    var $189 = _pieces(strongForget);
    var $190 = to2(keys2);
    return function($191) {
      return $189($190($191));
    };
  }());
  var firstEmptyLocation = function(board) {
    var n = view(_size1)(board);
    var allLocations = bind11(range2(0)(n - 1 | 0))(function(j) {
      return bind11(range2(0)(n - 1 | 0))(function(i2) {
        return pure13(location(i2)(j));
      });
    });
    var occupied = allOccupiedLocations(board);
    return find2(function(loc) {
      return !member3(loc)(occupied);
    })(allLocations);
  };

  // output/Game.Board.Query/index.js
  var _pieces2 = /* @__PURE__ */ _pieces(strongForget);
  var ix2 = /* @__PURE__ */ ix(/* @__PURE__ */ indexMap(ordLocation));
  var choiceForget2 = /* @__PURE__ */ choiceForget(monoidRotation);
  var _rotation2 = /* @__PURE__ */ _rotation(strongForget);
  var ginverse2 = /* @__PURE__ */ ginverse(groupRotation);
  var _size2 = /* @__PURE__ */ _size(strongForget);
  var at2 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordLocation));
  var bind13 = /* @__PURE__ */ bind(bindMaybe);
  var div6 = /* @__PURE__ */ div(euclideanRingInt);
  var eq7 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqBoolean));
  var apply6 = /* @__PURE__ */ apply(applyMaybe);
  var map38 = /* @__PURE__ */ map(functorMaybe);
  var wither2 = /* @__PURE__ */ wither(witherableArray);
  var map116 = /* @__PURE__ */ map(functorArray);
  var insert8 = /* @__PURE__ */ insert3(ordLocation);
  var discard3 = /* @__PURE__ */ discard(discardUnit);
  var _pieces1 = /* @__PURE__ */ _pieces(strongFn);
  var member4 = /* @__PURE__ */ member2(ordLocation);
  var append14 = /* @__PURE__ */ append(semigroupList);
  var fromFoldable5 = /* @__PURE__ */ fromFoldable(foldableArray);
  var filter6 = /* @__PURE__ */ filter5(filterableArray);
  var applicativeWriterT2 = /* @__PURE__ */ applicativeWriterT(monoidList);
  var bindWriterT2 = /* @__PURE__ */ bindWriterT(semigroupList);
  var monadStateWriterT2 = /* @__PURE__ */ monadStateWriterT(monoidList);
  var monadTellWriterT2 = /* @__PURE__ */ monadTellWriterT(monoidList);
  var map211 = /* @__PURE__ */ map(functorFn);
  var fromFoldable1 = /* @__PURE__ */ fromFoldable2(ordRelativeEdge)(foldableList);
  var fromFoldable22 = /* @__PURE__ */ fromFoldable(foldableSet);
  var catMaybes4 = /* @__PURE__ */ catMaybes2(ordCardinalDirection);
  var fromFoldable32 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection)(foldableArray);
  var toRelativeEdge = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var gets7 = gets(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(v2) {
      return bind118(gets7(view(function() {
        var $197 = ix2(v2.loc)(strongForget)(choiceForget2);
        return function($198) {
          return _pieces2($197(_rotation2($198)));
        };
      }())))(function(rot) {
        return pure41(relative(v2.loc)(rotateDirection(v2.dir)(ginverse2(rot))));
      });
    };
  };
  var toAbsoluteEdge = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var gets7 = gets(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(v2) {
      return bind118(gets7(view(function() {
        var $199 = ix2(v2.loc)(strongForget)(choiceForget2);
        return function($200) {
          return _pieces2($199(_rotation2($200)));
        };
      }())))(function(rot) {
        return pure41(absolute(v2.loc)(rotateDirection(v2.dir)(rot)));
      });
    };
  };
  var isInsideBoard = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var use3 = use(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(v2) {
      return bind118(use3(_size2))(function(n) {
        return pure41(0 <= v2.x && (v2.x < n && (0 <= v2.y && v2.y < n)));
      });
    };
  };
  var getPortOnEdge = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var use3 = use(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(v2) {
      return bind118(use3(function() {
        var $201 = at2(v2.loc)(strongForget);
        return function($202) {
          return _pieces2($201($202));
        };
      }()))(function(maybePieceInfo) {
        return pure41(bind13(maybePieceInfo)(function(info4) {
          return getPort(info4.piece)(v2.dir);
        }));
      });
    };
  };
  var getBoardEdgePseudoLocation = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var use3 = use(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(dir2) {
      return bind118(use3(_size2))(function(n) {
        return pure41(function() {
          if (dir2 instanceof Up) {
            return location(div6(n)(2))(-1 | 0);
          }
          ;
          if (dir2 instanceof Right2) {
            return location(n)(div6(n)(2));
          }
          ;
          if (dir2 instanceof Down) {
            return location(div6(n)(2))(n);
          }
          ;
          if (dir2 instanceof Left2) {
            return location(-1 | 0)(div6(n)(2));
          }
          ;
          throw new Error("Failed pattern match at Game.Board.Query (line 140, column 10 - line 144, column 52): " + [dir2.constructor.name]);
        }());
      });
    };
  };
  var getBoardPortEdge = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var getBoardEdgePseudoLocation1 = getBoardEdgePseudoLocation(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(dir2) {
      return bind118(getBoardEdgePseudoLocation1(dir2))(function(loc) {
        return pure41(relative(loc)(Right2.value));
      });
    };
  };
  var adjacentRelativeEdge = function(dictMonadState) {
    var bind118 = bind(dictMonadState.Monad0().Bind1());
    var toAbsoluteEdge1 = toAbsoluteEdge(dictMonadState);
    var toRelativeEdge1 = toRelativeEdge(dictMonadState);
    return function(relEdge) {
      return bind118(toAbsoluteEdge1(relEdge))(function(absEdge) {
        return toRelativeEdge1(matchEdge(absEdge));
      });
    };
  };
  var connectedRelativeEdge = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var getPortOnEdge1 = getPortOnEdge(dictMonadState);
    var adjacentRelativeEdge1 = adjacentRelativeEdge(dictMonadState);
    var pure41 = pure(Monad0.Applicative0());
    return function(relEdge) {
      return bind118(getPortOnEdge1(relEdge))(function(port2) {
        return bind118(adjacentRelativeEdge1(relEdge))(function(adjRelEdge) {
          return bind118(getPortOnEdge1(adjRelEdge))(function(adjPort) {
            var $184 = eq7(apply6(map38(portMatches)(port2))(adjPort))(new Just(true));
            if ($184) {
              return pure41(new Just(adjRelEdge));
            }
            ;
            return pure41(Nothing.value);
          });
        });
      });
    };
  };
  var allConnectedRelativeEdges = function(dictMonadState) {
    var wither1 = wither2(dictMonadState.Monad0().Applicative0());
    var connectedRelativeEdge1 = connectedRelativeEdge(dictMonadState);
    return function(loc) {
      return wither1(connectedRelativeEdge1)(map116(relative(loc))(allDirections));
    };
  };
  var capacityRippleAcc = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var pure41 = pure(Monad0.Applicative0());
    var Bind1 = Monad0.Bind1();
    var bind118 = bind(Bind1);
    var map311 = map(Bind1.Apply0().Functor0());
    var use3 = use(dictMonadState);
    var allConnectedRelativeEdges1 = allConnectedRelativeEdges(dictMonadState);
    var discard111 = discard3(Bind1);
    var modifying4 = modifying(dictMonadState);
    return function(capacity) {
      return function(vars) {
        if (vars.openSet instanceof Nil) {
          return pure41(unit);
        }
        ;
        if (vars.openSet instanceof Cons) {
          var loc = relativeEdgeLocation(vars.openSet.value0);
          var closedSet = insert8(loc)(vars.closedSet);
          return bind118(map311(map38(function(v2) {
            return v2.piece;
          }))(use3(function() {
            var $203 = at2(loc)(strongForget);
            return function($204) {
              return _pieces2($203($204));
            };
          }())))(function(maybePiece) {
            var v2 = bind13(maybePiece)(updateCapacity(relativeEdgeDirection(vars.openSet.value0))(capacity));
            if (v2 instanceof Just) {
              return bind118(allConnectedRelativeEdges1(loc))(function(connected) {
                return discard111(modifying4(function() {
                  var $205 = ix2(loc)(strongFn)(choiceFn);
                  return function($206) {
                    return _pieces1($205($206));
                  };
                }())(function(v1) {
                  var $187 = {};
                  for (var $188 in v1) {
                    if ({}.hasOwnProperty.call(v1, $188)) {
                      $187[$188] = v1[$188];
                    }
                    ;
                  }
                  ;
                  $187.piece = v2.value0;
                  return $187;
                }))(function() {
                  var $190 = shouldRipple(v2.value0);
                  if ($190) {
                    var notInClosedSet = function(r) {
                      return !member4(relativeEdgeLocation(r))(vars.closedSet);
                    };
                    var openSet = append14(fromFoldable5(filter6(notInClosedSet)(connected)))(vars.openSet.value1);
                    return capacityRippleAcc(dictMonadState)(capacity)({
                      openSet,
                      closedSet
                    });
                  }
                  ;
                  return capacityRippleAcc(dictMonadState)(capacity)({
                    openSet: vars.openSet.value1,
                    closedSet
                  });
                });
              });
            }
            ;
            if (v2 instanceof Nothing) {
              return capacityRippleAcc(dictMonadState)(capacity)({
                openSet: vars.openSet.value1,
                closedSet
              });
            }
            ;
            throw new Error("Failed pattern match at Game.Board.Query (line 201, column 5 - line 213, column 70): " + [v2.constructor.name]);
          });
        }
        ;
        throw new Error("Failed pattern match at Game.Board.Query (line 194, column 35 - line 213, column 70): " + [vars.openSet.constructor.name]);
      };
    };
  };
  var capacityRipple = function(dictMonadState) {
    var capacityRippleAcc1 = capacityRippleAcc(dictMonadState);
    return function(relEdge) {
      return function(capacity) {
        return capacityRippleAcc1(capacity)({
          openSet: singleton3(relEdge),
          closedSet: empty3
        });
      };
    };
  };
  var buildConnectionMapAt = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var applicativeWriterT1 = applicativeWriterT2(Monad0.Applicative0());
    var for_7 = for_(applicativeWriterT1)(foldableArray);
    var bind118 = bind(bindWriterT2(Monad0.Bind1()));
    var monadStateWriterT1 = monadStateWriterT2(dictMonadState);
    var connectedRelativeEdge1 = connectedRelativeEdge(monadStateWriterT1);
    var traverse_16 = traverse_(applicativeWriterT1)(foldableMaybe);
    var getPortOnEdge1 = getPortOnEdge(monadStateWriterT1);
    var tell7 = tell(monadTellWriterT2(Monad0));
    var pure41 = pure(applicativeWriterT1);
    return function(loc) {
      return for_7(allDirections)(function(dir2) {
        var relEdge = relative(loc)(dir2);
        return bind118(connectedRelativeEdge1(relEdge))(traverse_16(function(adjRelEdge) {
          return bind118(getPortOnEdge1(relEdge))(function(port2) {
            var v2 = map38(portType)(port2);
            if (v2 instanceof Just && v2.value0 instanceof Input) {
              return tell7(singleton3(new Tuple(relEdge, adjRelEdge)));
            }
            ;
            if (v2 instanceof Just && v2.value0 instanceof Output) {
              return tell7(singleton3(new Tuple(adjRelEdge, relEdge)));
            }
            ;
            if (v2 instanceof Nothing) {
              return pure41(unit);
            }
            ;
            throw new Error("Failed pattern match at Game.Board.Query (line 178, column 7 - line 183, column 29): " + [v2.constructor.name]);
          });
        }));
      });
    };
  };
  var buildConnectionMap = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var Bind1 = Monad0.Bind1();
    var Functor0 = Bind1.Apply0().Functor0();
    var map311 = map(Functor0);
    var execWriterT2 = execWriterT(Functor0);
    var traverse_16 = traverse_(applicativeWriterT2(Monad0.Applicative0()))(foldableList);
    var buildConnectionMapAt1 = buildConnectionMapAt(dictMonadState);
    return bind(Bind1)(use(dictMonadState)(_pieces2))(function(pieceInfos) {
      return map211(map311(fromFoldable1))(execWriterT2)(traverse_16(buildConnectionMapAt1)(fromFoldable22(keys2(pieceInfos))));
    });
  };
  var getBoardPorts = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var Bind1 = Monad0.Bind1();
    var Applicative0 = Monad0.Applicative0();
    var bind118 = bind(Bind1);
    var getBoardEdgePseudoLocation1 = getBoardEdgePseudoLocation(dictMonadState);
    var toRelativeEdge1 = toRelativeEdge(dictMonadState);
    var adjacentRelativeEdge1 = adjacentRelativeEdge(dictMonadState);
    var getPortOnEdge1 = getPortOnEdge(dictMonadState);
    var pure41 = pure(Applicative0);
    return map(Bind1.Apply0().Functor0())(function($207) {
      return catMaybes4(fromFoldable32($207));
    })($$for(Applicative0)(traversableArray)(allDirections)(function(dir2) {
      return bind118(getBoardEdgePseudoLocation1(dir2))(function(loc) {
        return bind118(bind118(toRelativeEdge1(absolute(loc)(oppositeDirection(dir2))))(adjacentRelativeEdge1))(function(relEdge) {
          return bind118(getPortOnEdge1(relEdge))(function(maybePort) {
            return pure41(new Tuple(dir2, maybePort));
          });
        });
      });
    }));
  };

  // output/Component.Board.Types/index.js
  var prop8 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "isCreatingWire";
    }
  })()();
  var prop14 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "locations";
    }
  })()();
  var prop33 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "inputs";
    }
  })()();
  var prop43 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "boardHistory";
    }
  })()();
  var getBoardPortEdge2 = /* @__PURE__ */ getBoardPortEdge(/* @__PURE__ */ monadStateStateT(monadIdentity));
  var lookup9 = /* @__PURE__ */ lookup2(ordRelativeEdge);
  var zero3 = /* @__PURE__ */ zero(semiringSignal);
  var bind14 = /* @__PURE__ */ bind(bindMaybe);
  var _pieces3 = /* @__PURE__ */ _pieces(strongForget);
  var at3 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordLocation));
  var union4 = /* @__PURE__ */ union2(ordCardinalDirection);
  var pure11 = /* @__PURE__ */ pure(applicativeMaybe);
  var GetBoard = /* @__PURE__ */ function() {
    function GetBoard2(value0) {
      this.value0 = value0;
    }
    ;
    GetBoard2.create = function(value0) {
      return new GetBoard2(value0);
    };
    return GetBoard2;
  }();
  var AddPiece = /* @__PURE__ */ function() {
    function AddPiece4(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    AddPiece4.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new AddPiece4(value0, value1, value22);
        };
      };
    };
    return AddPiece4;
  }();
  var AddPath = /* @__PURE__ */ function() {
    function AddPath2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    AddPath2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new AddPath2(value0, value1, value22, value32);
          };
        };
      };
    };
    return AddPath2;
  }();
  var RemovePiece = /* @__PURE__ */ function() {
    function RemovePiece2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RemovePiece2.create = function(value0) {
      return function(value1) {
        return new RemovePiece2(value0, value1);
      };
    };
    return RemovePiece2;
  }();
  var RotatePieceBy = /* @__PURE__ */ function() {
    function RotatePieceBy2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    RotatePieceBy2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new RotatePieceBy2(value0, value1, value22);
        };
      };
    };
    return RotatePieceBy2;
  }();
  var GetMouseOverLocation = /* @__PURE__ */ function() {
    function GetMouseOverLocation2(value0) {
      this.value0 = value0;
    }
    ;
    GetMouseOverLocation2.create = function(value0) {
      return new GetMouseOverLocation2(value0);
    };
    return GetMouseOverLocation2;
  }();
  var SetInputs = /* @__PURE__ */ function() {
    function SetInputs2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SetInputs2.create = function(value0) {
      return function(value1) {
        return new SetInputs2(value0, value1);
      };
    };
    return SetInputs2;
  }();
  var SetGoalPorts = /* @__PURE__ */ function() {
    function SetGoalPorts2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SetGoalPorts2.create = function(value0) {
      return function(value1) {
        return new SetGoalPorts2(value0, value1);
      };
    };
    return SetGoalPorts2;
  }();
  var SetBoardSize = /* @__PURE__ */ function() {
    function SetBoardSize2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SetBoardSize2.create = function(value0) {
      return function(value1) {
        return new SetBoardSize2(value0, value1);
      };
    };
    return SetBoardSize2;
  }();
  var Undo = /* @__PURE__ */ function() {
    function Undo3(value0) {
      this.value0 = value0;
    }
    ;
    Undo3.create = function(value0) {
      return new Undo3(value0);
    };
    return Undo3;
  }();
  var Redo = /* @__PURE__ */ function() {
    function Redo3(value0) {
      this.value0 = value0;
    }
    ;
    Redo3.create = function(value0) {
      return new Redo3(value0);
    };
    return Redo3;
  }();
  var Clear = /* @__PURE__ */ function() {
    function Clear3(value0) {
      this.value0 = value0;
    }
    ;
    Clear3.create = function(value0) {
      return new Clear3(value0);
    };
    return Clear3;
  }();
  var RunTestCase = /* @__PURE__ */ function() {
    function RunTestCase2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RunTestCase2.create = function(value0) {
      return function(value1) {
        return new RunTestCase2(value0, value1);
      };
    };
    return RunTestCase2;
  }();
  var NewBoardState = /* @__PURE__ */ function() {
    function NewBoardState2(value0) {
      this.value0 = value0;
    }
    ;
    NewBoardState2.create = function(value0) {
      return new NewBoardState2(value0);
    };
    return NewBoardState2;
  }();
  var BoardEvent2 = /* @__PURE__ */ function() {
    function BoardEvent3(value0) {
      this.value0 = value0;
    }
    ;
    BoardEvent3.create = function(value0) {
      return new BoardEvent3(value0);
    };
    return BoardEvent3;
  }();
  var Initialise = /* @__PURE__ */ function() {
    function Initialise6() {
    }
    ;
    Initialise6.value = new Initialise6();
    return Initialise6;
  }();
  var PieceOutput = /* @__PURE__ */ function() {
    function PieceOutput2(value0) {
      this.value0 = value0;
    }
    ;
    PieceOutput2.create = function(value0) {
      return new PieceOutput2(value0);
    };
    return PieceOutput2;
  }();
  var MultimeterOutput = /* @__PURE__ */ function() {
    function MultimeterOutput2(value0) {
      this.value0 = value0;
    }
    ;
    MultimeterOutput2.create = function(value0) {
      return new MultimeterOutput2(value0);
    };
    return MultimeterOutput2;
  }();
  var ToggleInput = /* @__PURE__ */ function() {
    function ToggleInput2(value0) {
      this.value0 = value0;
    }
    ;
    ToggleInput2.create = function(value0) {
      return new ToggleInput2(value0);
    };
    return ToggleInput2;
  }();
  var IncrementInput = /* @__PURE__ */ function() {
    function IncrementInput2(value0) {
      this.value0 = value0;
    }
    ;
    IncrementInput2.create = function(value0) {
      return new IncrementInput2(value0);
    };
    return IncrementInput2;
  }();
  var DecrementInput = /* @__PURE__ */ function() {
    function DecrementInput2(value0) {
      this.value0 = value0;
    }
    ;
    DecrementInput2.create = function(value0) {
      return new DecrementInput2(value0);
    };
    return DecrementInput2;
  }();
  var SetOutputs = /* @__PURE__ */ function() {
    function SetOutputs2(value0) {
      this.value0 = value0;
    }
    ;
    SetOutputs2.create = function(value0) {
      return new SetOutputs2(value0);
    };
    return SetOutputs2;
  }();
  var SetBoard = /* @__PURE__ */ function() {
    function SetBoard2(value0) {
      this.value0 = value0;
    }
    ;
    SetBoard2.create = function(value0) {
      return new SetBoard2(value0);
    };
    return SetBoard2;
  }();
  var EvaluateBoard = /* @__PURE__ */ function() {
    function EvaluateBoard2() {
    }
    ;
    EvaluateBoard2.value = new EvaluateBoard2();
    return EvaluateBoard2;
  }();
  var GlobalOnKeyDown = /* @__PURE__ */ function() {
    function GlobalOnKeyDown2(value0) {
      this.value0 = value0;
    }
    ;
    GlobalOnKeyDown2.create = function(value0) {
      return new GlobalOnKeyDown2(value0);
    };
    return GlobalOnKeyDown2;
  }();
  var BoardOnDragExit = /* @__PURE__ */ function() {
    function BoardOnDragExit2(value0) {
      this.value0 = value0;
    }
    ;
    BoardOnDragExit2.create = function(value0) {
      return new BoardOnDragExit2(value0);
    };
    return BoardOnDragExit2;
  }();
  var LocationOnMouseDown = /* @__PURE__ */ function() {
    function LocationOnMouseDown2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationOnMouseDown2.create = function(value0) {
      return function(value1) {
        return new LocationOnMouseDown2(value0, value1);
      };
    };
    return LocationOnMouseDown2;
  }();
  var LocationOnMouseOver = /* @__PURE__ */ function() {
    function LocationOnMouseOver2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationOnMouseOver2.create = function(value0) {
      return function(value1) {
        return new LocationOnMouseOver2(value0, value1);
      };
    };
    return LocationOnMouseOver2;
  }();
  var LocationOnMouseUp = /* @__PURE__ */ function() {
    function LocationOnMouseUp2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationOnMouseUp2.create = function(value0) {
      return function(value1) {
        return new LocationOnMouseUp2(value0, value1);
      };
    };
    return LocationOnMouseUp2;
  }();
  var LocationOnDragEnter = /* @__PURE__ */ function() {
    function LocationOnDragEnter2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationOnDragEnter2.create = function(value0) {
      return function(value1) {
        return new LocationOnDragEnter2(value0, value1);
      };
    };
    return LocationOnDragEnter2;
  }();
  var LocationOnDragOver = /* @__PURE__ */ function() {
    function LocationOnDragOver2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationOnDragOver2.create = function(value0) {
      return function(value1) {
        return new LocationOnDragOver2(value0, value1);
      };
    };
    return LocationOnDragOver2;
  }();
  var LocationOnDragLeave = /* @__PURE__ */ function() {
    function LocationOnDragLeave2(value0) {
      this.value0 = value0;
    }
    ;
    LocationOnDragLeave2.create = function(value0) {
      return new LocationOnDragLeave2(value0);
    };
    return LocationOnDragLeave2;
  }();
  var LocationOnDrop = /* @__PURE__ */ function() {
    function LocationOnDrop2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationOnDrop2.create = function(value0) {
      return function(value1) {
        return new LocationOnDrop2(value0, value1);
      };
    };
    return LocationOnDrop2;
  }();
  var BoardPortOnMouseEnter = /* @__PURE__ */ function() {
    function BoardPortOnMouseEnter2(value0) {
      this.value0 = value0;
    }
    ;
    BoardPortOnMouseEnter2.create = function(value0) {
      return new BoardPortOnMouseEnter2(value0);
    };
    return BoardPortOnMouseEnter2;
  }();
  var BoardPortOnMouseLeave = /* @__PURE__ */ function() {
    function BoardPortOnMouseLeave2() {
    }
    ;
    BoardPortOnMouseLeave2.value = new BoardPortOnMouseLeave2();
    return BoardPortOnMouseLeave2;
  }();
  var slot = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var initialState = function(v2) {
    return {
      boardHistory: singleton11(v2.board),
      boardPorts: empty2,
      inputs: empty2,
      outputs: empty2,
      lastEvalWithPortInfo: empty2,
      isCreatingWire: Nothing.value,
      isMouseOverLocation: Nothing.value,
      isMouseOverBoardPort: Nothing.value
    };
  };
  var _wireLocations = function(dictWander) {
    var Strong0 = dictWander.Strong0();
    var $59 = prop8($$Proxy.value)(Strong0);
    var $60 = _Just(dictWander.Choice1());
    var $61 = prop14($$Proxy.value)(Strong0);
    return function($62) {
      return $59($60($61($62)));
    };
  };
  var _inputs = function(dictStrong) {
    return prop33($$Proxy.value)(dictStrong);
  };
  var _board = function(dictStrong) {
    var $63 = prop43($$Proxy.value)(dictStrong);
    var $64 = _head2(dictStrong);
    return function($65) {
      return $63($64($65));
    };
  };
  var _board1 = /* @__PURE__ */ _board(strongForget);
  var boardPortInfo = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var gets7 = gets(dictMonadState);
    var use3 = use(dictMonadState);
    var forWithIndex2 = forWithIndex(Monad0.Applicative0())(traversableWithIndexMap);
    return bind118(gets7(function(v2) {
      return v2.boardPorts;
    }))(function(boardPorts) {
      return bind118(use3(_board1))(function(board) {
        return forWithIndex2(boardPorts)(function(dir2) {
          return function(port2) {
            var relEdge = evalState(getBoardPortEdge2(dir2))(board);
            return gets7(function() {
              var $66 = fromMaybe({
                connected: false,
                port: port2,
                signal: zero3
              });
              var $67 = lookup9(relEdge);
              return function($68) {
                return $66($67(function(v2) {
                  return v2.lastEvalWithPortInfo;
                }($68)));
              };
            }());
          };
        });
      });
    });
  };
  var pieceInput = function(state3) {
    return function(location4) {
      return bind14(viewOn(state3)(function() {
        var $69 = at3(location4)(strongForget);
        return function($70) {
          return _board1(_pieces3($69($70)));
        };
      }()))(function(v2) {
        var portStates = union4(toLocalInputs(location4)(state3.lastEvalWithPortInfo))(defaultPortInfo(v2.piece));
        return pure11({
          piece: v2.piece,
          location: location4,
          rotation: v2.rotation,
          portStates
        });
      });
    };
  };

  // output/Game.Piece.Complexity/index.js
  var mempty3 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidAdditive(semiringNumber));
  var space = function($6) {
    return function(v2) {
      return {
        space: v2,
        time: mempty3
      };
    }(Additive($6));
  };

  // output/Game.Board.PseudoPiece/index.js
  var elem3 = /* @__PURE__ */ elem2(eqPieceId);
  var eq8 = /* @__PURE__ */ eq(eqPieceId);
  var discard4 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var guard4 = /* @__PURE__ */ guard(alternativeMaybe);
  var lookup10 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var psuedoPiece = function(port2) {
    return mkPieceNoGlob({
      name: function() {
        var v2 = portType(port2);
        if (v2 instanceof Input) {
          return "psuedo-input";
        }
        ;
        if (v2 instanceof Output) {
          return "psuedo-output";
        }
        ;
        throw new Error("Failed pattern match at Game.Board.PseudoPiece (line 32, column 21 - line 34, column 37): " + [v2.constructor.name]);
      }(),
      "eval": function(v2) {
        return empty2;
      },
      ports: singleton6(Right2.value)(matchingPort(port2)),
      complexity: space(0),
      shouldRipple: false,
      updateCapacity: function(v2) {
        return function(v1) {
          return Nothing.value;
        };
      },
      isSimplifiable: Nothing.value
    });
  };
  var isPseudoPiece = function(v2) {
    return elem3(v2.name)(["psuedo-input", "psuedo-output"]);
  };
  var isPseudoInput = function(v2) {
    return eq8(v2.name)("psuedo-input");
  };
  var getPsuedoPiecePort = function(v2) {
    return discard4(guard4(isPseudoPiece(v2)))(function() {
      return lookup10(Right2.value)(v2.ports);
    });
  };

  // output/Game.Board.EvaluableBoard/index.js
  var submap3 = /* @__PURE__ */ submap(ordRelativeEdge);
  var bind15 = /* @__PURE__ */ bind(bindMaybe);
  var find3 = /* @__PURE__ */ find(foldableList);
  var $$delete6 = /* @__PURE__ */ $$delete(eqLocation);
  var filterWithKey2 = /* @__PURE__ */ filterWithKey(ordRelativeEdge);
  var notEq3 = /* @__PURE__ */ notEq(eqLocation);
  var map39 = /* @__PURE__ */ map(functorMaybe);
  var unwrap11 = /* @__PURE__ */ unwrap();
  var lookup11 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var lookup12 = /* @__PURE__ */ lookup2(ordLocation);
  var insert9 = /* @__PURE__ */ insert(ordRelativeEdge);
  var mapMaybe4 = /* @__PURE__ */ mapMaybe2(ordCardinalDirection);
  var zero4 = /* @__PURE__ */ zero(semiringSignal);
  var lookup22 = /* @__PURE__ */ lookup2(ordRelativeEdge);
  var at4 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordRelativeEdge));
  var traverse3 = /* @__PURE__ */ traverse(traversableMaybe);
  var discard5 = /* @__PURE__ */ discard(discardUnit);
  var catMaybes5 = /* @__PURE__ */ catMaybes2(ordCardinalDirection);
  var filter7 = /* @__PURE__ */ filter2(ordCardinalDirection);
  var fromFoldable6 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection)(foldableMap);
  var fold5 = /* @__PURE__ */ fold(foldableMaybe)(monoidSignal);
  var monadStateStateT2 = /* @__PURE__ */ monadStateStateT(monadIdentity);
  var _pieces4 = /* @__PURE__ */ _pieces(strongFn);
  var at1 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordLocation));
  var map117 = /* @__PURE__ */ map(functorMap);
  var _pieces12 = /* @__PURE__ */ _pieces(strongForget);
  var fromFoldable12 = /* @__PURE__ */ fromFoldable(foldableSet);
  var getBoardPorts2 = /* @__PURE__ */ getBoardPorts(monadStateStateT2);
  var topologicalSort = function(v2) {
    return function(v1) {
      if (v2 instanceof Nil) {
        return new Just(Nil.value);
      }
      ;
      var doesntAcceptOutput = function(loc) {
        return isEmpty(submap3(new Just(relative(loc)(Up.value)))(new Just(relative(loc)(Left2.value)))(v1));
      };
      return bind15(find3(doesntAcceptOutput)(v2))(function(r) {
        var nodes$prime = $$delete6(r)(v2);
        var edges$prime = filterWithKey2(function(k) {
          return function(v22) {
            return notEq3(relativeEdgeLocation(v22))(r);
          };
        })(v1);
        return map39(Cons.create(r))(topologicalSort(nodes$prime)(edges$prime));
      });
    };
  };
  var setOuterPort = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var $$void12 = $$void(Monad0.Bind1().Apply0().Functor0());
    var bind118 = bind(bindMaybeT(Monad0));
    var asks2 = asks(MonadAsk0);
    var when12 = when(applicativeMaybeT(Monad0));
    var pure41 = pure(Monad0.Applicative0());
    return function(dictMonadState) {
      var modify_12 = modify_2(monadStateMaybeT(dictMonadState));
      return function(dir2) {
        return function(signal) {
          return $$void12(runMaybeT(bind118(asks2(function() {
            var $286 = lookup11(dir2);
            return function($287) {
              return $286(function(v2) {
                return v2.psuedoPieceLocations;
              }(unwrap11($287)));
            };
          }()))(function(loc) {
            return bind118(asks2(function() {
              var $288 = lookup12(loc);
              return function($289) {
                return $288(function(v2) {
                  return v2.pieces;
                }(unwrap11($289)));
              };
            }()))(function(v2) {
              return when12(isPseudoInput(v2))(bind118(pure41(getPsuedoPiecePort(v2)))(function(port2) {
                var relEdge = relative(loc)(Right2.value);
                var portInfo = {
                  connected: false,
                  port: port2,
                  signal
                };
                return modify_12(insert9(relEdge)(portInfo));
              }));
            });
          })));
        };
      };
    };
  };
  var runEvaluableM = function(evaluable) {
    return function(evalM2) {
      return runState(runReaderT(evalM2)(evaluable))(empty2);
    };
  };
  var injectInputs = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var asks2 = asks(MonadAsk0);
    var Applicative0 = Monad0.Applicative0();
    var forWithIndex_3 = forWithIndex_(Applicative0)(foldableWithIndexMap);
    var for_7 = for_(Applicative0)(foldableMaybe);
    var setOuterPort1 = setOuterPort(dictMonadReader);
    return function(dictMonadState) {
      var setOuterPort2 = setOuterPort1(dictMonadState);
      return function(inputs) {
        return bind118(asks2(function($290) {
          return function(v2) {
            return v2.psuedoPieceLocations;
          }(unwrap11($290));
        }))(function(psuedoPieceLocations) {
          return forWithIndex_3(psuedoPieceLocations)(function(dir2) {
            return function(loc) {
              return for_7(lookup11(dir2)(inputs))(function(signal) {
                return setOuterPort2(dir2)(signal);
              });
            };
          });
        });
      };
    };
  };
  var getPorts2 = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var asks2 = asks(MonadAsk0);
    var pure41 = pure(Monad0.Applicative0());
    return bind118(asks2(function($291) {
      return function(v2) {
        return v2.pieces;
      }(unwrap11($291));
    }))(function(pieces) {
      return bind118(asks2(function($292) {
        return function(v2) {
          return v2.psuedoPieceLocations;
        }(unwrap11($292));
      }))(function(psuedoPieceLocations) {
        return pure41(mapMaybe4(function(loc) {
          return map39(matchingPort)(bind15(lookup12(loc)(pieces))(function(v2) {
            return lookup11(Right2.value)(v2.ports);
          }));
        })(psuedoPieceLocations));
      });
    });
  };
  var getPorts1 = /* @__PURE__ */ getPorts2(monadReaderFun);
  var getOuterPort = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind118 = bind(Bind1);
    var asks2 = asks(MonadAsk0);
    var $$for3 = $$for(Monad0.Applicative0())(traversableMaybe);
    var map214 = map(Bind1.Apply0().Functor0());
    return function(dictMonadState) {
      var gets7 = gets(dictMonadState);
      return function(dir2) {
        return bind118(asks2(function() {
          var $295 = lookup11(dir2);
          return function($296) {
            return $295(function(v2) {
              return v2.psuedoPieceLocations;
            }(unwrap11($296)));
          };
        }()))(function(maybeLoc) {
          return $$for3(maybeLoc)(function(loc) {
            return map214(maybe(zero4)(function(v2) {
              return v2.signal;
            }))(gets7(lookup22(relative(loc)(Right2.value))));
          });
        });
      };
    };
  };
  var getInputOnEdge = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind118 = bind(Bind1);
    var asks2 = asks(MonadAsk0);
    var Applicative0 = Monad0.Applicative0();
    var traverse12 = traverse3(Applicative0);
    var discard111 = discard5(Bind1);
    var pure41 = pure(Applicative0);
    var map214 = map(Bind1.Apply0().Functor0());
    return function(dictMonadState) {
      var use3 = use(dictMonadState);
      var assign4 = assign(dictMonadState);
      return function(inRelEdge) {
        return function(capacity) {
          return bind118(asks2(function($297) {
            return function(v2) {
              return v2.connections;
            }(unwrap11($297));
          }))(function(connections) {
            var v2 = lookup22(inRelEdge)(connections);
            if (v2 instanceof Just) {
              return bind118(bind118(use3(at4(v2.value0)(strongForget)))(traverse12(function(v1) {
                return discard111(assign4(at4(inRelEdge)(strongFn))(new Just({
                  connected: true,
                  signal: v1.signal,
                  port: inputPort(capacity)
                })))(function() {
                  return discard111(assign4(at4(v2.value0)(strongFn))(new Just({
                    connected: true,
                    signal: v1.signal,
                    port: outputPort(capacity)
                  })))(function() {
                    return pure41(v1.signal);
                  });
                });
              })))(function(maybeSignal) {
                return pure41(fromMaybe(zero4)(maybeSignal));
              });
            }
            ;
            if (v2 instanceof Nothing) {
              return bind118(map214(maybe(zero4)(function(v1) {
                return v1.signal;
              }))(use3(at4(inRelEdge)(strongForget))))(function(signal) {
                return discard111(assign4(at4(inRelEdge)(strongFn))(new Just({
                  connected: false,
                  signal,
                  port: inputPort(capacity)
                })))(function() {
                  return pure41(signal);
                });
              });
            }
            ;
            throw new Error("Failed pattern match at Game.Board.EvaluableBoard (line 193, column 3 - line 204, column 18): " + [v2.constructor.name]);
          });
        };
      };
    };
  };
  var extractOutputs = function(dictMonadReader) {
    var Monad0 = dictMonadReader.MonadAsk0().Monad0();
    var Bind1 = Monad0.Bind1();
    var map214 = map(Bind1.Apply0().Functor0());
    var bind118 = bind(Bind1);
    var getPorts22 = getPorts2(dictMonadReader);
    var forWithIndex2 = forWithIndex(Monad0.Applicative0())(traversableWithIndexMap);
    var getOuterPort1 = getOuterPort(dictMonadReader);
    return function(dictMonadState) {
      var getOuterPort2 = getOuterPort1(dictMonadState);
      return map214(catMaybes5)(bind118(map214(filter7(isOutput))(getPorts22))(function(outputPorts) {
        return forWithIndex2(outputPorts)(function(dir2) {
          return function(port2) {
            return getOuterPort2(dir2);
          };
        });
      }));
    };
  };
  var evalWithPortInfoAt = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind118 = bind(Bind1);
    var asks2 = asks(MonadAsk0);
    var Applicative0 = Monad0.Applicative0();
    var for_7 = for_(Applicative0)(foldableMaybe);
    var map214 = map(Bind1.Apply0().Functor0());
    var forWithIndex2 = forWithIndex(Applicative0)(traversableWithIndexMap);
    var getInputOnEdge1 = getInputOnEdge(dictMonadReader);
    var unless4 = unless(Applicative0);
    var forWithIndex_3 = forWithIndex_(Applicative0)(foldableWithIndexMap);
    return function(dictMonadState) {
      var getInputOnEdge2 = getInputOnEdge1(dictMonadState);
      var assign4 = assign(dictMonadState);
      return function(loc) {
        return bind118(asks2(function($298) {
          return function(v2) {
            return v2.pieces;
          }(unwrap11($298));
        }))(function(pieces) {
          return for_7(lookup12(loc)(pieces))(function(v2) {
            var inputPorts = filter7(isInput)(v2.ports);
            return bind118(map214(fromFoldable6)(forWithIndex2(inputPorts)(function(dir2) {
              return function(port2) {
                return map214(Tuple.create(dir2))(getInputOnEdge2(relative(loc)(dir2))(portCapacity(port2)));
              };
            })))(function(inputs) {
              return unless4(isPseudoPiece(v2))(function() {
                var outputs = v2["eval"](inputs);
                var outputPorts = filter7(isOutput)(v2.ports);
                return forWithIndex_3(outputPorts)(function(dir2) {
                  return function(port2) {
                    var signal = fold5(lookup11(dir2)(outputs));
                    return assign4(at4(relative(loc)(dir2))(strongFn))(new Just({
                      connected: false,
                      signal,
                      port: port2
                    }));
                  };
                });
              }());
            });
          });
        });
      };
    };
  };
  var evalWithPortInfo = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var Monad0 = MonadAsk0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind118 = bind(Bind1);
    var asks2 = asks(MonadAsk0);
    var discard111 = discard5(Bind1);
    var injectInputs1 = injectInputs(dictMonadReader);
    var traverse_16 = traverse_(Monad0.Applicative0())(foldableList);
    var evalWithPortInfoAt1 = evalWithPortInfoAt(dictMonadReader);
    var extractOutputs1 = extractOutputs(dictMonadReader);
    return function(dictMonadState) {
      var injectInputs2 = injectInputs1(dictMonadState);
      var evalWithPortInfoAt2 = evalWithPortInfoAt1(dictMonadState);
      var extractOutputs2 = extractOutputs1(dictMonadState);
      return function(inputs) {
        return bind118(asks2(function($299) {
          return function(v2) {
            return v2.evalOrder;
          }(unwrap11($299));
        }))(function(evalOrder) {
          return discard111(injectInputs2(inputs))(function() {
            return discard111(traverse_16(evalWithPortInfoAt2)(evalOrder))(function() {
              return extractOutputs2;
            });
          });
        });
      };
    };
  };
  var evalWithPortInfo1 = /* @__PURE__ */ evalWithPortInfo(/* @__PURE__ */ monadReaderReaderT(/* @__PURE__ */ monadStateT(monadIdentity)))(/* @__PURE__ */ monadStateReaderT(monadStateStateT2));
  var evaluableBoardPiece = function(v2) {
    return mkPieceNoGlob({
      name: "evaluable",
      "eval": function(m2) {
        return evalState(runReaderT(evalWithPortInfo1(m2))(v2))(empty2);
      },
      ports: getPorts1(v2),
      complexity: space(0),
      shouldRipple: false,
      updateCapacity: function(v1) {
        return function(v22) {
          return Nothing.value;
        };
      },
      isSimplifiable: Nothing.value
    });
  };
  var buildEvaluableBoard = function(dictMonadError) {
    var MonadThrow0 = dictMonadError.MonadThrow0();
    var Monad0 = MonadThrow0.Monad0();
    var Functor0 = Monad0.Bind1().Apply0().Functor0();
    var evalStateT2 = evalStateT(Functor0);
    var bindStateT2 = bindStateT(Monad0);
    var discard111 = discard5(bindStateT2);
    var applicativeStateT2 = applicativeStateT(Monad0);
    var forWithIndex_3 = forWithIndex_(applicativeStateT2)(foldableWithIndexMap);
    var bind118 = bind(bindStateT2);
    var monadStateStateT12 = monadStateStateT(Monad0);
    var getBoardEdgePseudoLocation2 = getBoardEdgePseudoLocation(monadStateStateT12);
    var assign4 = assign(monadStateStateT12);
    var map214 = map(functorStateT(Functor0));
    var use3 = use(monadStateStateT12);
    var buildConnectionMap2 = buildConnectionMap(monadStateStateT12);
    var forWithIndex2 = forWithIndex(applicativeStateT2)(traversableWithIndexMap);
    var throwError5 = throwError(monadThrowStateT(MonadThrow0));
    var pure41 = pure(applicativeStateT2);
    return function(psuedoPiecePorts) {
      return evalStateT2(discard111(forWithIndex_3(psuedoPiecePorts)(function(dir2) {
        return function(port2) {
          return bind118(getBoardEdgePseudoLocation2(dir2))(function(loc) {
            var rotation3 = clockwiseRotation(Left2.value)(dir2);
            return assign4(function() {
              var $300 = at1(loc)(strongFn);
              return function($301) {
                return _pieces4($300($301));
              };
            }())(new Just({
              piece: psuedoPiece(port2),
              rotation: rotation3
            }));
          });
        };
      }))(function() {
        return bind118(map214(map117(function(v2) {
          return v2.piece;
        }))(use3(_pieces12)))(function(pieces) {
          return bind118(buildConnectionMap2)(function(connections) {
            return bind118(forWithIndex2(psuedoPiecePorts)(function(dir2) {
              return function(v2) {
                return getBoardEdgePseudoLocation2(dir2);
              };
            }))(function(psuedoPieceLocations) {
              var locations = fromFoldable12(keys2(pieces));
              return bind118(maybe(throwError5(Cyclic.value))(pure41)(topologicalSort(locations)(connections)))(function(evalOrder) {
                return pure41({
                  pieces,
                  connections,
                  evalOrder,
                  psuedoPieceLocations
                });
              });
            });
          });
        });
      }));
    };
  };
  var buildEvaluableBoard1 = /* @__PURE__ */ buildEvaluableBoard(/* @__PURE__ */ monadErrorExceptT(monadIdentity));
  var toEvaluableBoard = function(board) {
    return runExcept(buildEvaluableBoard1(evalState(getBoardPorts2)(board))(board));
  };

  // output/Game.Level.Completion/index.js
  var notEq4 = /* @__PURE__ */ notEq(eqPortType);
  var notEq1 = /* @__PURE__ */ notEq(eqCapacity);
  var for_2 = /* @__PURE__ */ for_(applicativeEither)(foldableArray);
  var unless3 = /* @__PURE__ */ unless(applicativeEither);
  var throwError2 = /* @__PURE__ */ throwError(monadThrowEither);
  var lmap3 = /* @__PURE__ */ lmap(bifunctorEither);
  var bind16 = /* @__PURE__ */ bind(bindEither);
  var discard6 = /* @__PURE__ */ discard(discardUnit)(bindEither);
  var PortExpected = /* @__PURE__ */ function() {
    function PortExpected2(value0) {
      this.value0 = value0;
    }
    ;
    PortExpected2.create = function(value0) {
      return new PortExpected2(value0);
    };
    return PortExpected2;
  }();
  var NoPortExpected = /* @__PURE__ */ function() {
    function NoPortExpected2(value0) {
      this.value0 = value0;
    }
    ;
    NoPortExpected2.create = function(value0) {
      return new NoPortExpected2(value0);
    };
    return NoPortExpected2;
  }();
  var IncorrectPortType = /* @__PURE__ */ function() {
    function IncorrectPortType2(value0) {
      this.value0 = value0;
    }
    ;
    IncorrectPortType2.create = function(value0) {
      return new IncorrectPortType2(value0);
    };
    return IncorrectPortType2;
  }();
  var IncorrectCapacity = /* @__PURE__ */ function() {
    function IncorrectCapacity2(value0) {
      this.value0 = value0;
    }
    ;
    IncorrectCapacity2.create = function(value0) {
      return new IncorrectCapacity2(value0);
    };
    return IncorrectCapacity2;
  }();
  var NotStarted = /* @__PURE__ */ function() {
    function NotStarted3() {
    }
    ;
    NotStarted3.value = new NotStarted3();
    return NotStarted3;
  }();
  var PortMismatch = /* @__PURE__ */ function() {
    function PortMismatch2(value0) {
      this.value0 = value0;
    }
    ;
    PortMismatch2.create = function(value0) {
      return new PortMismatch2(value0);
    };
    return PortMismatch2;
  }();
  var FailedRestriction = /* @__PURE__ */ function() {
    function FailedRestriction2(value0) {
      this.value0 = value0;
    }
    ;
    FailedRestriction2.create = function(value0) {
      return new FailedRestriction2(value0);
    };
    return FailedRestriction2;
  }();
  var NotEvaluable = /* @__PURE__ */ function() {
    function NotEvaluable2(value0) {
      this.value0 = value0;
    }
    ;
    NotEvaluable2.create = function(value0) {
      return new NotEvaluable2(value0);
    };
    return NotEvaluable2;
  }();
  var ReadyForTesting = /* @__PURE__ */ function() {
    function ReadyForTesting2() {
    }
    ;
    ReadyForTesting2.value = new ReadyForTesting2();
    return ReadyForTesting2;
  }();
  var Completed2 = /* @__PURE__ */ function() {
    function Completed4() {
    }
    ;
    Completed4.value = new Completed4();
    return Completed4;
  }();
  var isPortMismatch = function(direction2) {
    return function(maybeExpected) {
      return function(maybeRecieved) {
        if (maybeExpected instanceof Nothing && maybeRecieved instanceof Nothing) {
          return Nothing.value;
        }
        ;
        if (maybeExpected instanceof Just && maybeRecieved instanceof Nothing) {
          return new Just(new PortExpected({
            direction: direction2,
            expected: maybeExpected.value0
          }));
        }
        ;
        if (maybeExpected instanceof Nothing && maybeRecieved instanceof Just) {
          return new Just(new NoPortExpected({
            direction: direction2,
            received: maybeRecieved.value0
          }));
        }
        ;
        if (maybeExpected instanceof Just && maybeRecieved instanceof Just) {
          var $148 = notEq4(maybeExpected.value0.portType)(maybeRecieved.value0.portType);
          if ($148) {
            return new Just(new IncorrectPortType({
              direction: direction2,
              capacity: maybeRecieved.value0.capacity,
              expected: maybeExpected.value0.portType,
              received: maybeRecieved.value0.portType
            }));
          }
          ;
          var $149 = notEq1(maybeExpected.value0.capacity)(maybeRecieved.value0.capacity);
          if ($149) {
            return new Just(new IncorrectCapacity({
              direction: direction2,
              portType: maybeRecieved.value0.portType,
              expected: maybeExpected.value0.capacity,
              received: maybeRecieved.value0.capacity
            }));
          }
          ;
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Game.Level.Completion (line 87, column 56 - line 97, column 14): " + [maybeExpected.constructor.name, maybeRecieved.constructor.name]);
      };
    };
  };
  var checkPortMismatch = function(problem) {
    return function(evaluable) {
      return for_2(allDirections)(function(dir2) {
        var expected = getPort(problem.goal)(dir2);
        var received = getPort(evaluable)(dir2);
        return maybe(new Right(unit))(Left.create)(isPortMismatch(dir2)(expected)(received));
      });
    };
  };
  var checkOtherRestrictions = function(problem) {
    return function(board) {
      return for_2(problem.otherRestrictions)(function(r) {
        return unless3(r.restriction(board))(throwError2({
          name: r.name,
          description: r.description
        }));
      });
    };
  };
  var checkEvaluable = function(board) {
    return lmap3(NotEvaluable.create)(toEvaluableBoard(board));
  };
  var isReadyForTesting = function(problem) {
    return function(board) {
      return fromLeft(ReadyForTesting.value)(bind16(checkEvaluable(board))(function(evaluable) {
        return discard6(lmap3(PortMismatch.create)(checkPortMismatch(problem)(evaluableBoardPiece(evaluable))))(function() {
          return lmap3(FailedRestriction.create)(checkOtherRestrictions(problem)(board));
        });
      }));
    };
  };

  // output/Game.TestCase/index.js
  var eq9 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMap(eqCardinalDirection)(eqSignal));
  var Passed = /* @__PURE__ */ function() {
    function Passed2() {
    }
    ;
    Passed2.value = new Passed2();
    return Passed2;
  }();
  var Failed = /* @__PURE__ */ function() {
    function Failed2(value0) {
      this.value0 = value0;
    }
    ;
    Failed2.create = function(value0) {
      return new Failed2(value0);
    };
    return Failed2;
  }();
  var NotStarted2 = /* @__PURE__ */ function() {
    function NotStarted3() {
    }
    ;
    NotStarted3.value = new NotStarted3();
    return NotStarted3;
  }();
  var InProgress = /* @__PURE__ */ function() {
    function InProgress2() {
    }
    ;
    InProgress2.value = new InProgress2();
    return InProgress2;
  }();
  var Completed3 = /* @__PURE__ */ function() {
    function Completed4(value0) {
      this.value0 = value0;
    }
    ;
    Completed4.create = function(value0) {
      return new Completed4(value0);
    };
    return Completed4;
  }();
  var eqTestCaseOutcome = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Passed && y2 instanceof Passed) {
          return true;
        }
        ;
        if (x2 instanceof Failed && y2 instanceof Failed) {
          return eq9(x2.value0.received)(y2.value0.received);
        }
        ;
        return false;
      };
    }
  };
  var eq17 = /* @__PURE__ */ eq(eqTestCaseOutcome);
  var eqTestCaseStatus = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof NotStarted2 && y2 instanceof NotStarted2) {
          return true;
        }
        ;
        if (x2 instanceof InProgress && y2 instanceof InProgress) {
          return true;
        }
        ;
        if (x2 instanceof Completed3 && y2 instanceof Completed3) {
          return eq17(x2.value0)(y2.value0);
        }
        ;
        return false;
      };
    }
  };
  var testCaseOutcome = function(v2) {
    return function(received) {
      var $34 = eq9(v2.expected)(received);
      if ($34) {
        return Passed.value;
      }
      ;
      return new Failed({
        received
      });
    };
  };

  // output/Parsing/index.js
  var $runtime_lazy12 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var ParseState = /* @__PURE__ */ function() {
    function ParseState2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ParseState2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ParseState2(value0, value1, value22);
        };
      };
    };
    return ParseState2;
  }();
  var ParseError = /* @__PURE__ */ function() {
    function ParseError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ParseError2.create = function(value0) {
      return function(value1) {
        return new ParseError2(value0, value1);
      };
    };
    return ParseError2;
  }();
  var functorParserT = {
    map: function(f) {
      return function(v2) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v1) {
            return v2(state1, more, lift1, $$throw2, function(state22, a3) {
              return more(function(v22) {
                return done(state22, f(a3));
              });
            });
          });
        };
      };
    }
  };
  var applyParserT = {
    apply: function(v2) {
      return function(v1) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v22) {
            return v2(state1, more, lift1, $$throw2, function(state22, f) {
              return more(function(v3) {
                return v1(state22, more, lift1, $$throw2, function(state3, a3) {
                  return more(function(v4) {
                    return done(state3, f(a3));
                  });
                });
              });
            });
          });
        };
      };
    },
    Functor0: function() {
      return functorParserT;
    }
  };
  var bindParserT = {
    bind: function(v2) {
      return function(next2) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v1) {
            return v2(state1, more, lift1, $$throw2, function(state22, a3) {
              return more(function(v22) {
                var v3 = next2(a3);
                return v3(state22, more, lift1, $$throw2, done);
              });
            });
          });
        };
      };
    },
    Apply0: function() {
      return applyParserT;
    }
  };
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindParserT);
  var applicativeParserT = {
    pure: function(a3) {
      return function(state1, v2, v1, v22, done) {
        return done(state1, a3);
      };
    },
    Apply0: function() {
      return applyParserT;
    }
  };
  var monadParserT = {
    Applicative0: function() {
      return applicativeParserT;
    },
    Bind1: function() {
      return bindParserT;
    }
  };
  var monadRecParserT = {
    tailRecM: function(next2) {
      return function(initArg) {
        return function(state1, more, lift1, $$throw2, done) {
          var $lazy_loop = $runtime_lazy12("loop", "Parsing", function() {
            return function(state22, arg, gas) {
              var v2 = next2(arg);
              return v2(state22, more, lift1, $$throw2, function(state3, step5) {
                if (step5 instanceof Loop) {
                  var $206 = gas === 0;
                  if ($206) {
                    return more(function(v1) {
                      return $lazy_loop(277)(state3, step5.value0, 30);
                    });
                  }
                  ;
                  return $lazy_loop(279)(state3, step5.value0, gas - 1 | 0);
                }
                ;
                if (step5 instanceof Done) {
                  return done(state3, step5.value0);
                }
                ;
                throw new Error("Failed pattern match at Parsing (line 273, column 39 - line 281, column 43): " + [step5.constructor.name]);
              });
            };
          });
          var loop3 = $lazy_loop(270);
          return loop3(state1, initArg, 30);
        };
      };
    },
    Monad0: function() {
      return monadParserT;
    }
  };
  var monadThrowParseErrorParse = {
    throwError: function(err) {
      return function(state1, v2, v1, $$throw2, v22) {
        return $$throw2(state1, err);
      };
    },
    Monad0: function() {
      return monadParserT;
    }
  };
  var throwError3 = /* @__PURE__ */ throwError(monadThrowParseErrorParse);
  var altParserT = {
    alt: function(v2) {
      return function(v1) {
        return function(v22, more, lift1, $$throw2, done) {
          return more(function(v3) {
            return v2(new ParseState(v22.value0, v22.value1, false), more, lift1, function(v4, err) {
              return more(function(v5) {
                if (v4.value2) {
                  return $$throw2(v4, err);
                }
                ;
                return v1(v22, more, lift1, $$throw2, done);
              });
            }, done);
          });
        };
      };
    },
    Functor0: function() {
      return functorParserT;
    }
  };
  var stateParserT = function(k) {
    return function(state1, v2, v1, v22, done) {
      var v3 = k(state1);
      return done(v3.value1, v3.value0);
    };
  };
  var position2 = /* @__PURE__ */ stateParserT(function(v2) {
    return new Tuple(v2.value1, v2);
  });
  var failWithPosition = function(message2) {
    return function(pos) {
      return throwError3(new ParseError(message2, pos));
    };
  };
  var fail2 = function(message2) {
    return bindFlipped7(failWithPosition(message2))(position2);
  };
  var plusParserT = {
    empty: /* @__PURE__ */ fail2("No alternative"),
    Alt0: function() {
      return altParserT;
    }
  };

  // output/Parsing.Combinators/index.js
  var alt7 = /* @__PURE__ */ alt(altParserT);
  var empty9 = /* @__PURE__ */ empty(plusParserT);
  var withErrorMessage = function(p2) {
    return function(msg) {
      return alt7(p2)(fail2("Expected " + msg));
    };
  };
  var $$try3 = function(v2) {
    return function(v1, more, lift12, $$throw2, done) {
      return v2(v1, more, lift12, function(v22, err) {
        return $$throw2(new ParseState(v22.value0, v22.value1, v1.value2), err);
      }, done);
    };
  };
  var choice = function(dictFoldable) {
    var go2 = function(p1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return new Just(p1);
        }
        ;
        if (v2 instanceof Just) {
          return new Just(alt7(p1)(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Parsing.Combinators (line 358, column 11 - line 360, column 32): " + [v2.constructor.name]);
      };
    };
    var $95 = fromMaybe(empty9);
    var $96 = foldr(dictFoldable)(go2)(Nothing.value);
    return function($97) {
      return $95($96($97));
    };
  };

  // output/Parsing.Combinators.Array/index.js
  var bind17 = /* @__PURE__ */ bind(bindParserT);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecParserT);
  var alt8 = /* @__PURE__ */ alt(altParserT);
  var pure14 = /* @__PURE__ */ pure(applicativeParserT);
  var fromFoldable7 = /* @__PURE__ */ fromFoldable3(foldableList);
  var many2 = function(p2) {
    return bind17(flip(tailRecM3)(Nil.value)(function(xs) {
      return alt8(bind17($$try3(p2))(function(x2) {
        return pure14(new Loop(new Cons(x2, xs)));
      }))(pure14(new Done(xs)));
    }))(function(rlist) {
      return pure14(reverse2(fromFoldable7(rlist)));
    });
  };
  var many12 = function(p2) {
    return bind17(many2(p2))(function(xs) {
      var v2 = fromArray(xs);
      if (v2 instanceof Nothing) {
        return fail2("Expected at least 1");
      }
      ;
      if (v2 instanceof Just) {
        return pure14(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Parsing.Combinators.Array (line 52, column 3 - line 54, column 25): " + [v2.constructor.name]);
    });
  };

  // output/Parsing.String/index.js
  var fromEnum4 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var mod5 = /* @__PURE__ */ mod(euclideanRingInt);
  var fromJust6 = /* @__PURE__ */ fromJust();
  var toEnum3 = /* @__PURE__ */ toEnum(boundedEnumChar);
  var show16 = /* @__PURE__ */ show(showString);
  var show23 = /* @__PURE__ */ show(showChar);
  var updatePosSingle = function(v2) {
    return function(cp) {
      return function(after) {
        var v1 = fromEnum4(cp);
        if (v1 === 10) {
          return {
            index: v2.index + 1 | 0,
            line: v2.line + 1 | 0,
            column: 1
          };
        }
        ;
        if (v1 === 13) {
          var v22 = codePointAt(0)(after);
          if (v22 instanceof Just && fromEnum4(v22.value0) === 10) {
            return {
              index: v2.index + 1 | 0,
              line: v2.line,
              column: v2.column
            };
          }
          ;
          return {
            index: v2.index + 1 | 0,
            line: v2.line + 1 | 0,
            column: 1
          };
        }
        ;
        if (v1 === 9) {
          return {
            index: v2.index + 1 | 0,
            line: v2.line,
            column: (v2.column + 8 | 0) - mod5(v2.column - 1 | 0)(8) | 0
          };
        }
        ;
        return {
          index: v2.index + 1 | 0,
          line: v2.line,
          column: v2.column + 1 | 0
        };
      };
    };
  };
  var updatePosString = function($copy_pos) {
    return function($copy_before) {
      return function($copy_after) {
        var $tco_var_pos = $copy_pos;
        var $tco_var_before = $copy_before;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(pos, before, after) {
          var v2 = uncons3(before);
          if (v2 instanceof Nothing) {
            $tco_done = true;
            return pos;
          }
          ;
          if (v2 instanceof Just) {
            var newPos = function() {
              if ($$null3(v2.value0.tail)) {
                return updatePosSingle(pos)(v2.value0.head)(after);
              }
              ;
              if (otherwise) {
                return updatePosSingle(pos)(v2.value0.head)(v2.value0.tail);
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 165, column 7 - line 167, column 52): " + []);
            }();
            $tco_var_pos = newPos;
            $tco_var_before = v2.value0.tail;
            $copy_after = after;
            return;
          }
          ;
          throw new Error("Failed pattern match at Parsing.String (line 161, column 36 - line 168, column 38): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_pos, $tco_var_before, $copy_after);
        }
        ;
        return $tco_result;
      };
    };
  };
  var satisfy = function(f) {
    return mkFn5(function(v2) {
      return function(v1) {
        return function(v22) {
          return function($$throw2) {
            return function(done) {
              var v3 = uncons3(v2.value0);
              if (v3 instanceof Nothing) {
                return $$throw2(v2, new ParseError("Unexpected EOF", v2.value1));
              }
              ;
              if (v3 instanceof Just) {
                var cp = fromEnum4(v3.value0.head);
                var $85 = cp < 0 || cp > 65535;
                if ($85) {
                  return $$throw2(v2, new ParseError("Expected Char", v2.value1));
                }
                ;
                var ch = fromJust6(toEnum3(cp));
                var $86 = f(ch);
                if ($86) {
                  return done(new ParseState(v3.value0.tail, updatePosSingle(v2.value1)(v3.value0.head)(v3.value0.tail), true), ch);
                }
                ;
                return $$throw2(v2, new ParseError("Predicate unsatisfied", v2.value1));
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 114, column 7 - line 129, column 75): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var consumeWith = function(f) {
    return mkFn5(function(v2) {
      return function(v1) {
        return function(v22) {
          return function($$throw2) {
            return function(done) {
              var v3 = f(v2.value0);
              if (v3 instanceof Left) {
                return $$throw2(v2, new ParseError(v3.value0, v2.value1));
              }
              ;
              if (v3 instanceof Right) {
                return done(new ParseState(v3.value0.remainder, updatePosString(v2.value1)(v3.value0.consumed)(v3.value0.remainder), !$$null3(v3.value0.consumed)), v3.value0.value);
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 286, column 7 - line 290, column 121): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var rest2 = /* @__PURE__ */ consumeWith(function(consumed) {
    return new Right({
      value: consumed,
      consumed,
      remainder: ""
    });
  });
  var string = function(str) {
    return consumeWith(function(input3) {
      var v2 = stripPrefix(str)(input3);
      if (v2 instanceof Just) {
        return new Right({
          value: str,
          consumed: str,
          remainder: v2.value0
        });
      }
      ;
      return new Left("Expected " + show16(str));
    });
  };
  var $$char = function(c2) {
    return withErrorMessage(satisfy(function(v2) {
      return v2 === c2;
    }))(show23(c2));
  };

  // output/Data.Char/index.js
  var toCharCode2 = /* @__PURE__ */ fromEnum(boundedEnumChar);

  // output/Data.CodePoint.Unicode/index.js
  var fromEnum5 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var isDecDigit = function(c2) {
    var diff = fromEnum5(c2) - toCharCode2("0") | 0;
    return diff <= 9 && diff >= 0;
  };

  // output/Parsing.String.Basic/index.js
  var satisfyCP = function(p2) {
    return satisfy(function($32) {
      return p2(codePointFromChar($32));
    });
  };
  var digit = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isDecDigit))("digit");

  // output/Component.DataAttribute/index.js
  var unwrap12 = /* @__PURE__ */ unwrap();
  var map40 = /* @__PURE__ */ map(functorParserT);
  var wrap3 = /* @__PURE__ */ wrap();
  var choice2 = /* @__PURE__ */ choice(foldableArray);
  var voidLeft4 = /* @__PURE__ */ voidLeft(functorParserT);
  var bind22 = /* @__PURE__ */ bind(bindParserT);
  var pure15 = /* @__PURE__ */ pure(applicativeParserT);
  var show17 = /* @__PURE__ */ show(showInt);
  var applyFirst3 = /* @__PURE__ */ applyFirst(applyParserT);
  var wrapAttribute = function() {
    return function(attrName) {
      return function(da) {
        return {
          attrName,
          attrPrint: function($66) {
            return da.attrPrint(unwrap12($66));
          },
          attrParse: map40(wrap3)(da.attrParse)
        };
      };
    };
  };
  var selector = function(da) {
    return function(a3) {
      return "[" + (da.attrName + ("='" + (da.attrPrint(a3) + "']")));
    };
  };
  var dataAttribute = function(v2) {
    return function(v1) {
      return function(v22) {
        return {
          attrName: v2,
          attrPrint: v1,
          attrParse: v22
        };
      };
    };
  };
  var direction = /* @__PURE__ */ function() {
    var attrParse = choice2([voidLeft4(string("up"))(Up.value), voidLeft4(string("right"))(Right2.value), voidLeft4(string("down"))(Down.value), voidLeft4(string("left"))(Left2.value)]);
    return dataAttribute("data-direction")(function() {
      var $67 = show(showCardinalDirection);
      return function($68) {
        return toLower($67($68));
      };
    }())(attrParse);
  }();
  var $$int2 = /* @__PURE__ */ function() {
    var attrParse = bind22(map40(function() {
      var $69 = fromFoldable3(foldableNonEmptyArray);
      return function($70) {
        return fromCharArray($69($70));
      };
    }())(many12(digit)))(function(digitStr) {
      return maybe(fail2(digitStr))(pure15)(fromString(digitStr));
    });
    return dataAttribute("int")(show17)(attrParse);
  }();
  var rotation2 = /* @__PURE__ */ wrapAttribute()("data-rotation")($$int2);
  var location3 = /* @__PURE__ */ function() {
    var attrPrint = function(v2) {
      return "(" + (show17(v2.x) + ("," + (show17(v2.y) + ")")));
    };
    var attrParse = bind22(applyFirst3(applySecond(applyParserT)($$char("("))($$int2.attrParse))($$char(",")))(function(x2) {
      return bind22(applyFirst3($$int2.attrParse)($$char(")")))(function(y2) {
        return pure15(location(x2)(y2));
      });
    });
    return dataAttribute("data-location")(attrPrint)(attrParse);
  }();
  var pieceId = /* @__PURE__ */ dataAttribute("data-piece-id")(unwrap12)(/* @__PURE__ */ map40(wrap3)(rest2));
  var progress = /* @__PURE__ */ function() {
    var attrPrint = function(v2) {
      if (v2 instanceof Completed) {
        return "completed";
      }
      ;
      if (v2 instanceof Incomplete) {
        return "incomplete";
      }
      ;
      throw new Error("Failed pattern match at Component.DataAttribute (line 123, column 17 - line 125, column 47): " + [v2.constructor.name]);
    };
    var attrParse = choice2([voidLeft4(string("completed"))(Completed.value), voidLeft4(string("incomplete"))(Incomplete.value)]);
    return dataAttribute("data-puzzle-progress")(attrPrint)(attrParse);
  }();
  var testCaseStatus = /* @__PURE__ */ function() {
    var attrPrint = function(v2) {
      if (v2 instanceof NotStarted2) {
        return "not-started";
      }
      ;
      if (v2 instanceof InProgress) {
        return "in-progress";
      }
      ;
      if (v2 instanceof Completed3 && v2.value0 instanceof Passed) {
        return "passed";
      }
      ;
      if (v2 instanceof Completed3 && v2.value0 instanceof Failed) {
        return "failed";
      }
      ;
      throw new Error("Failed pattern match at Component.DataAttribute (line 171, column 17 - line 175, column 57): " + [v2.constructor.name]);
    };
    var attrParse = fail2("no parser for test case status");
    return dataAttribute("data-test-case-status")(attrPrint)(attrParse);
  }();
  var $$boolean2 = /* @__PURE__ */ function() {
    var attrPrint = function(v2) {
      if (v2) {
        return "true";
      }
      ;
      return "false";
    };
    var attrParse = choice2([voidLeft4(string("true"))(true), voidLeft4(string("false"))(false)]);
    return dataAttribute("boolean")(attrPrint)(attrParse);
  }();
  var isConnected = /* @__PURE__ */ function() {
    return {
      attrPrint: $$boolean2.attrPrint,
      attrParse: $$boolean2.attrParse,
      attrName: "data-is-connected"
    };
  }();
  var isDragging = /* @__PURE__ */ function() {
    return {
      attrPrint: $$boolean2.attrPrint,
      attrParse: $$boolean2.attrParse,
      attrName: "data-is-dragging"
    };
  }();
  var availablePiece = /* @__PURE__ */ dataAttribute("data-available-piece")(unwrap12)(/* @__PURE__ */ map40(PieceId)(rest2));
  var attr3 = function(da) {
    return function(a3) {
      return attr2(da.attrName)(da.attrPrint(a3));
    };
  };

  // output/Component.Piece.Types/index.js
  var Rotated = /* @__PURE__ */ function() {
    function Rotated2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Rotated2.create = function(value0) {
      return function(value1) {
        return new Rotated2(value0, value1);
      };
    };
    return Rotated2;
  }();
  var Dropped = /* @__PURE__ */ function() {
    function Dropped2(value0) {
      this.value0 = value0;
    }
    ;
    Dropped2.create = function(value0) {
      return new Dropped2(value0);
    };
    return Dropped2;
  }();
  var RemoveThis = /* @__PURE__ */ function() {
    function RemoveThis3(value0) {
      this.value0 = value0;
    }
    ;
    RemoveThis3.create = function(value0) {
      return new RemoveThis3(value0);
    };
    return RemoveThis3;
  }();
  var NewMultimeterFocus = /* @__PURE__ */ function() {
    function NewMultimeterFocus2(value0) {
      this.value0 = value0;
    }
    ;
    NewMultimeterFocus2.create = function(value0) {
      return new NewMultimeterFocus2(value0);
    };
    return NewMultimeterFocus2;
  }();
  var Receive2 = /* @__PURE__ */ function() {
    function Receive4(value0) {
      this.value0 = value0;
    }
    ;
    Receive4.create = function(value0) {
      return new Receive4(value0);
    };
    return Receive4;
  }();
  var OnDrop = /* @__PURE__ */ function() {
    function OnDrop2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    OnDrop2.create = function(value0) {
      return function(value1) {
        return new OnDrop2(value0, value1);
      };
    };
    return OnDrop2;
  }();
  var OnDrag = /* @__PURE__ */ function() {
    function OnDrag2(value0) {
      this.value0 = value0;
    }
    ;
    OnDrag2.create = function(value0) {
      return new OnDrag2(value0);
    };
    return OnDrag2;
  }();
  var OnMouseDown = /* @__PURE__ */ function() {
    function OnMouseDown2(value0) {
      this.value0 = value0;
    }
    ;
    OnMouseDown2.create = function(value0) {
      return new OnMouseDown2(value0);
    };
    return OnMouseDown2;
  }();
  var OnMouseMove = /* @__PURE__ */ function() {
    function OnMouseMove2(value0) {
      this.value0 = value0;
    }
    ;
    OnMouseMove2.create = function(value0) {
      return new OnMouseMove2(value0);
    };
    return OnMouseMove2;
  }();
  var OnMouseUp = /* @__PURE__ */ function() {
    function OnMouseUp2(value0) {
      this.value0 = value0;
    }
    ;
    OnMouseUp2.create = function(value0) {
      return new OnMouseUp2(value0);
    };
    return OnMouseUp2;
  }();
  var OnAuxClick = /* @__PURE__ */ function() {
    function OnAuxClick2(value0) {
      this.value0 = value0;
    }
    ;
    OnAuxClick2.create = function(value0) {
      return new OnAuxClick2(value0);
    };
    return OnAuxClick2;
  }();
  var PortOnMouseEnter = /* @__PURE__ */ function() {
    function PortOnMouseEnter2(value0) {
      this.value0 = value0;
    }
    ;
    PortOnMouseEnter2.create = function(value0) {
      return new PortOnMouseEnter2(value0);
    };
    return PortOnMouseEnter2;
  }();
  var PortOnMouseLeave = /* @__PURE__ */ function() {
    function PortOnMouseLeave2() {
    }
    ;
    PortOnMouseLeave2.value = new PortOnMouseLeave2();
    return PortOnMouseLeave2;
  }();
  var OnKeyDown = /* @__PURE__ */ function() {
    function OnKeyDown2(value0) {
      this.value0 = value0;
    }
    ;
    OnKeyDown2.create = function(value0) {
      return new OnKeyDown2(value0);
    };
    return OnKeyDown2;
  }();
  var slot2 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var initialState2 = function(v2) {
    return {
      piece: v2.piece,
      location: v2.location,
      rotation: v2.rotation,
      portStates: v2.portStates,
      isRotating: Nothing.value,
      isDragging: false
    };
  };

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var map42 = /* @__PURE__ */ map(functorFn);
  var slot_ = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component16) {
              return function(input3) {
                return widget(new ComponentSlot(componentSlot22(label5)(p2)(component16)(input3)($$const(Nothing.value))));
              };
            };
          };
        };
      };
    };
  };
  var slot3 = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component16) {
              return function(input3) {
                return function(outputQuery) {
                  return widget(new ComponentSlot(componentSlot22(label5)(p2)(component16)(input3)(function($11) {
                    return Just.create(outputQuery($11));
                  })));
                };
              };
            };
          };
        };
      };
    };
  };
  var memoized = function(eqFn) {
    return function(f) {
      return map42(function($12) {
        return widget(ThunkSlot.create($12));
      })(thunked(eqFn)(f));
    };
  };
  var fromPlainHTML = unsafeCoerce;

  // output/Halogen.Svg.Attributes.Color/index.js
  var show18 = /* @__PURE__ */ show(showInt);
  var show19 = /* @__PURE__ */ show(showNumber);
  var RGB = /* @__PURE__ */ function() {
    function RGB2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    RGB2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new RGB2(value0, value1, value22);
        };
      };
    };
    return RGB2;
  }();
  var RGBA = /* @__PURE__ */ function() {
    function RGBA2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    RGBA2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new RGBA2(value0, value1, value22, value32);
          };
        };
      };
    };
    return RGBA2;
  }();
  var Named = /* @__PURE__ */ function() {
    function Named2(value0) {
      this.value0 = value0;
    }
    ;
    Named2.create = function(value0) {
      return new Named2(value0);
    };
    return Named2;
  }();
  var NoColor = /* @__PURE__ */ function() {
    function NoColor2() {
    }
    ;
    NoColor2.value = new NoColor2();
    return NoColor2;
  }();
  var printColor = function(v2) {
    if (v2 instanceof RGB) {
      return "rgb(" + (show18(v2.value0) + ("," + (show18(v2.value1) + ("," + (show18(v2.value2) + ")")))));
    }
    ;
    if (v2 instanceof RGBA) {
      return "rgba(" + (show18(v2.value0) + ("," + (show18(v2.value1) + ("," + (show18(v2.value2) + ("," + (show19(v2.value3) + ")")))))));
    }
    ;
    if (v2 instanceof Named) {
      return v2.value0;
    }
    ;
    if (v2 instanceof NoColor) {
      return "None";
    }
    ;
    throw new Error("Failed pattern match at Halogen.Svg.Attributes.Color (line 24, column 14 - line 28, column 20): " + [v2.constructor.name]);
  };

  // output/Halogen.Svg.Attributes.Path/index.js
  var show20 = /* @__PURE__ */ show(showNumber);
  var Rel = /* @__PURE__ */ function() {
    function Rel2() {
    }
    ;
    Rel2.value = new Rel2();
    return Rel2;
  }();
  var Abs = /* @__PURE__ */ function() {
    function Abs2() {
    }
    ;
    Abs2.value = new Abs2();
    return Abs2;
  }();
  var toArrayString = /* @__PURE__ */ coerce();
  var renderCommand = function(cmd) {
    return function(s_) {
      if (cmd instanceof Rel) {
        return s_;
      }
      ;
      if (cmd instanceof Abs) {
        return toUpper(s_);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Path (line 81, column 24 - line 83, column 20): " + [cmd.constructor.name]);
    };
  };
  var renderCommand2Args = function(s_) {
    return function(ref3) {
      return function(a_2) {
        return function(b2) {
          return renderCommand(ref3)(s_) + (show20(a_2) + (", " + show20(b2)));
        };
      };
    };
  };
  var renderCommand4Args = function(s_) {
    return function(ref3) {
      return function(a_2) {
        return function(b2) {
          return function(c_) {
            return function(d_) {
              return renderCommand(ref3)(s_) + (show20(a_2) + (", " + (show20(b2) + (", " + (show20(c_) + (", " + show20(d_)))))));
            };
          };
        };
      };
    };
  };
  var q2 = /* @__PURE__ */ renderCommand4Args("q");
  var m = /* @__PURE__ */ renderCommand2Args("m");
  var l = /* @__PURE__ */ renderCommand2Args("l");

  // output/Halogen.Svg.Attributes.Transform/index.js
  var show21 = /* @__PURE__ */ show(showNumber);
  var Matrix = /* @__PURE__ */ function() {
    function Matrix2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Matrix2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new Matrix2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return Matrix2;
  }();
  var Translate = /* @__PURE__ */ function() {
    function Translate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Translate2.create = function(value0) {
      return function(value1) {
        return new Translate2(value0, value1);
      };
    };
    return Translate2;
  }();
  var Scale = /* @__PURE__ */ function() {
    function Scale2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Scale2.create = function(value0) {
      return function(value1) {
        return new Scale2(value0, value1);
      };
    };
    return Scale2;
  }();
  var Rotate = /* @__PURE__ */ function() {
    function Rotate2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Rotate2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Rotate2(value0, value1, value22);
        };
      };
    };
    return Rotate2;
  }();
  var SkewX = /* @__PURE__ */ function() {
    function SkewX2(value0) {
      this.value0 = value0;
    }
    ;
    SkewX2.create = function(value0) {
      return new SkewX2(value0);
    };
    return SkewX2;
  }();
  var SkewY = /* @__PURE__ */ function() {
    function SkewY2(value0) {
      this.value0 = value0;
    }
    ;
    SkewY2.create = function(value0) {
      return new SkewY2(value0);
    };
    return SkewY2;
  }();
  var printTransform = function(v2) {
    if (v2 instanceof Matrix) {
      return "matrix(" + (show21(v2.value0) + ("," + (show21(v2.value1) + ("," + (show21(v2.value2) + ("," + (show21(v2.value3) + ("," + (show21(v2.value4) + ("," + (show21(v2.value5) + ")")))))))))));
    }
    ;
    if (v2 instanceof Translate) {
      return "translate(" + (show21(v2.value0) + ("," + (show21(v2.value1) + ")")));
    }
    ;
    if (v2 instanceof Scale) {
      return "scale(" + (show21(v2.value0) + ("," + (show21(v2.value1) + ")")));
    }
    ;
    if (v2 instanceof Rotate) {
      return "rotate(" + (show21(v2.value0) + ("," + (show21(v2.value1) + ("," + (show21(v2.value2) + ")")))));
    }
    ;
    if (v2 instanceof SkewX) {
      return "skewX(" + (show21(v2.value0) + ")");
    }
    ;
    if (v2 instanceof SkewY) {
      return "skewY(" + (show21(v2.value0) + ")");
    }
    ;
    throw new Error("Failed pattern match at Halogen.Svg.Attributes.Transform (line 28, column 18 - line 34, column 39): " + [v2.constructor.name]);
  };

  // output/Halogen.Svg.Attributes/index.js
  var show24 = /* @__PURE__ */ show(showNumber);
  var map43 = /* @__PURE__ */ map(functorArray);
  var width8 = /* @__PURE__ */ function() {
    var $36 = attr2("width");
    return function($37) {
      return $36(show24($37));
    };
  }();
  var viewBox = function(x_) {
    return function(y_) {
      return function(w) {
        return function(h_) {
          return attr2("viewBox")(joinWith(" ")(map43(show24)([x_, y_, w, h_])));
        };
      };
    };
  };
  var transform = /* @__PURE__ */ function() {
    var $38 = attr2("transform");
    var $39 = joinWith(" ");
    var $40 = map43(printTransform);
    return function($41) {
      return $38($39($40($41)));
    };
  }();
  var stopOpacity = /* @__PURE__ */ function() {
    var $59 = attr2("stop-opacity");
    return function($60) {
      return $59(show24($60));
    };
  }();
  var stopColor = /* @__PURE__ */ function() {
    var $61 = attr2("stop-color");
    return function($62) {
      return $61(printColor($62));
    };
  }();
  var offset = /* @__PURE__ */ attr2("offset");
  var id3 = /* @__PURE__ */ attr2("id");
  var href5 = /* @__PURE__ */ attr2("href");
  var height8 = /* @__PURE__ */ function() {
    var $101 = attr2("height");
    return function($102) {
      return $101(show24($102));
    };
  }();
  var gradientTransform = /* @__PURE__ */ function() {
    var $106 = attr2("gradientTransform");
    var $107 = joinWith(" ");
    var $108 = map43(printTransform);
    return function($109) {
      return $106($107($108($109)));
    };
  }();
  var fillGradient = function(url) {
    return attr2("fill")("url('" + (url + "')"));
  };
  var d = /* @__PURE__ */ function() {
    var $136 = attr2("d");
    var $137 = joinWith(" ");
    return function($138) {
      return $136($137(toArrayString($138)));
    };
  }();

  // output/Halogen.Svg.Elements/index.js
  var element3 = /* @__PURE__ */ elementNS("http://www.w3.org/2000/svg");
  var g = /* @__PURE__ */ element3("g");
  var image = function(props) {
    return element3("image")(props)([]);
  };
  var linearGradient = /* @__PURE__ */ element3("linearGradient");
  var path2 = function(props) {
    return element3("path")(props)([]);
  };
  var stop = function(props) {
    return element3("stop")(props)([]);
  };
  var svg = /* @__PURE__ */ element3("svg");
  var defs = /* @__PURE__ */ element3("defs");

  // output/Component.Rendering.Path/index.js
  var renderPathWithEvents = function(v2) {
    return function(onMouseEnter2) {
      return function(onMouseLeave2) {
        return g([])([defs([])([fromPlainHTML(v2.gradient.def)]), path2([d(v2.path), v2.attrs, fillGradient("#" + v2.gradient.id), onMouseEnter(function(v1) {
          return onMouseEnter2;
        }), onMouseLeave(function(v1) {
          return onMouseLeave2;
        })])]);
      };
    };
  };

  // output/Component.Rendering.Colours/index.js
  var portColours = /* @__PURE__ */ function() {
    return {
      teal: new RGB(117, 242, 191),
      blue: new RGB(120, 204, 250),
      purple: new RGB(208, 135, 221),
      pink: new RGB(228, 100, 156)
    };
  }();

  // output/Component.Rendering.Gradient/index.js
  var clamp2 = /* @__PURE__ */ clamp(ordInt);
  var div7 = /* @__PURE__ */ div(euclideanRingInt);
  var eq10 = /* @__PURE__ */ eq(eqSignal);
  var zero5 = /* @__PURE__ */ zero(semiringSignal);
  var identity19 = /* @__PURE__ */ identity(categoryFn);
  var show25 = /* @__PURE__ */ show(showInt);
  var intercalate6 = /* @__PURE__ */ intercalate(foldableArray)(monoidString);
  var shadeColor = function(percentage) {
    var f = function(x2) {
      return clamp2(0)(255)(div7(x2 * (100 + percentage | 0) | 0)(100));
    };
    return function(v2) {
      if (v2 instanceof RGB) {
        return new RGB(f(v2.value0), f(v2.value1), f(v2.value2));
      }
      ;
      if (v2 instanceof RGBA) {
        return new RGBA(f(v2.value0), f(v2.value1), f(v2.value2), v2.value3);
      }
      ;
      return v2;
    };
  };
  var portColor = function(port2) {
    return function(signal) {
      return function() {
        var $34 = eq10(signal)(zero5);
        if ($34) {
          return shadeColor(-30 | 0);
        }
        ;
        return identity19;
      }()(function() {
        var v2 = portCapacity(port2);
        if (v2 instanceof OneBit) {
          return portColours.teal;
        }
        ;
        if (v2 instanceof TwoBit) {
          return portColours.blue;
        }
        ;
        if (v2 instanceof FourBit) {
          return portColours.purple;
        }
        ;
        if (v2 instanceof EightBit) {
          return portColours.pink;
        }
        ;
        throw new Error("Failed pattern match at Component.Rendering.Gradient (line 49, column 3 - line 53, column 34): " + [v2.constructor.name]);
      }());
    };
  };
  var createPortGradient = function(v2) {
    var signalId = function() {
      var $36 = eq10(v2.signal)(zero5);
      if ($36) {
        return "off";
      }
      ;
      return "on";
    }();
    var portId = function() {
      var $37 = isInput(v2.port);
      if ($37) {
        return "in";
      }
      ;
      return "out";
    }();
    var color2 = portColor(v2.port)(v2.signal);
    var capacityId = show25(toInt(portCapacity(v2.port))) + "bit";
    var id4 = intercalate6("-")(["port-gradient", portId, signalId, capacityId]);
    var def = linearGradient([id3(id4), gradientTransform([new Rotate(90, 0, 0)])])(function() {
      var v1 = portType(v2.port);
      if (v1 instanceof Input) {
        return [stop([offset("5%"), stopColor(color2), stopOpacity(0.5)]), stop([offset("95%"), stopColor(color2)])];
      }
      ;
      if (v1 instanceof Output) {
        return [stop([offset("5%"), stopColor(color2), stopOpacity(0.5)]), stop([offset("95%"), stopColor(color2), stopOpacity(0)])];
      }
      ;
      throw new Error("Failed pattern match at Component.Rendering.Gradient (line 24, column 9 - line 32, column 12): " + [v1.constructor.name]);
    }());
    return {
      id: id4,
      def
    };
  };

  // output/Control.Monad.Writer/index.js
  var unwrap13 = /* @__PURE__ */ unwrap();
  var runWriter = function($5) {
    return unwrap13(runWriterT($5));
  };
  var execWriter = function(m2) {
    return snd(runWriter(m2));
  };

  // output/Component.Rendering.Wire/index.js
  var sub1 = /* @__PURE__ */ sub(/* @__PURE__ */ ringTuple(ringNumber)(ringNumber));
  var tell3 = /* @__PURE__ */ tell(/* @__PURE__ */ monadTellWriterT(monoidArray)(monadIdentity));
  var append15 = /* @__PURE__ */ append(semigroupArray);
  var applicativeWriterT3 = /* @__PURE__ */ applicativeWriterT(monoidArray)(applicativeIdentity);
  var for_3 = /* @__PURE__ */ for_(applicativeWriterT3)(foldableMaybe);
  var toUnfoldable7 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var discard7 = /* @__PURE__ */ discard(discardUnit)(/* @__PURE__ */ bindWriterT(semigroupArray)(bindIdentity));
  var map44 = /* @__PURE__ */ map(functorArray);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeWriterT3)(foldableArray);
  var show26 = /* @__PURE__ */ show(/* @__PURE__ */ showMap(showCardinalDirection)(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "connected";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "port";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "signal";
    }
  })(showSignal))(showPort))(showBoolean))));
  var find4 = /* @__PURE__ */ find(foldableMap);
  var findWithIndex2 = /* @__PURE__ */ findWithIndex(foldableWithIndexMap);
  var terminalLocation = function(v2) {
    if (v2 instanceof Up) {
      return new Tuple(65, 25);
    }
    ;
    if (v2 instanceof Right2) {
      return new Tuple(75, 65);
    }
    ;
    if (v2 instanceof Down) {
      return new Tuple(35, 75);
    }
    ;
    if (v2 instanceof Left2) {
      return new Tuple(25, 35);
    }
    ;
    throw new Error("Failed pattern match at Component.Rendering.Wire (line 43, column 20 - line 47, column 37): " + [v2.constructor.name]);
  };
  var stubPath = function(v2) {
    if (v2 instanceof Up) {
      return [l(Rel.value)(0)(-25), l(Rel.value)(30)(0), l(Rel.value)(0)(25)];
    }
    ;
    if (v2 instanceof Right2) {
      return [l(Rel.value)(25)(0), l(Rel.value)(0)(30), l(Rel.value)(-25)(0)];
    }
    ;
    if (v2 instanceof Down) {
      return [l(Rel.value)(0)(25), l(Rel.value)(-30)(0), l(Rel.value)(0)(-25)];
    }
    ;
    if (v2 instanceof Left2) {
      return [l(Rel.value)(-25)(0), l(Rel.value)(0)(-30), l(Rel.value)(25)(0)];
    }
    ;
    throw new Error("Failed pattern match at Component.Rendering.Wire (line 70, column 12 - line 74, column 77): " + [v2.constructor.name]);
  };
  var initialLocation = function(v2) {
    if (v2 instanceof Up) {
      return new Tuple(35, 25);
    }
    ;
    if (v2 instanceof Right2) {
      return new Tuple(75, 35);
    }
    ;
    if (v2 instanceof Down) {
      return new Tuple(65, 75);
    }
    ;
    if (v2 instanceof Left2) {
      return new Tuple(25, 65);
    }
    ;
    throw new Error("Failed pattern match at Component.Rendering.Wire (line 36, column 19 - line 40, column 37): " + [v2.constructor.name]);
  };
  var betweenPath = function(to3) {
    return function(from4) {
      var v2 = sub1(initialLocation(from4))(terminalLocation(to3));
      var v1 = function() {
        if (from4 instanceof Up) {
          return new Tuple(v2.value0, 0);
        }
        ;
        if (from4 instanceof Right2) {
          return new Tuple(0, v2.value1);
        }
        ;
        if (from4 instanceof Down) {
          return new Tuple(v2.value0, 0);
        }
        ;
        if (from4 instanceof Left2) {
          return new Tuple(0, v2.value1);
        }
        ;
        throw new Error("Failed pattern match at Component.Rendering.Wire (line 84, column 19 - line 88, column 37): " + [from4.constructor.name]);
      }();
      return [q2(Rel.value)(v1.value0)(v1.value1)(v2.value0)(v2.value1)];
    };
  };
  var arrowPath = function(v2) {
    if (v2 instanceof Up) {
      return [l(Rel.value)(0)(-13), l(Rel.value)(-10)(0), l(Rel.value)(25)(-12), l(Rel.value)(25)(12), l(Rel.value)(-10)(0), l(Rel.value)(0)(13)];
    }
    ;
    if (v2 instanceof Right2) {
      return [l(Rel.value)(13)(0), l(Rel.value)(0)(-10), l(Rel.value)(12)(25), l(Rel.value)(-12)(25), l(Rel.value)(0)(-10), l(Rel.value)(-13)(0)];
    }
    ;
    if (v2 instanceof Down) {
      return [l(Rel.value)(0)(13), l(Rel.value)(10)(0), l(Rel.value)(-25)(12), l(Rel.value)(-25)(-12), l(Rel.value)(10)(0), l(Rel.value)(0)(-13)];
    }
    ;
    if (v2 instanceof Left2) {
      return [l(Rel.value)(-13)(0), l(Rel.value)(0)(10), l(Rel.value)(-12)(-25), l(Rel.value)(12)(-25), l(Rel.value)(0)(10), l(Rel.value)(13)(0)];
    }
    ;
    throw new Error("Failed pattern match at Component.Rendering.Wire (line 59, column 13 - line 67, column 119): " + [v2.constructor.name]);
  };
  var outputPath = function(connected) {
    if (connected) {
      return stubPath;
    }
    ;
    return arrowPath;
  };
  var wirePath = function(ports) {
    var renderSide = function(v2) {
      return function(to3) {
        return tell3(append15(function() {
          var $80 = isInput(v2.value1.port);
          if ($80) {
            return stubPath(v2.value0);
          }
          ;
          return outputPath(v2.value1.connected)(v2.value0);
        }())(betweenPath(v2.value0)(to3)));
      };
    };
    var path3 = execWriter(for_3(uncons2(toUnfoldable7(ports)))(function(v2) {
      var v1 = initialLocation(fst(v2.head));
      return discard7(tell3([m(Rel.value)(v1.value0)(v1.value1)]))(function() {
        var sides = zip(toUnfoldable7(ports))(map44(fst)(append15(v2.tail)([v2.head])));
        return traverse_5(uncurry(renderSide))(sides);
      });
    }));
    var info4 = fromMaybe$prime(function(v2) {
      return unsafeCrashWith("assertion failed: wire path created with no inputs. ports: " + show26(ports));
    })(find4(function(portInfo) {
      return isInput(portInfo.port);
    })(ports));
    var gradient = createPortGradient(info4);
    var attrs = attr3(isConnected)(info4.connected);
    return {
      path: path3,
      gradient,
      attrs
    };
  };
  var renderWire = function(portStates) {
    var inputDirection = maybe$prime(function(v2) {
      return unsafeCrashWith("assertion failed: wire path created with no inputs. ports: " + show26(portStates));
    })(function(v2) {
      return v2.index;
    })(findWithIndex2(function(v2) {
      return function(info4) {
        return isInput(info4.port);
      };
    })(portStates));
    return renderPathWithEvents(wirePath(portStates))(new PortOnMouseEnter(inputDirection))(PortOnMouseLeave.value);
  };

  // output/Component.Rendering.CrossOver/index.js
  var filterKeys2 = /* @__PURE__ */ filterKeys(ordCardinalDirection);
  var elem4 = /* @__PURE__ */ elem(foldableArray)(eqCardinalDirection);
  var renderDualInputDualOutputPiece = function(v2) {
    return function(v1) {
      return function(portStates) {
        var path22 = wirePath(filterKeys2(function(v22) {
          return elem4(v22)([v1.value0, v1.value1]);
        })(portStates));
        var path1 = wirePath(filterKeys2(function(v22) {
          return elem4(v22)([v2.value0, v2.value1]);
        })(portStates));
        return g([])([renderPathWithEvents(path1)(new PortOnMouseEnter(v2.value1))(PortOnMouseLeave.value), renderPathWithEvents(path22)(new PortOnMouseEnter(v1.value1))(PortOnMouseLeave.value)]);
      };
    };
  };
  var renderCrossOver = /* @__PURE__ */ function() {
    return renderDualInputDualOutputPiece(new Tuple(Left2.value, Right2.value))(new Tuple(Up.value, Down.value));
  }();
  var renderCornerCut = /* @__PURE__ */ function() {
    return renderDualInputDualOutputPiece(new Tuple(Left2.value, Down.value))(new Tuple(Up.value, Right2.value));
  }();
  var renderChicken = /* @__PURE__ */ function() {
    return renderDualInputDualOutputPiece(new Tuple(Left2.value, Down.value))(new Tuple(Right2.value, Up.value));
  }();

  // output/Component.Rendering.Port/index.js
  var eq11 = /* @__PURE__ */ eq(eqPortType);
  var append16 = /* @__PURE__ */ append(semigroupArray);
  var portPath = function(info4) {
    var v2 = function() {
      var $5 = eq11(portType(info4.port))(Input.value);
      if ($5) {
        return new Tuple(40, 0);
      }
      ;
      return new Tuple(10, 25);
    }();
    var headPath = function() {
      var v22 = portType(info4.port);
      if (v22 instanceof Input) {
        return arrowPath(Down.value);
      }
      ;
      if (v22 instanceof Output && info4.connected) {
        return stubPath(Up.value);
      }
      ;
      if (v22 instanceof Output && !info4.connected) {
        return arrowPath(Up.value);
      }
      ;
      throw new Error("Failed pattern match at Component.Rendering.Port (line 35, column 16 - line 38, column 53): " + [v22.constructor.name, info4.connected.constructor.name]);
    }();
    var path3 = append16([m(Rel.value)(v2.value0)(v2.value1)])(append16(headPath)(betweenPath(Up.value)(Up.value)));
    return {
      path: path3,
      gradient: createPortGradient(info4),
      attrs: attr3(isConnected)(info4.connected)
    };
  };

  // output/Game.Piece.WirePiece/index.js
  var ordSet2 = /* @__PURE__ */ ordSet(ordCardinalDirection);
  var append17 = /* @__PURE__ */ append(/* @__PURE__ */ semigroupSet(ordCardinalDirection));
  var show27 = /* @__PURE__ */ show(/* @__PURE__ */ showSet(showCardinalDirection));
  var lookup13 = /* @__PURE__ */ lookup2(ordSet2);
  var zero6 = /* @__PURE__ */ zero(semiringSignal);
  var lookup14 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var voidLeft5 = /* @__PURE__ */ voidLeft(functorMap);
  var length11 = /* @__PURE__ */ length(foldableSet)(semiringInt);
  var eq18 = /* @__PURE__ */ eq(eqCardinalDirection);
  var elem5 = /* @__PURE__ */ elem(foldableSet)(eqCardinalDirection);
  var insert10 = /* @__PURE__ */ insert(ordCardinalDirection);
  var insert12 = /* @__PURE__ */ insert3(ordCardinalDirection);
  var discard8 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var guard5 = /* @__PURE__ */ guard(alternativeMaybe);
  var notEq5 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqSet(eqCardinalDirection));
  var pure16 = /* @__PURE__ */ pure(applicativeMaybe);
  var $$delete7 = /* @__PURE__ */ $$delete4(ordCardinalDirection);
  var isSubmap2 = /* @__PURE__ */ isSubmap(ordCardinalDirection)(eqPort);
  var fromFoldable8 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection);
  var fromFoldable13 = /* @__PURE__ */ fromFoldable8(foldableSet);
  var map45 = /* @__PURE__ */ map13(/* @__PURE__ */ ordTuple(ordCardinalDirection)(ordCardinalDirection));
  var fromFoldable23 = /* @__PURE__ */ fromFoldable4(foldableArray)(ordCardinalDirection);
  var elem1 = /* @__PURE__ */ elem(foldableMap)(eqPieceId);
  var fromFoldable33 = /* @__PURE__ */ fromFoldable8(foldableArray);
  var wirePieceNames = /* @__PURE__ */ function() {
    var up = singleton9(Up.value);
    var right2 = singleton9(Right2.value);
    var down = singleton9(Down.value);
    return fromFoldable2(ordSet2)(foldableArray)([new Tuple(up, "left-piece"), new Tuple(right2, "id-piece"), new Tuple(down, "right-piece"), new Tuple(append17(up)(right2), "intersection-left-piece"), new Tuple(append17(up)(down), "intersection-junction-piece"), new Tuple(append17(right2)(down), "intersection-right-piece"), new Tuple(append17(up)(append17(right2)(down)), "super-piece")]);
  }();
  var mkWirePiece = /* @__PURE__ */ function() {
    var go2 = function(v2) {
      return function(unglob2) {
        var nameErr = function(v1) {
          return unsafeCrashWith("Can't find wire piece with outputs: " + show27(v2.outputs));
        };
        return defer2(function(v1) {
          return {
            name: fromMaybe$prime(nameErr)(lookup13(v2.outputs)(wirePieceNames)),
            "eval": function(inputs) {
              var signal = fromMaybe(zero6)(lookup14(Left2.value)(inputs));
              return voidLeft5(toMap(v2.outputs))(signal);
            },
            complexity: space(toNumber(length11(v2.outputs))),
            shouldRipple: true,
            updateCapacity: function(dir2) {
              return function(capacity$prime) {
                var $52 = eq18(dir2)(Left2.value) || elem5(dir2)(v2.outputs);
                if ($52) {
                  return new Just(force(go2({
                    outputs: v2.outputs,
                    capacity: capacity$prime
                  })(unglob2)));
                }
                ;
                return Nothing.value;
              };
            },
            ports: insert10(Left2.value)(inputPort(v2.capacity))(voidLeft5(toMap(v2.outputs))(outputPort(v2.capacity))),
            glob: function(dir2) {
              return function(portType2) {
                if (dir2 instanceof Left2) {
                  return Nothing.value;
                }
                ;
                if (portType2 instanceof Just && portType2.value0 instanceof Input) {
                  var newOutputs = insert12(dir2)(v2.outputs);
                  return discard8(guard5(notEq5(v2.outputs)(newOutputs)))(function() {
                    return pure16(force(go2({
                      capacity: v2.capacity,
                      outputs: newOutputs
                    })(unglob2)));
                  });
                }
                ;
                if (portType2 instanceof Just && portType2.value0 instanceof Output) {
                  return Nothing.value;
                }
                ;
                if (portType2 instanceof Nothing) {
                  var newOutputs = $$delete7(dir2)(v2.outputs);
                  return discard8(guard5(notEq5(v2.outputs)(newOutputs) && notEq5(newOutputs)(empty3)))(function() {
                    var globbed = force(go2({
                      capacity: v2.capacity,
                      outputs: newOutputs
                    })(unglob2));
                    return discard8(guard5(isSubmap2(getPorts(force(unglob2)))(getPorts(globbed))))(function() {
                      return pure16(globbed);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Game.Piece.WirePiece (line 89, column 32 - line 102, column 27): " + [dir2.constructor.name, portType2.constructor.name]);
              };
            },
            unglob: unglob2,
            isSimplifiable: function() {
              var connections = fromFoldable13(map45(function(out) {
                return new Tuple(out, Left2.value);
              })(v2.outputs));
              return new Just(new Connection(connections));
            }()
          };
        });
      };
    };
    var $59 = fix(lazyLazy);
    return function($60) {
      return force($59(go2($60)));
    };
  }();
  var rightPiece = /* @__PURE__ */ function() {
    return mkWirePiece({
      capacity: OneBit.value,
      outputs: fromFoldable23([Down.value])
    });
  }();
  var superPiece = /* @__PURE__ */ function() {
    return mkWirePiece({
      capacity: OneBit.value,
      outputs: fromFoldable23([Up.value, Right2.value, Down.value])
    });
  }();
  var leftPiece = /* @__PURE__ */ function() {
    return mkWirePiece({
      capacity: OneBit.value,
      outputs: fromFoldable23([Up.value])
    });
  }();
  var isWirePiece = function(piece) {
    return elem1(name2(piece))(wirePieceNames);
  };
  var idPiece = /* @__PURE__ */ function() {
    return mkWirePiece({
      capacity: OneBit.value,
      outputs: fromFoldable23([Right2.value])
    });
  }();
  var dualWirePiece = function(dualWire) {
    return mkPieceNoGlob({
      name: dualWire.name,
      "eval": function(m2) {
        var a22 = fromMaybe(zero6)(lookup14(dualWire.input2)(m2));
        var a1 = fromMaybe(zero6)(lookup14(Left2.value)(m2));
        return fromFoldable33([new Tuple(dualWire.output1, a1), new Tuple(dualWire.output2, a22)]);
      },
      ports: fromFoldable33([new Tuple(Left2.value, inputPort(dualWire.capacity)), new Tuple(dualWire.input2, inputPort(dualWire.capacity)), new Tuple(dualWire.output1, outputPort(dualWire.capacity)), new Tuple(dualWire.output2, outputPort(dualWire.capacity))]),
      complexity: space(1),
      shouldRipple: true,
      updateCapacity: function(v2) {
        return function(capacity) {
          return new Just(dualWirePiece({
            name: dualWire.name,
            output1: dualWire.output1,
            input2: dualWire.input2,
            output2: dualWire.output2,
            capacity
          }));
        };
      },
      isSimplifiable: new Just(new Connection(fromFoldable33([new Tuple(dualWire.output1, Left2.value), new Tuple(dualWire.output2, dualWire.input2)])))
    });
  };
  var reverseChickenPiece = /* @__PURE__ */ function() {
    return dualWirePiece({
      name: "reverse-chicken-piece",
      capacity: OneBit.value,
      output1: Right2.value,
      input2: Up.value,
      output2: Down.value
    });
  }();
  var crossPiece = /* @__PURE__ */ function() {
    return dualWirePiece({
      name: "cross-piece",
      capacity: OneBit.value,
      output1: Right2.value,
      input2: Up.value,
      output2: Down.value
    });
  }();
  var cornerCutPiece = /* @__PURE__ */ function() {
    return dualWirePiece({
      name: "corner-cut-piece",
      capacity: OneBit.value,
      output1: Down.value,
      input2: Up.value,
      output2: Right2.value
    });
  }();
  var chickenPiece = /* @__PURE__ */ function() {
    return dualWirePiece({
      name: "chicken-piece",
      capacity: OneBit.value,
      output1: Down.value,
      input2: Right2.value,
      output2: Up.value
    });
  }();
  var allWirePieces = [idPiece, leftPiece, rightPiece, superPiece, crossPiece, cornerCutPiece, chickenPiece, reverseChickenPiece];

  // output/Component.Rendering.Piece/index.js
  var bind18 = /* @__PURE__ */ bind(bindArray);
  var pure17 = /* @__PURE__ */ pure(applicativeArray);
  var mul2 = /* @__PURE__ */ mul(semiringNumber);
  var fromFoldable9 = /* @__PURE__ */ fromFoldable3(foldableMaybe);
  var lookup15 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var append18 = /* @__PURE__ */ append(semigroupArray);
  var eq19 = /* @__PURE__ */ eq(eqPieceId);
  var renderDefaultPiece = function(state3) {
    var renderPieceCenter = function(v2) {
      return image([href5("./static/images/" + (v2 + ".png")), width8(40), height8(40)]);
    };
    var center = g([transform([new Translate(30, 30)])])([svg([width8(50), height8(50)])([renderPieceCenter(name2(state3.piece))])]);
    var allPorts = bind18(allDirections)(function(dir2) {
      var v2 = clockwiseRotation(Up.value)(dir2);
      return pure17(g([transform([new Rotate(toNumber(v2) * 90, 50, 50), new Translate(25, 0)])])(bind18(fromFoldable9(lookup15(dir2)(state3.portStates)))(function(portInfo) {
        var path3 = portPath(portInfo);
        return pure17(renderPathWithEvents(path3)(new PortOnMouseEnter(dir2))(PortOnMouseLeave.value));
      })));
    });
    return g([])(append18(allPorts)([center]));
  };
  var renderPiece = function(state3) {
    var render6 = function() {
      if (isWirePiece(state3.piece)) {
        return renderWire(state3.portStates);
      }
      ;
      if (eq19(name2(state3.piece))(name2(crossPiece))) {
        return renderCrossOver(state3.portStates);
      }
      ;
      if (eq19(name2(state3.piece))(name2(cornerCutPiece))) {
        return renderCornerCut(state3.portStates);
      }
      ;
      if (eq19(name2(state3.piece))(name2(chickenPiece))) {
        return renderChicken(state3.portStates);
      }
      ;
      if (otherwise) {
        return renderDefaultPiece(state3);
      }
      ;
      throw new Error("Failed pattern match at Component.Rendering.Piece (line 44, column 5 - line 49, column 45): " + []);
    }();
    var pieceRotation = maybe(toDegrees(state3.rotation))(function() {
      var $15 = mul2(180 / pi);
      return function($16) {
        return $15(function(v2) {
          return v2.currentRotation;
        }($16));
      };
    }())(state3.isRotating);
    var attributes = [transform([new Rotate(pieceRotation, 50, 50)])];
    var animations = [];
    return svg([viewBox(0)(0)(100)(100)])([g(attributes)(append18([render6])(animations))]);
  };

  // output/Game.PortInfo/index.js
  var clampPortInfo = function(portInfo) {
    return {
      port: portInfo.port,
      connected: portInfo.connected,
      signal: canonical(portCapacity(portInfo.port))(portInfo.signal)
    };
  };

  // output/Halogen.HTML.Properties.Extras/index.js
  var contentEditable2 = /* @__PURE__ */ prop5(isPropBoolean)("contentEditable");

  // output/Component.Piece/index.js
  var mul3 = /* @__PURE__ */ mul(semiringNumber);
  var eqRec3 = /* @__PURE__ */ eqRec();
  var eqRowCons2 = /* @__PURE__ */ eqRowCons(eqRowNil)();
  var eq20 = /* @__PURE__ */ eq(/* @__PURE__ */ eqRec3(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons2({
    reflectSymbol: function() {
      return "rotation";
    }
  })(eqRotation))()({
    reflectSymbol: function() {
      return "portStates";
    }
  })(/* @__PURE__ */ eqMap(eqCardinalDirection)(/* @__PURE__ */ eqRec3(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons2({
    reflectSymbol: function() {
      return "signal";
    }
  })(eqSignal))()({
    reflectSymbol: function() {
      return "port";
    }
  })(eqPort))()({
    reflectSymbol: function() {
      return "connected";
    }
  })(eqBoolean)))))()({
    reflectSymbol: function() {
      return "piece";
    }
  })(eqPiece))()({
    reflectSymbol: function() {
      return "location";
    }
  })(eqLocation))()({
    reflectSymbol: function() {
      return "isRotating";
    }
  })(/* @__PURE__ */ eqMaybe(/* @__PURE__ */ eqRec3(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons2({
    reflectSymbol: function() {
      return "initialClickPosition";
    }
  })(/* @__PURE__ */ eqTuple(eqNumber)(eqNumber)))()({
    reflectSymbol: function() {
      return "currentRotation";
    }
  })(eqNumber)))))()({
    reflectSymbol: function() {
      return "isDragging";
    }
  })(eqBoolean)));
  var modify_3 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var map46 = /* @__PURE__ */ map(functorMap);
  var discard9 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var pure18 = /* @__PURE__ */ pure(applicativeHalogenM);
  var bind19 = /* @__PURE__ */ bind(bindHalogenM);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map118 = /* @__PURE__ */ map(functorEffect);
  var sub12 = /* @__PURE__ */ sub(/* @__PURE__ */ ringTuple(ringNumber)(ringNumber));
  var gets2 = /* @__PURE__ */ gets(monadStateHalogenM);
  var append19 = /* @__PURE__ */ append(semigroupRotation);
  var ginverse3 = /* @__PURE__ */ ginverse(groupRotation);
  var when3 = /* @__PURE__ */ when(applicativeHalogenM);
  var bind23 = /* @__PURE__ */ bind(bindMaybe);
  var lookup16 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var pure23 = /* @__PURE__ */ pure(applicativeMaybe);
  var angleBetween = function(v1) {
    return function(v2) {
      var dot = function(v3) {
        return function(v32) {
          return v3.value0 * v32.value0 + v3.value1 * v32.value1;
        };
      };
      var det = function(v3) {
        return function(v32) {
          return v3.value0 * v32.value1 - v32.value0 * v3.value1;
        };
      };
      return atan2(det(v1)(v2))(dot(v1)(v2));
    };
  };
  var component4 = function(dictMonadEffect) {
    var liftEffect11 = liftEffect(monadEffectHalogenM(dictMonadEffect));
    var render6 = memoized(eq20)(function(state3) {
      return div5([classes(["piece-component"]), attr3(isDragging)(state3.isDragging), attr3(rotation2)(state3.rotation), attr3(pieceId)(name2(state3.piece)), draggable2(isNothing(state3.isRotating)), ref2("piece"), contentEditable2(true), onDragEnd(OnDrop.create(state3.location)), onDrag(OnDrag.create), onMouseDown(OnMouseDown.create), onMouseMove(OnMouseMove.create), onMouseUp(OnMouseUp.create), onKeyDown(OnKeyDown.create), onAuxClick(OnAuxClick.create)])([renderPiece(state3)]);
    });
    var getPosition = function(e) {
      return new Tuple(toNumber(clientX(e)), toNumber(clientY(e)));
    };
    var elementCenterClient = function(e) {
      return function __do5() {
        var bb = getBoundingClientRect(e)();
        var cx = (bb.right + bb.left) / 2;
        var cy = (bb.bottom + bb.top) / 2;
        return new Tuple(cx, cy);
      };
    };
    var $$eval3 = mkEval({
      handleQuery: defaultEval.handleQuery,
      finalize: Nothing.value,
      handleAction: function(v1) {
        if (v1 instanceof Receive2) {
          return modify_3(function(v2) {
            var $132 = {};
            for (var $133 in v2) {
              if ({}.hasOwnProperty.call(v2, $133)) {
                $132[$133] = v2[$133];
              }
              ;
            }
            ;
            $132.piece = v1.value0.piece;
            $132.location = v1.value0.location;
            $132.rotation = v1.value0.rotation;
            $132.portStates = map46(clampPortInfo)(v1.value0.portStates);
            return $132;
          });
        }
        ;
        if (v1 instanceof OnDrop) {
          return discard9(modify_3(function(v2) {
            var $140 = {};
            for (var $141 in v2) {
              if ({}.hasOwnProperty.call(v2, $141)) {
                $140[$141] = v2[$141];
              }
              ;
            }
            ;
            $140.isDragging = false;
            return $140;
          }))(function() {
            return raise(new Dropped(v1.value0));
          });
        }
        ;
        if (v1 instanceof OnDrag) {
          return discard9(modify_3(function(v2) {
            var $145 = {};
            for (var $146 in v2) {
              if ({}.hasOwnProperty.call(v2, $146)) {
                $145[$146] = v2[$146];
              }
              ;
            }
            ;
            $145.isDragging = true;
            return $145;
          }))(function() {
            return pure18(unit);
          });
        }
        ;
        if (v1 instanceof OnMouseDown) {
          return bind19(getHTMLElementRef("piece"))(traverse_6(function(he) {
            return bind19(liftEffect11(map118(mul3(0.5))(clientWidth(toElement(he)))))(function(r) {
              return bind19(liftEffect11(elementCenterClient(toElement(he))))(function(c2) {
                var v2 = sub12(getPosition(v1.value0))(c2);
                var $150 = r * r > v2.value0 * v2.value0 + v2.value1 * v2.value1;
                if ($150) {
                  return modify_3(function(v3) {
                    var $151 = {};
                    for (var $152 in v3) {
                      if ({}.hasOwnProperty.call(v3, $152)) {
                        $151[$152] = v3[$152];
                      }
                      ;
                    }
                    ;
                    $151.isRotating = Nothing.value;
                    return $151;
                  });
                }
                ;
                return discard9(liftEffect11(setDraggable(false)(he)))(function() {
                  return bind19(gets2(function(v3) {
                    return v3.rotation;
                  }))(function(rotation3) {
                    return modify_3(function(v3) {
                      var $154 = {};
                      for (var $155 in v3) {
                        if ({}.hasOwnProperty.call(v3, $155)) {
                          $154[$155] = v3[$155];
                        }
                        ;
                      }
                      ;
                      $154.isRotating = new Just({
                        initialClickPosition: getPosition(v1.value0),
                        currentRotation: toRadians(rotation3)
                      });
                      $154.isDragging = false;
                      return $154;
                    });
                  });
                });
              });
            });
          }));
        }
        ;
        if (v1 instanceof OnAuxClick) {
          return bind19(gets2(function(v2) {
            return v2.location;
          }))(function(loc) {
            return raise(new Dropped(loc));
          });
        }
        ;
        if (v1 instanceof OnMouseMove) {
          return bind19(getRef("piece"))(traverse_6(function(e) {
            return bind19(gets2(function(v2) {
              return v2.isRotating;
            }))(traverse_6(function(v2) {
              return bind19(gets2(function(v3) {
                return v3.rotation;
              }))(function(rotation3) {
                var p2 = getPosition(v1.value0);
                return bind19(liftEffect11(elementCenterClient(e)))(function(c2) {
                  var angle = toRadians(rotation3) + angleBetween(sub12(v2.initialClickPosition)(c2))(sub12(p2)(c2));
                  return modify_3(function(v3) {
                    var $162 = {};
                    for (var $163 in v3) {
                      if ({}.hasOwnProperty.call(v3, $163)) {
                        $162[$163] = v3[$163];
                      }
                      ;
                    }
                    ;
                    $162.isRotating = new Just({
                      initialClickPosition: v2.initialClickPosition,
                      currentRotation: angle
                    });
                    return $162;
                  });
                });
              });
            }));
          }));
        }
        ;
        if (v1 instanceof OnMouseUp) {
          return bind19(gets2(function(v2) {
            return v2.isRotating;
          }))(traverse_6(function(v2) {
            var closestSnapPoint = rotation(round2(4 * v2.currentRotation / (2 * pi)));
            return bind19(gets2(function(v3) {
              return v3.rotation;
            }))(function(rotation3) {
              return bind19(gets2(function(v3) {
                return v3.location;
              }))(function(location4) {
                return discard9(modify_3(function(v3) {
                  var $169 = {};
                  for (var $170 in v3) {
                    if ({}.hasOwnProperty.call(v3, $170)) {
                      $169[$170] = v3[$170];
                    }
                    ;
                  }
                  ;
                  $169.isRotating = Nothing.value;
                  return $169;
                }))(function() {
                  return raise(new Rotated(location4, append19(closestSnapPoint)(ginverse3(rotation3))));
                });
              });
            });
          }));
        }
        ;
        if (v1 instanceof OnKeyDown) {
          return discard9(when3(key(v1.value0) === "r")(bind19(gets2(function(v2) {
            return v2.location;
          }))(function(loc) {
            return raise(new Rotated(loc, rotation(1)));
          })))(function() {
            return when3(key(v1.value0) === "R")(bind19(gets2(function(v2) {
              return v2.location;
            }))(function(loc) {
              return raise(new Rotated(loc, rotation(3)));
            }));
          });
        }
        ;
        if (v1 instanceof PortOnMouseEnter) {
          return bind19(gets2(function(v2) {
            return v2.portStates;
          }))(function(portStates) {
            return bind19(gets2(function(v2) {
              return v2.location;
            }))(function(loc) {
              return raise(new NewMultimeterFocus(function() {
                var relativeEdge = relative(loc)(v1.value0);
                return bind23(lookup16(v1.value0)(portStates))(function(info4) {
                  return pure23({
                    relativeEdge,
                    info: info4
                  });
                });
              }()));
            });
          });
        }
        ;
        if (v1 instanceof PortOnMouseLeave) {
          return raise(new NewMultimeterFocus(Nothing.value));
        }
        ;
        throw new Error("Failed pattern match at Component.Piece (line 96, column 22 - line 172, column 45): " + [v1.constructor.name]);
      },
      initialize: Nothing.value,
      receive: function($177) {
        return Just.create(Receive2.create($177));
      }
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState2,
      render: render6
    });
  };

  // output/Component.Board.Render/index.js
  var show28 = /* @__PURE__ */ show(showInt);
  var intercalate7 = /* @__PURE__ */ intercalate(foldableArray)(monoidString);
  var bind20 = /* @__PURE__ */ bind(bindMaybe);
  var pure19 = /* @__PURE__ */ pure(applicativeMaybe);
  var slot4 = /* @__PURE__ */ slot3()({
    reflectSymbol: function() {
      return "piece";
    }
  })(ordLocation);
  var component5 = /* @__PURE__ */ component4(monadEffectAppM);
  var _size3 = /* @__PURE__ */ _size(strongForget);
  var bind110 = /* @__PURE__ */ bind(bindArray);
  var pure110 = /* @__PURE__ */ pure(applicativeArray);
  var elem6 = /* @__PURE__ */ elem2(eqCardinalDirection);
  var div8 = /* @__PURE__ */ div(euclideanRingInt);
  var fromFoldable10 = /* @__PURE__ */ fromFoldable3(foldableMap);
  var mapWithIndex3 = /* @__PURE__ */ mapWithIndex(functorWithIndexMap);
  var boardPortInfo2 = /* @__PURE__ */ boardPortInfo(/* @__PURE__ */ monadStateStateT(monadIdentity));
  var join4 = /* @__PURE__ */ join(bindArray);
  var render = function(state3) {
    var gridArea = function(v2) {
      return "grid-area: " + (show28(v2.value1 + 2 | 0) + (" / " + show28(v2.value0 + 2 | 0)));
    };
    var emptyPieceHTML = function(v2) {
      return div5([class_("location-text")])([text(show28(v2.x + 1 | 0) + ("," + show28(v2.y + 1 | 0)))]);
    };
    var renderPieceSlot = function(i2) {
      return function(j) {
        var loc = location(i2)(j);
        return div5([attr3(location3)(location(i2)(j)), class_("piece"), style(intercalate7("; ")([gridArea(new Tuple(i2, j))])), onMouseDown(LocationOnMouseDown.create(loc)), onMouseOver(LocationOnMouseOver.create(loc)), onMouseUp(LocationOnMouseUp.create(loc)), onDragEnter(LocationOnDragEnter.create(loc)), onDragOver(LocationOnDragOver.create(loc)), onDragLeave(LocationOnDragLeave.create), onDrop(LocationOnDrop.create(loc))])([fromMaybe(emptyPieceHTML(loc))(bind20(pieceInput(state3)(loc))(function(input3) {
          return pure19(slot4(slot2)(loc)(component5)(input3)(PieceOutput.create));
        }))]);
      };
    };
    var board = head3(state3.boardHistory);
    var n = viewOn(board)(_size3);
    var gridTemplate = "25fr repeat(" + (show28(n) + ", 100fr) 25fr");
    var pieces = bind110(range2(0)(n - 1 | 0))(function(i2) {
      return bind110(range2(0)(n - 1 | 0))(function(j) {
        return pure110(renderPieceSlot(i2)(j));
      });
    });
    var renderBoardPort = function(dir2) {
      return function(portInfo) {
        var viewBox2 = function() {
          var $36 = elem6(dir2)([Up.value, Down.value]);
          if ($36) {
            return viewBox(0)(0)(50)(25);
          }
          ;
          return viewBox(12.5)(-12.5)(25)(50);
        }();
        var rotation3 = toDegrees(clockwiseRotation(Up.value)(dir2)) + 180;
        var path3 = portPath(portInfo);
        var boardPortLocation = function(v2) {
          if (v2 instanceof Left2) {
            return new Tuple(-1 | 0, div8(n)(2));
          }
          ;
          if (v2 instanceof Right2) {
            return new Tuple(n, div8(n)(2));
          }
          ;
          if (v2 instanceof Up) {
            return new Tuple(div8(n)(2), -1 | 0);
          }
          ;
          if (v2 instanceof Down) {
            return new Tuple(div8(n)(2), n);
          }
          ;
          throw new Error("Failed pattern match at Component.Board.Render (line 121, column 29 - line 125, column 48): " + [v2.constructor.name]);
        };
        return div5([class_("board-port"), onClick(function(v2) {
          return new ToggleInput(dir2);
        }), attr3(direction)(dir2), style(intercalate7("; ")([gridArea(boardPortLocation(dir2))]))])([svg([viewBox2])([g([transform([new Rotate(rotation3, 25, 12.5)])])([renderPathWithEvents(path3)(new BoardPortOnMouseEnter(dir2))(BoardPortOnMouseLeave.value)])])]);
      };
    };
    var boardPorts = fromFoldable10(mapWithIndex3(renderBoardPort)(evalState(boardPortInfo2)(state3)));
    return div5([class_("board-component"), onDragExit(BoardOnDragExit.create), style(intercalate7("; ")(["grid-template-columns: " + gridTemplate, "grid-template-rows:    " + gridTemplate]))])(join4([pieces, boardPorts]));
  };

  // output/Component.Multimeter/index.js
  var NewFocus = /* @__PURE__ */ function() {
    function NewFocus2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NewFocus2.create = function(value0) {
      return function(value1) {
        return new NewFocus2(value0, value1);
      };
    };
    return NewFocus2;
  }();
  var SetSignal = /* @__PURE__ */ function() {
    function SetSignal2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SetSignal2.create = function(value0) {
      return function(value1) {
        return new SetSignal2(value0, value1);
      };
    };
    return SetSignal2;
  }();
  var slot5 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();

  // output/Game.Board.Operation/index.js
  var div9 = /* @__PURE__ */ div(euclideanRingInt);
  var all4 = /* @__PURE__ */ all(foldableArray)(heytingAlgebraBoolean);
  var between2 = /* @__PURE__ */ between(ordInt);
  var find5 = /* @__PURE__ */ find(foldableSet);
  var not3 = /* @__PURE__ */ not(heytingAlgebraBoolean);
  var _pieces5 = /* @__PURE__ */ _pieces(strongForget);
  var at5 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordLocation));
  var _pieces13 = /* @__PURE__ */ _pieces(strongFn);
  var ix3 = /* @__PURE__ */ ix(/* @__PURE__ */ indexMap(ordLocation));
  var prop9 = /* @__PURE__ */ prop({
    reflectSymbol: function() {
      return "piece";
    }
  })()();
  var map47 = /* @__PURE__ */ map(functorMaybe);
  var discard10 = /* @__PURE__ */ discard(discardUnit);
  var _rotation3 = /* @__PURE__ */ _rotation(strongFn);
  var validBoardSize = function(dictMonadThrow) {
    var throwError5 = throwError(dictMonadThrow);
    var pure41 = pure(dictMonadThrow.Monad0().Applicative0());
    return function(n) {
      var $202 = even(n) || (n < 3 || n > 9);
      if ($202) {
        return throwError5(new BadBoardSize(n));
      }
      ;
      return pure41(n);
    };
  };
  var setBoardSize = function(dictMonadState) {
    var get4 = get(dictMonadState);
    var put5 = put(dictMonadState);
    return function(dictMonadError) {
      var MonadThrow0 = dictMonadError.MonadThrow0();
      var bind40 = bind(MonadThrow0.Monad0().Bind1());
      var validBoardSize1 = validBoardSize(MonadThrow0);
      var throwError5 = throwError(MonadThrow0);
      return function(n) {
        return bind40(get4)(function(v2) {
          return bind40(validBoardSize1(n))(function(newSize) {
            var dSize = div9(-(newSize - v2.size | 0) | 0)(2);
            var insideSquare = function(v1) {
              return all4(between2(0)(newSize - 1 | 0))([v1.x, v1.y]);
            };
            var shiftLocation = function(v1) {
              return location(v1.x - dSize | 0)(v1.y - dSize | 0);
            };
            var firstPieceOusideSquare = find5(function($227) {
              return !insideSquare(shiftLocation($227));
            })(keys2(v2.pieces));
            if (firstPieceOusideSquare instanceof Just) {
              return throwError5(new LocationOccupied(firstPieceOusideSquare.value0));
            }
            ;
            if (firstPieceOusideSquare instanceof Nothing) {
              return put5({
                size: newSize,
                pieces: unsafeMapKey(shiftLocation)(v2.pieces)
              });
            }
            ;
            throw new Error("Failed pattern match at Game.Board.Operation (line 190, column 3 - line 194, column 52): " + [firstPieceOusideSquare.constructor.name]);
          });
        });
      };
    };
  };
  var globRelEdge = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind40 = bind(Monad0.Bind1());
    var use3 = use(dictMonadState);
    var traverse_16 = traverse_(Monad0.Applicative0())(foldableMaybe);
    var assign4 = assign(dictMonadState);
    return function(v2) {
      return function(portType2) {
        return bind40(use3(function() {
          var $228 = at5(v2.loc)(strongForget);
          return function($229) {
            return _pieces5($228($229));
          };
        }()))(traverse_16(function(info4) {
          return assign4(function() {
            var $230 = ix3(v2.loc)(strongFn)(choiceFn);
            var $231 = prop9($$Proxy.value)(strongFn);
            return function($232) {
              return _pieces13($230($231($232)));
            };
          }())(glob(v2.dir)(portType2)(info4.piece));
        }));
      };
    };
  };
  var globPortsAround = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var for_7 = for_(Monad0.Applicative0())(foldableArray);
    var bind40 = bind(Monad0.Bind1());
    var getPortOnEdge2 = getPortOnEdge(dictMonadState);
    var adjacentRelativeEdge2 = adjacentRelativeEdge(dictMonadState);
    var globRelEdge1 = globRelEdge(dictMonadState);
    return function(loc) {
      return for_7(allDirections)(function(dir2) {
        var relEdge = relative(loc)(dir2);
        return bind40(getPortOnEdge2(relEdge))(function(maybePort) {
          return bind40(adjacentRelativeEdge2(relEdge))(function(relEdge$prime) {
            return globRelEdge1(relEdge$prime)(map47(portType)(maybePort));
          });
        });
      });
    };
  };
  var movePiece = function(dictMonadError) {
    var MonadThrow0 = dictMonadError.MonadThrow0();
    var Monad0 = MonadThrow0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind40 = bind(Bind1);
    var discard111 = discard10(Bind1);
    var whenM3 = whenM(Monad0);
    var map123 = map(Bind1.Apply0().Functor0());
    var throwError5 = throwError(MonadThrow0);
    var pure41 = pure(Monad0.Applicative0());
    return function(dictMonadState) {
      var use3 = use(dictMonadState);
      var assign4 = assign(dictMonadState);
      var globPortsAround1 = globPortsAround(dictMonadState);
      return function(src10) {
        return function(dst) {
          return bind40(use3(function() {
            var $233 = at5(src10)(strongForget);
            return function($234) {
              return _pieces5($233($234));
            };
          }()))(function(v2) {
            if (v2 instanceof Just) {
              return discard111(whenM3(map123(isJust)(use3(function() {
                var $235 = at5(dst)(strongForget);
                return function($236) {
                  return _pieces5($235($236));
                };
              }())))(throwError5(new LocationOccupied(dst))))(function() {
                return discard111(assign4(function() {
                  var $237 = at5(src10)(strongFn);
                  return function($238) {
                    return _pieces13($237($238));
                  };
                }())(Nothing.value))(function() {
                  return discard111(assign4(function() {
                    var $239 = at5(dst)(strongFn);
                    return function($240) {
                      return _pieces13($239($240));
                    };
                  }())(new Just(v2.value0)))(function() {
                    return discard111(globPortsAround1(src10))(function() {
                      return discard111(globPortsAround1(dst))(function() {
                        return pure41(v2.value0);
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v2 instanceof Nothing) {
              return throwError5(new LocationNotOccupied(src10));
            }
            ;
            throw new Error("Failed pattern match at Game.Board.Operation (line 121, column 32 - line 132, column 43): " + [v2.constructor.name]);
          });
        };
      };
    };
  };
  var getPieceInfo = function(dictMonadState) {
    var use3 = use(dictMonadState);
    return function(dictMonadError) {
      var MonadThrow0 = dictMonadError.MonadThrow0();
      var Monad0 = MonadThrow0.Monad0();
      var bind40 = bind(Monad0.Bind1());
      var throwError5 = throwError(MonadThrow0);
      var pure41 = pure(Monad0.Applicative0());
      return function(loc) {
        return bind40(use3(function() {
          var $241 = at5(loc)(strongForget);
          return function($242) {
            return _pieces5($241($242));
          };
        }()))(maybe(throwError5(new LocationNotOccupied(loc)))(pure41));
      };
    };
  };
  var getPiece = function(dictMonadState) {
    var getPieceInfo1 = getPieceInfo(dictMonadState);
    return function(dictMonadError) {
      var map123 = map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0());
      var getPieceInfo2 = getPieceInfo1(dictMonadError);
      return function(loc) {
        return map123(function(v2) {
          return v2.piece;
        })(getPieceInfo2(loc));
      };
    };
  };
  var checkInsideBoard = function(dictMonadError) {
    var MonadThrow0 = dictMonadError.MonadThrow0();
    var Monad0 = MonadThrow0.Monad0();
    var whenM3 = whenM(Monad0);
    var map123 = map(Monad0.Bind1().Apply0().Functor0());
    var throwError5 = throwError(MonadThrow0);
    return function(dictMonadState) {
      var isInsideBoard2 = isInsideBoard(dictMonadState);
      return function(loc) {
        return whenM3(map123(not3)(isInsideBoard2(loc)))(throwError5(new InvalidLocation(loc)));
      };
    };
  };
  var removePieceNoUpdate = function(dictMonadError) {
    var MonadThrow0 = dictMonadError.MonadThrow0();
    var Monad0 = MonadThrow0.Monad0();
    var Bind1 = Monad0.Bind1();
    var discard111 = discard10(Bind1);
    var checkInsideBoard1 = checkInsideBoard(dictMonadError);
    var bind40 = bind(Bind1);
    var throwError5 = throwError(MonadThrow0);
    var pure41 = pure(Monad0.Applicative0());
    return function(dictMonadState) {
      var checkInsideBoard2 = checkInsideBoard1(dictMonadState);
      var use3 = use(dictMonadState);
      var assign4 = assign(dictMonadState);
      return function(loc) {
        return discard111(checkInsideBoard2(loc))(function() {
          return bind40(use3(function() {
            var $243 = at5(loc)(strongForget);
            return function($244) {
              return _pieces5($243($244));
            };
          }()))(function(maybePieceInfo) {
            if (maybePieceInfo instanceof Nothing) {
              return throwError5(new LocationNotOccupied(loc));
            }
            ;
            if (maybePieceInfo instanceof Just) {
              return discard111(assign4(function() {
                var $245 = at5(loc)(strongFn);
                return function($246) {
                  return _pieces13($245($246));
                };
              }())(Nothing.value))(function() {
                return pure41(maybePieceInfo.value0);
              });
            }
            ;
            throw new Error("Failed pattern match at Game.Board.Operation (line 105, column 3 - line 109, column 21): " + [maybePieceInfo.constructor.name]);
          });
        });
      };
    };
  };
  var removePiece = function(dictMonadError) {
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var Bind1 = Monad0.Bind1();
    var bind40 = bind(Bind1);
    var removePieceNoUpdate1 = removePieceNoUpdate(dictMonadError);
    var discard111 = discard10(Bind1);
    var pure41 = pure(Monad0.Applicative0());
    return function(dictMonadState) {
      var removePieceNoUpdate2 = removePieceNoUpdate1(dictMonadState);
      var globPortsAround1 = globPortsAround(dictMonadState);
      return function(loc) {
        return bind40(removePieceNoUpdate2(loc))(function(piece) {
          return discard111(globPortsAround1(loc))(function() {
            return pure41(piece);
          });
        });
      };
    };
  };
  var pieceDropped = function(dictMonadState) {
    return function(dictMonadError) {
      var movePiece1 = movePiece(dictMonadError)(dictMonadState);
      var removePiece1 = removePiece(dictMonadError)(dictMonadState);
      return function(src10) {
        return function(maybeDst) {
          if (maybeDst instanceof Just) {
            return movePiece1(src10)(maybeDst.value0);
          }
          ;
          if (maybeDst instanceof Nothing) {
            return removePiece1(src10);
          }
          ;
          throw new Error("Failed pattern match at Game.Board.Operation (line 138, column 3 - line 142, column 31): " + [maybeDst.constructor.name]);
        };
      };
    };
  };
  var rotatePieceBy = function(dictMonadError) {
    var Bind1 = dictMonadError.MonadThrow0().Monad0().Bind1();
    var discard111 = discard10(Bind1);
    var checkInsideBoard1 = checkInsideBoard(dictMonadError);
    var bind40 = bind(Bind1);
    return function(dictMonadState) {
      var checkInsideBoard2 = checkInsideBoard1(dictMonadState);
      var getPiece1 = getPiece(dictMonadState)(dictMonadError);
      var appendModifying3 = appendModifying(dictMonadState)(semigroupRotation);
      var globPortsAround1 = globPortsAround(dictMonadState);
      return function(loc) {
        return function(rot) {
          return discard111(checkInsideBoard2(loc))(function() {
            return bind40(getPiece1(loc))(function() {
              return discard111(appendModifying3(function() {
                var $247 = ix3(loc)(strongFn)(choiceFn);
                return function($248) {
                  return _pieces13($247(_rotation3($248)));
                };
              }())(rot))(function() {
                return globPortsAround1(loc);
              });
            });
          });
        };
      };
    };
  };
  var addPieceNoUpdate = function(dictMonadError) {
    var MonadThrow0 = dictMonadError.MonadThrow0();
    var Bind1 = MonadThrow0.Monad0().Bind1();
    var discard111 = discard10(Bind1);
    var checkInsideBoard1 = checkInsideBoard(dictMonadError);
    var bind40 = bind(Bind1);
    var throwError5 = throwError(MonadThrow0);
    return function(dictMonadState) {
      var checkInsideBoard2 = checkInsideBoard1(dictMonadState);
      var use3 = use(dictMonadState);
      var assign4 = assign(dictMonadState);
      return function(loc) {
        return function(piece) {
          return function(rotation3) {
            return discard111(checkInsideBoard2(loc))(function() {
              return bind40(use3(function() {
                var $249 = at5(loc)(strongForget);
                return function($250) {
                  return _pieces5($249($250));
                };
              }()))(function(pieceInfo) {
                if (pieceInfo instanceof Nothing) {
                  return assign4(function() {
                    var $251 = at5(loc)(strongFn);
                    return function($252) {
                      return _pieces13($251($252));
                    };
                  }())(new Just({
                    piece,
                    rotation: rotation3
                  }));
                }
                ;
                if (pieceInfo instanceof Just) {
                  return throwError5(new LocationOccupied(loc));
                }
                ;
                throw new Error("Failed pattern match at Game.Board.Operation (line 92, column 3 - line 94, column 48): " + [pieceInfo.constructor.name]);
              });
            });
          };
        };
      };
    };
  };
  var addPiece = function(dictMonadError) {
    var discard111 = discard10(dictMonadError.MonadThrow0().Monad0().Bind1());
    var addPieceNoUpdate1 = addPieceNoUpdate(dictMonadError);
    return function(dictMonadState) {
      var addPieceNoUpdate2 = addPieceNoUpdate1(dictMonadState);
      var globPortsAround1 = globPortsAround(dictMonadState);
      return function(loc) {
        return function(piece) {
          return discard111(addPieceNoUpdate2(loc)(piece)(rotation(0)))(function() {
            return globPortsAround1(loc);
          });
        };
      };
    };
  };

  // output/Game.Board.PathSegment/index.js
  var genericShowConstructor3 = /* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(/* @__PURE__ */ showMap(showCardinalDirection)(showCardinalDirection)));
  var toUnfoldable8 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var negate2 = /* @__PURE__ */ negate(ringRotation);
  var sort2 = /* @__PURE__ */ sort(ordInt);
  var eq23 = /* @__PURE__ */ eq(eqRotation);
  var append20 = /* @__PURE__ */ append(/* @__PURE__ */ semigroupSet(ordCardinalDirection));
  var fromFoldable11 = /* @__PURE__ */ fromFoldable4(foldableList)(ordCardinalDirection);
  var pure20 = /* @__PURE__ */ pure(applicativeEither);
  var throwError4 = /* @__PURE__ */ throwError(monadThrowEither);
  var fromFoldable14 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection)(foldableArray);
  var map48 = /* @__PURE__ */ map(functorArray);
  var union5 = /* @__PURE__ */ union2(ordCardinalDirection);
  var discard11 = /* @__PURE__ */ discard(discardUnit)(bindEither);
  var when4 = /* @__PURE__ */ when(applicativeEither);
  var isSubmap3 = /* @__PURE__ */ isSubmap(ordCardinalDirection)(eqCardinalDirection);
  var map119 = /* @__PURE__ */ map(functorEither);
  var bind21 = /* @__PURE__ */ bind(bindEither);
  var InvalidPathSegment = /* @__PURE__ */ function() {
    function InvalidPathSegment2(value0) {
      this.value0 = value0;
    }
    ;
    InvalidPathSegment2.create = function(value0) {
      return new InvalidPathSegment2(value0);
    };
    return InvalidPathSegment2;
  }();
  var CantCombinePathSegments = /* @__PURE__ */ function() {
    function CantCombinePathSegments2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CantCombinePathSegments2.create = function(value0) {
      return function(value1) {
        return new CantCombinePathSegments2(value0, value1);
      };
    };
    return CantCombinePathSegments2;
  }();
  var NoSimplificationForPiece = /* @__PURE__ */ function() {
    function NoSimplificationForPiece2(value0) {
      this.value0 = value0;
    }
    ;
    NoSimplificationForPiece2.create = function(value0) {
      return new NoSimplificationForPiece2(value0);
    };
    return NoSimplificationForPiece2;
  }();
  var genericPathSegment_ = {
    to: function(x2) {
      return x2;
    },
    from: function(x2) {
      return x2;
    }
  };
  var showPathSegment = {
    show: /* @__PURE__ */ genericShow(genericPathSegment_)(/* @__PURE__ */ genericShowConstructor3({
      reflectSymbol: function() {
        return "PathSegment";
      }
    }))
  };
  var genericShowArgsArgument2 = /* @__PURE__ */ genericShowArgsArgument(showPathSegment);
  var genericPathSegmentError_ = {
    to: function(x2) {
      if (x2 instanceof Inl) {
        return new InvalidPathSegment(x2.value0);
      }
      ;
      if (x2 instanceof Inr && x2.value0 instanceof Inl) {
        return new CantCombinePathSegments(x2.value0.value0.value0, x2.value0.value0.value1);
      }
      ;
      if (x2 instanceof Inr && x2.value0 instanceof Inr) {
        return new NoSimplificationForPiece(x2.value0.value0);
      }
      ;
      throw new Error("Failed pattern match at Game.Board.PathSegment (line 42, column 1 - line 42, column 43): " + [x2.constructor.name]);
    },
    from: function(x2) {
      if (x2 instanceof InvalidPathSegment) {
        return new Inl(x2.value0);
      }
      ;
      if (x2 instanceof CantCombinePathSegments) {
        return new Inr(new Inl(new Product(x2.value0, x2.value1)));
      }
      ;
      if (x2 instanceof NoSimplificationForPiece) {
        return new Inr(new Inr(x2.value0));
      }
      ;
      throw new Error("Failed pattern match at Game.Board.PathSegment (line 42, column 1 - line 42, column 43): " + [x2.constructor.name]);
    }
  };
  var showPathSegmentError = {
    show: /* @__PURE__ */ genericShow(genericPathSegmentError_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor3({
      reflectSymbol: function() {
        return "InvalidPathSegment";
      }
    }))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsProduct(genericShowArgsArgument2)(genericShowArgsArgument2))({
      reflectSymbol: function() {
        return "CantCombinePathSegments";
      }
    }))(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showPiece))({
      reflectSymbol: function() {
        return "NoSimplificationForPiece";
      }
    }))))
  };
  var toPiece = function(v2) {
    var v1 = toUnfoldable8(v2);
    if (v1.length === 1) {
      var rotation3 = clockwiseRotation(Left2.value)(v1[0].value0);
      return {
        piece: mkWirePiece({
          capacity: OneBit.value,
          outputs: singleton9(rotateDirection(v1[0].value1)(negate2(rotation3)))
        }),
        rotation: rotation3
      };
    }
    ;
    if (v1.length === 2) {
      var v22 = clockwiseRotation(v1[0].value0)(v1[0].value1);
      var v3 = clockwiseRotation(v1[1].value0)(v1[1].value1);
      var v4 = sort2([v22, v3]);
      if (v4.length === 2 && (v4[0] === 1 && v4[1] === 1)) {
        return {
          piece: reverseChickenPiece,
          rotation: mod22(clockwiseRotation(v1[0].value0)(Left2.value))
        };
      }
      ;
      if (v4.length === 2 && (v4[0] === 2 && v4[1] === 2)) {
        var primaryInput = function() {
          var $124 = eq23(clockwiseRotation(v1[0].value0)(v1[1].value0))(1);
          if ($124) {
            return v1[0].value0;
          }
          ;
          return v1[1].value0;
        }();
        return {
          piece: crossPiece,
          rotation: mod22(clockwiseRotation(primaryInput)(Left2.value))
        };
      }
      ;
      if (v4.length === 2 && (v4[0] === 3 && v4[1] === 3)) {
        return {
          piece: chickenPiece,
          rotation: mod22(clockwiseRotation(v1[0].value0)(Left2.value))
        };
      }
      ;
      if (v4.length === 2 && (v4[0] === 1 && v4[1] === 3)) {
        var primaryInput = function() {
          var $129 = eq23(clockwiseRotation(v1[0].value0)(v1[1].value0))(1);
          if ($129) {
            return v1[0].value0;
          }
          ;
          return v1[1].value0;
        }();
        return {
          piece: cornerCutPiece,
          rotation: clockwiseRotation(primaryInput)(Left2.value)
        };
      }
      ;
      return unsafeCrashWith("couldn't create a piece");
    }
    ;
    return unsafeCrashWith("couldn't create a piece");
  };
  var pathSegment = function(connections) {
    var $138 = size2(append20(keys2(connections))(fromFoldable11(values(connections)))) === (size(connections) * 2 | 0);
    if ($138) {
      return pure20(connections);
    }
    ;
    return throwError4(new InvalidPathSegment(connections));
  };
  var singlePath = function(from4) {
    return function(to3) {
      return pathSegment(singleton6(from4)(to3));
    };
  };
  var fromPiece = function(v2) {
    var f = function(v12) {
      return new Tuple(rotateDirection(v12.value1)(v2.rotation), rotateDirection(v12.value0)(v2.rotation));
    };
    var v1 = isSimplifiable(v2.piece);
    if (v1 instanceof Just && v1.value0 instanceof Connection) {
      return pathSegment(fromFoldable14(map48(f)(toUnfoldable8(v1.value0.value0))));
    }
    ;
    return throwError4(new NoSimplificationForPiece(v2.piece));
  };
  var combine = function(v2) {
    return function(v1) {
      var conn3 = union5(v2)(v1);
      return discard11(when4(isSubmap3(conn3)(v2) || isSubmap3(conn3)(v1))(throwError4(new CantCombinePathSegments(v2, v1))))(function() {
        return pathSegment(conn3);
      });
    };
  };
  var combineSegmentWithExtant = function(segment2) {
    var $152 = map119(toPiece);
    return function($153) {
      return $152(function(v2) {
        if (v2 instanceof Nothing) {
          return pure20(segment2);
        }
        ;
        if (v2 instanceof Just) {
          return bind21(fromPiece(v2.value0))(function(extantPathSegment) {
            return combine(segment2)(extantPathSegment);
          });
        }
        ;
        throw new Error("Failed pattern match at Game.Board.PathSegment (line 144, column 52 - line 148, column 38): " + [v2.constructor.name]);
      }($153));
    };
  };

  // output/Game.Board.Path/index.js
  var genericShowArgsArgument3 = /* @__PURE__ */ genericShowArgsArgument(showLocation);
  var genericShowArgsArgument1 = /* @__PURE__ */ genericShowArgsArgument(showCardinalDirection);
  var bind24 = /* @__PURE__ */ bind(bindEither);
  var zipWithA2 = /* @__PURE__ */ zipWithA(applicativeEither);
  var pure21 = /* @__PURE__ */ pure(applicativeEither);
  var lmap4 = /* @__PURE__ */ lmap(bifunctorEither);
  var map49 = /* @__PURE__ */ map(functorEither);
  var insert11 = /* @__PURE__ */ insert(ordLocation);
  var _pieces6 = /* @__PURE__ */ _pieces(strongForget);
  var at6 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordLocation));
  var discard12 = /* @__PURE__ */ discard(discardUnit);
  var LocationsAreNotAdjacent = /* @__PURE__ */ function() {
    function LocationsAreNotAdjacent2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LocationsAreNotAdjacent2.create = function(value0) {
      return function(value1) {
        return new LocationsAreNotAdjacent2(value0, value1);
      };
    };
    return LocationsAreNotAdjacent2;
  }();
  var PathIsEmpty = /* @__PURE__ */ function() {
    function PathIsEmpty2() {
    }
    ;
    PathIsEmpty2.value = new PathIsEmpty2();
    return PathIsEmpty2;
  }();
  var WireInputEqualsOutput = /* @__PURE__ */ function() {
    function WireInputEqualsOutput2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    WireInputEqualsOutput2.create = function(value0) {
      return function(value1) {
        return new WireInputEqualsOutput2(value0, value1);
      };
    };
    return WireInputEqualsOutput2;
  }();
  var PathSegmentError = /* @__PURE__ */ function() {
    function PathSegmentError2(value0) {
      this.value0 = value0;
    }
    ;
    PathSegmentError2.create = function(value0) {
      return new PathSegmentError2(value0);
    };
    return PathSegmentError2;
  }();
  var genericPathError_ = {
    to: function(x2) {
      if (x2 instanceof Inl) {
        return new LocationsAreNotAdjacent(x2.value0.value0, x2.value0.value1);
      }
      ;
      if (x2 instanceof Inr && x2.value0 instanceof Inl) {
        return PathIsEmpty.value;
      }
      ;
      if (x2 instanceof Inr && (x2.value0 instanceof Inr && x2.value0.value0 instanceof Inl)) {
        return new WireInputEqualsOutput(x2.value0.value0.value0.value0, x2.value0.value0.value0.value1);
      }
      ;
      if (x2 instanceof Inr && (x2.value0 instanceof Inr && x2.value0.value0 instanceof Inr)) {
        return new PathSegmentError(x2.value0.value0.value0);
      }
      ;
      throw new Error("Failed pattern match at Game.Board.Path (line 62, column 1 - line 62, column 36): " + [x2.constructor.name]);
    },
    from: function(x2) {
      if (x2 instanceof LocationsAreNotAdjacent) {
        return new Inl(new Product(x2.value0, x2.value1));
      }
      ;
      if (x2 instanceof PathIsEmpty) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x2 instanceof WireInputEqualsOutput) {
        return new Inr(new Inr(new Inl(new Product(x2.value0, x2.value1))));
      }
      ;
      if (x2 instanceof PathSegmentError) {
        return new Inr(new Inr(new Inr(x2.value0)));
      }
      ;
      throw new Error("Failed pattern match at Game.Board.Path (line 62, column 1 - line 62, column 36): " + [x2.constructor.name]);
    }
  };
  var showPathError = {
    show: /* @__PURE__ */ genericShow(genericPathError_)(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsProduct(genericShowArgsArgument3)(genericShowArgsArgument3))({
      reflectSymbol: function() {
        return "LocationsAreNotAdjacent";
      }
    }))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(genericShowArgsNoArguments)({
      reflectSymbol: function() {
        return "PathIsEmpty";
      }
    }))(/* @__PURE__ */ genericShowSum(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsProduct(genericShowArgsArgument1)(genericShowArgsArgument1))({
      reflectSymbol: function() {
        return "WireInputEqualsOutput";
      }
    }))(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(showPathSegmentError))({
      reflectSymbol: function() {
        return "PathSegmentError";
      }
    })))))
  };
  var show29 = /* @__PURE__ */ show(showPathError);
  var updateEndPoints = function(dictMonadState) {
    var bind118 = bind(dictMonadState.Monad0().Bind1());
    var toRelativeEdge2 = toRelativeEdge(dictMonadState);
    var adjacentRelativeEdge2 = adjacentRelativeEdge(dictMonadState);
    var globRelEdge2 = globRelEdge(dictMonadState);
    return function(path3) {
      return bind118(bind118(toRelativeEdge2(absolute(path3.start)(path3.initial)))(adjacentRelativeEdge2))(function(headAdj) {
        return globRelEdge2(headAdj)(new Just(Input.value));
      });
    };
  };
  var toPath = function(initial) {
    return function(locations) {
      return function(terminal) {
        var directionTo$prime = function(curr) {
          return function(prev) {
            return note(new LocationsAreNotAdjacent(curr, prev))(directionTo(curr)(prev));
          };
        };
        return bind24(note(PathIsEmpty.value)(uncons2(locations)))(function(v2) {
          return bind24(zipWithA2(directionTo$prime)(locations)(v2.tail))(function(segments) {
            return pure21({
              initial,
              start: v2.head,
              segments,
              terminal
            });
          });
        });
      };
    };
  };
  var partitionPath = function(v2) {
    var v1 = uncons2(v2.segments);
    if (v1 instanceof Nothing) {
      return lmap4(PathSegmentError.create)(map49(singleton6(v2.start))(singlePath(v2.initial)(v2.terminal)));
    }
    ;
    if (v1 instanceof Just) {
      return bind24(lmap4(PathSegmentError.create)(singlePath(v2.initial)(v1.value0.head)))(function(segment2) {
        var path$prime = {
          initial: oppositeDirection(v1.value0.head),
          start: followDirection(v2.start)(v1.value0.head),
          segments: v1.value0.tail,
          terminal: v2.terminal
        };
        return map49(insert11(v2.start)(segment2))(partitionPath(path$prime));
      });
    }
    ;
    throw new Error("Failed pattern match at Game.Board.Path (line 90, column 3 - line 99, column 53): " + [v1.constructor.name]);
  };
  var liftBoardError = function(dictMonadError) {
    var $160 = liftEither(dictMonadError.MonadThrow0());
    var $161 = lmap4(function($163) {
      return Other.create(show29($163));
    });
    return function($162) {
      return $160($161($162));
    };
  };
  var addPathToBoard = function(dictMonadState) {
    var use3 = use(dictMonadState);
    return function(dictMonadError) {
      var Monad0 = dictMonadError.MonadThrow0().Monad0();
      var Bind1 = Monad0.Bind1();
      var bind118 = bind(Bind1);
      var liftBoardError1 = liftBoardError(dictMonadError);
      var Applicative0 = Monad0.Applicative0();
      var forWithIndex_3 = forWithIndex_(Applicative0)(foldableWithIndexMap);
      var discard111 = discard12(Bind1);
      var catchError2 = catchError(dictMonadError);
      var $$void12 = $$void(Bind1.Apply0().Functor0());
      var removePieceNoUpdate2 = removePieceNoUpdate(dictMonadError)(dictMonadState);
      var pure116 = pure(Applicative0);
      var addPieceNoUpdate2 = addPieceNoUpdate(dictMonadError)(dictMonadState);
      return function(path3) {
        return bind118(liftBoardError1(partitionPath(path3)))(function(pathSegments) {
          return forWithIndex_3(pathSegments)(function(loc) {
            return function(segment2) {
              return bind118(use3(function() {
                var $164 = at6(loc)(strongForget);
                return function($165) {
                  return _pieces6($164($165));
                };
              }()))(function(extant) {
                return bind118(liftBoardError1(lmap4(PathSegmentError.create)(combineSegmentWithExtant(segment2)(extant))))(function(v2) {
                  return discard111(catchError2($$void12(removePieceNoUpdate2(loc)))(function(v1) {
                    return pure116(unit);
                  }))(function() {
                    return addPieceNoUpdate2(loc)(v2.piece)(v2.rotation);
                  });
                });
              });
            };
          });
        });
      };
    };
  };
  var addPath = function(dictMonadState) {
    var addPathToBoard1 = addPathToBoard(dictMonadState);
    var updateEndPoints1 = updateEndPoints(dictMonadState);
    return function(dictMonadError) {
      var Monad0 = dictMonadError.MonadThrow0().Monad0();
      var Bind1 = Monad0.Bind1();
      var bind118 = bind(Bind1);
      var liftBoardError1 = liftBoardError(dictMonadError);
      var discard111 = discard12(Bind1);
      var addPathToBoard2 = addPathToBoard1(dictMonadError);
      var pure116 = pure(Monad0.Applicative0());
      return function(initialDir) {
        return function(locations) {
          return function(terminalDir) {
            return bind118(liftBoardError1(toPath(initialDir)(locations)(terminalDir)))(function(path3) {
              return discard111(addPathToBoard2(path3))(function() {
                return discard111(updateEndPoints1(path3))(function() {
                  return pure116(path3);
                });
              });
            });
          };
        };
      };
    };
  };

  // output/Web.DOM.NonElementParentNode/foreign.js
  function _getElementById(id4) {
    return function(node) {
      return function() {
        return node.getElementById(id4);
      };
    };
  }

  // output/Web.DOM.NonElementParentNode/index.js
  var map50 = /* @__PURE__ */ map(functorEffect);
  var getElementById = function(eid) {
    var $2 = map50(toMaybe);
    var $3 = _getElementById(eid);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.HTML.Event.DragEvent/index.js
  var toEvent2 = unsafeCoerce;

  // output/Web.UIEvent.MouseEvent.Extras/index.js
  var show30 = /* @__PURE__ */ show(showInt);
  var Primary = /* @__PURE__ */ function() {
    function Primary2() {
    }
    ;
    Primary2.value = new Primary2();
    return Primary2;
  }();
  var Secondary = /* @__PURE__ */ function() {
    function Secondary2() {
    }
    ;
    Secondary2.value = new Secondary2();
    return Secondary2;
  }();
  var Auxiliary = /* @__PURE__ */ function() {
    function Auxiliary2() {
    }
    ;
    Auxiliary2.value = new Auxiliary2();
    return Auxiliary2;
  }();
  var Button4 = /* @__PURE__ */ function() {
    function Button42() {
    }
    ;
    Button42.value = new Button42();
    return Button42;
  }();
  var Button5 = /* @__PURE__ */ function() {
    function Button52() {
    }
    ;
    Button52.value = new Button52();
    return Button52;
  }();
  var eqMouseButton = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Primary && y2 instanceof Primary) {
          return true;
        }
        ;
        if (x2 instanceof Secondary && y2 instanceof Secondary) {
          return true;
        }
        ;
        if (x2 instanceof Auxiliary && y2 instanceof Auxiliary) {
          return true;
        }
        ;
        if (x2 instanceof Button4 && y2 instanceof Button4) {
          return true;
        }
        ;
        if (x2 instanceof Button5 && y2 instanceof Button5) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var button4 = function(me) {
    var v2 = button3(me);
    if (v2 === 0) {
      return Primary.value;
    }
    ;
    if (v2 === 1) {
      return Auxiliary.value;
    }
    ;
    if (v2 === 2) {
      return Secondary.value;
    }
    ;
    if (v2 === 3) {
      return Button4.value;
    }
    ;
    if (v2 === 4) {
      return Button5.value;
    }
    ;
    return unsafeCrashWith("No such button " + show30(v2));
  };

  // output/Component.Board/index.js
  var $$for2 = /* @__PURE__ */ $$for(applicativeEffect)(traversableMaybe);
  var bind25 = /* @__PURE__ */ bind(bindMaybe);
  var bind111 = /* @__PURE__ */ bind(bindHalogenM);
  var use2 = /* @__PURE__ */ use(monadStateHalogenM);
  var _board2 = /* @__PURE__ */ _board(strongForget);
  var pure24 = /* @__PURE__ */ pure(applicativeHalogenM);
  var discard13 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var map51 = /* @__PURE__ */ map(functorHalogenM);
  var monadErrorStateT2 = /* @__PURE__ */ monadErrorStateT(/* @__PURE__ */ monadErrorExceptT(monadIdentity));
  var monadExceptT2 = /* @__PURE__ */ monadExceptT(monadIdentity);
  var monadStateStateT3 = /* @__PURE__ */ monadStateStateT(monadExceptT2);
  var addPiece2 = /* @__PURE__ */ addPiece(monadErrorStateT2)(monadStateStateT3);
  var headShake2 = /* @__PURE__ */ headShake(/* @__PURE__ */ monadAffHalogenM(monadAffAppM));
  var addPath2 = /* @__PURE__ */ addPath(monadStateStateT3)(monadErrorStateT2);
  var when5 = /* @__PURE__ */ when(applicativeHalogenM);
  var removePiece2 = /* @__PURE__ */ removePiece(monadErrorStateT2)(monadStateStateT3);
  var for_4 = /* @__PURE__ */ for_(applicativeHalogenM);
  var for_1 = /* @__PURE__ */ for_4(foldableEither);
  var rotatePieceBy2 = /* @__PURE__ */ rotatePieceBy(monadErrorStateT2)(monadStateStateT3);
  var gets3 = /* @__PURE__ */ gets(monadStateHalogenM);
  var map120 = /* @__PURE__ */ map(functorMaybe);
  var lift9 = /* @__PURE__ */ lift(monadTransHalogenM)(monadAppM);
  var debug3 = /* @__PURE__ */ debug(monadLoggerAppM);
  var showMap2 = /* @__PURE__ */ showMap(showCardinalDirection);
  var show31 = /* @__PURE__ */ show(/* @__PURE__ */ showMap2(showPort));
  var modify_4 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var forWithIndex_2 = /* @__PURE__ */ forWithIndex_(applicativeHalogenM)(foldableWithIndexMap);
  var assign3 = /* @__PURE__ */ assign(monadStateHalogenM);
  var _inputs2 = /* @__PURE__ */ _inputs(strongFn);
  var at7 = /* @__PURE__ */ at(/* @__PURE__ */ atMap(ordCardinalDirection));
  var ff2 = /* @__PURE__ */ ff(heytingAlgebraSignal);
  var map212 = /* @__PURE__ */ map(functorFn);
  var setBoardSize2 = /* @__PURE__ */ setBoardSize(monadStateStateT3)(monadErrorStateT2);
  var for_22 = /* @__PURE__ */ for_4(foldableMaybe);
  var bind26 = /* @__PURE__ */ bind(/* @__PURE__ */ bindStateT(monadExceptT2));
  var use1 = /* @__PURE__ */ use(monadStateStateT3);
  var _pieces7 = /* @__PURE__ */ _pieces(strongForget);
  var forWithIndex_1 = /* @__PURE__ */ forWithIndex_(/* @__PURE__ */ applicativeStateT(monadExceptT2))(foldableWithIndexMap);
  var monadEffectHalogenM2 = /* @__PURE__ */ monadEffectHalogenM(monadEffectAppM);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectHalogenM2);
  var $$void8 = /* @__PURE__ */ $$void(functorHalogenM);
  var map310 = /* @__PURE__ */ map(functorEmitter);
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindHalogenM);
  var bind32 = /* @__PURE__ */ bind(bindEffect);
  var mapFlipped5 = /* @__PURE__ */ mapFlipped(functorEffect);
  var traverse_7 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var show110 = /* @__PURE__ */ show(showLocation);
  var pieceDropped2 = /* @__PURE__ */ pieceDropped(monadStateStateT3)(monadErrorStateT2);
  var warn3 = /* @__PURE__ */ warn(monadLoggerAppM);
  var showRecord2 = /* @__PURE__ */ showRecord()();
  var show210 = /* @__PURE__ */ show(/* @__PURE__ */ showEither(showBoardError)(/* @__PURE__ */ showRecord2(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "piece";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "rotation";
    }
  })(showRotation))(showPiece))));
  var tell4 = /* @__PURE__ */ tell2()({
    reflectSymbol: function() {
      return "multimeter";
    }
  })(ordUnit);
  var capacityRipple2 = /* @__PURE__ */ capacityRipple(monadStateStateT3);
  var lookup17 = /* @__PURE__ */ lookup2(ordRelativeEdge);
  var pure111 = /* @__PURE__ */ pure(applicativeMaybe);
  var modifying2 = /* @__PURE__ */ modifying(monadStateHalogenM);
  var ix4 = /* @__PURE__ */ ix(/* @__PURE__ */ indexMap(ordCardinalDirection));
  var eq21 = /* @__PURE__ */ eq(eqSignal);
  var tt2 = /* @__PURE__ */ tt(heytingAlgebraSignal);
  var lookup18 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var append110 = /* @__PURE__ */ append(semigroupSignal);
  var one2 = /* @__PURE__ */ one(semiringSignal);
  var zero7 = /* @__PURE__ */ zero(semiringSignal);
  var sub13 = /* @__PURE__ */ sub(ringSignal);
  var fold7 = /* @__PURE__ */ fold(foldableMaybe)(monoidSignal);
  var bind42 = /* @__PURE__ */ bind(/* @__PURE__ */ bindMaybeT(monadHalogenM));
  var liftEffect1 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectMaybe(monadEffectHalogenM2));
  var modify_1 = /* @__PURE__ */ modify_2(/* @__PURE__ */ monadStateMaybeT(monadStateHalogenM));
  var notEq6 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(eqLocation));
  var appendModifying2 = /* @__PURE__ */ appendModifying(monadStateHalogenM)(semigroupArray);
  var _wireLocations2 = /* @__PURE__ */ _wireLocations(wanderFunction);
  var eq110 = /* @__PURE__ */ eq(eqMouseButton);
  var buildEvaluableBoard2 = /* @__PURE__ */ buildEvaluableBoard(monadErrorEither);
  var show32 = /* @__PURE__ */ show(showBoardError);
  var monadStateStateT1 = /* @__PURE__ */ monadStateStateT(monadIdentity);
  var evalWithPortInfo2 = /* @__PURE__ */ evalWithPortInfo(/* @__PURE__ */ monadReaderReaderT(/* @__PURE__ */ monadStateT(monadIdentity)))(/* @__PURE__ */ monadStateReaderT(monadStateStateT1));
  var union6 = /* @__PURE__ */ union2(ordString);
  var show42 = /* @__PURE__ */ show(/* @__PURE__ */ showMap2(showSignal));
  var foldrWithIndex2 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexMap);
  var insert13 = /* @__PURE__ */ insert(ordString);
  var show52 = /* @__PURE__ */ show(showRelativeEdge);
  var show62 = /* @__PURE__ */ show(/* @__PURE__ */ showRecord2(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "connected";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "port";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "signal";
    }
  })(showSignal))(showPort))(showBoolean)));
  var getBoardPortEdge3 = /* @__PURE__ */ getBoardPortEdge(monadStateStateT1);
  var getDirectionClicked = function(me) {
    return function(bb) {
      var v2 = new Tuple(toNumber(clientX(me)) - bb.left, toNumber(clientY(me)) - bb.top);
      var isTopOrRight = v2.value0 > v2.value1;
      var isTopOrLeft = v2.value0 + v2.value1 < bb.width;
      if (!isTopOrRight && !isTopOrLeft) {
        return Down.value;
      }
      ;
      if (!isTopOrRight && isTopOrLeft) {
        return Left2.value;
      }
      ;
      if (isTopOrRight && !isTopOrLeft) {
        return Right2.value;
      }
      ;
      if (isTopOrRight && isTopOrLeft) {
        return Up.value;
      }
      ;
      throw new Error("Failed pattern match at Component.Board (line 373, column 29 - line 377, column 31): " + [isTopOrRight.constructor.name, isTopOrLeft.constructor.name]);
    };
  };
  var boundingBoxFromMouseEvent = function(me) {
    return $$for2(bind25(target5(toEvent(me)))(fromEventTarget))(getBoundingClientRect);
  };
  var component6 = /* @__PURE__ */ function() {
    var $$eval3 = function() {
      var liftBoardM = function(boardM) {
        return bind111(use2(_board2))(function(board) {
          var v2 = runBoardM(boardM)(board);
          if (v2 instanceof Left) {
            return pure24(new Left(v2.value0));
          }
          ;
          if (v2 instanceof Right) {
            return discard13(handleAction(new SetBoard(v2.value0.value1)))(function() {
              return pure24(new Right(v2.value0.value0));
            });
          }
          ;
          throw new Error("Failed pattern match at Component.Board (line 359, column 9 - line 364, column 27): " + [v2.constructor.name]);
        });
      };
      var handleQuery = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2) {
          if (v2 instanceof GetBoard) {
            $tco_done = true;
            return map51(function($315) {
              return Just.create(v2.value0($315));
            })(use2(_board2));
          }
          ;
          if (v2 instanceof AddPiece) {
            $tco_done = true;
            return bind111(liftBoardM(addPiece2(v2.value0)(v2.value1)))(function(result) {
              return discard13(function() {
                if (result instanceof Left) {
                  return headShake2(selector(location3)(v2.value0));
                }
                ;
                if (result instanceof Right) {
                  return raise(new BoardEvent2(new AddPieceEvent(v2.value0, v2.value1)));
                }
                ;
                throw new Error("Failed pattern match at Component.Board (line 122, column 11 - line 124, column 70): " + [result.constructor.name]);
              }())(function() {
                return pure24(new Just(v2.value2(result)));
              });
            });
          }
          ;
          if (v2 instanceof AddPath) {
            $tco_done = true;
            return bind111(liftBoardM(addPath2(v2.value0)(v2.value1)(v2.value2)))(function(result) {
              return discard13(when5(isRight(result))(raise(new BoardEvent2(new AddPathEvent(v2.value0, v2.value1, v2.value2)))))(function() {
                return pure24(new Just(v2.value3(result)));
              });
            });
          }
          ;
          if (v2 instanceof RemovePiece) {
            $tco_done = true;
            return bind111(liftBoardM(removePiece2(v2.value0)))(function(result) {
              return discard13(for_1(result)(function(info4) {
                return raise(new BoardEvent2(new RemovePieceEvent(v2.value0, info4)));
              }))(function() {
                return pure24(new Just(v2.value1(result)));
              });
            });
          }
          ;
          if (v2 instanceof RotatePieceBy) {
            $tco_done = true;
            return bind111(liftBoardM(rotatePieceBy2(v2.value0)(v2.value1)))(function(result) {
              return pure24(new Just(v2.value2(result)));
            });
          }
          ;
          if (v2 instanceof GetMouseOverLocation) {
            $tco_done = true;
            return bind111(gets3(function(v1) {
              return v1.isMouseOverLocation;
            }))(function(maybeDst) {
              return pure24(map120(v2.value0)(maybeDst));
            });
          }
          ;
          if (v2 instanceof SetGoalPorts) {
            $tco_done = true;
            return discard13(lift9(debug3(tag("boardPorts")(show31(v2.value0)))("Set goal ports on board")))(function() {
              return discard13(modify_4(function(v1) {
                var $216 = {};
                for (var $217 in v1) {
                  if ({}.hasOwnProperty.call(v1, $217)) {
                    $216[$217] = v1[$217];
                  }
                  ;
                }
                ;
                $216.boardPorts = v2.value0;
                return $216;
              }))(function() {
                return discard13(forWithIndex_2(v2.value0)(function(dir2) {
                  return function(port2) {
                    return when5(isInput(port2))(assign3(function() {
                      var $316 = at7(dir2)(strongFn);
                      return function($317) {
                        return _inputs2($316($317));
                      };
                    }())(new Just(ff2)));
                  };
                }))(function() {
                  return discard13(handleAction(EvaluateBoard.value))(function() {
                    return pure24(new Just(v2.value1));
                  });
                });
              });
            });
          }
          ;
          if (v2 instanceof SetInputs) {
            $tco_done = true;
            return discard13(assign3(_inputs2)(v2.value0))(function() {
              return discard13(handleAction(EvaluateBoard.value))(function() {
                return map51(map212(Just.create)(v2.value1))(gets3(function(v1) {
                  return v1.outputs;
                }));
              });
            });
          }
          ;
          if (v2 instanceof SetBoardSize) {
            $tco_done = true;
            return bind111(liftBoardM(setBoardSize2(v2.value0)))(function(result) {
              return pure24(new Just(v2.value1(result)));
            });
          }
          ;
          if (v2 instanceof Undo) {
            $tco_done = true;
            return bind111(map51(moveLeft)(gets3(function(v1) {
              return v1.boardHistory;
            })))(function(maybeZipper) {
              return discard13(for_22(maybeZipper)(function(t2) {
                return discard13(modify_4(function(v1) {
                  var $225 = {};
                  for (var $226 in v1) {
                    if ({}.hasOwnProperty.call(v1, $226)) {
                      $225[$226] = v1[$226];
                    }
                    ;
                  }
                  ;
                  $225.boardHistory = t2;
                  return $225;
                }))(function() {
                  return handleAction(EvaluateBoard.value);
                });
              }))(function() {
                return pure24(new Just(v2.value0));
              });
            });
          }
          ;
          if (v2 instanceof Redo) {
            $tco_done = true;
            return bind111(map51(moveRight)(gets3(function(v1) {
              return v1.boardHistory;
            })))(function(maybeZipper) {
              return discard13(for_22(maybeZipper)(function(t2) {
                return discard13(modify_4(function(v1) {
                  var $229 = {};
                  for (var $230 in v1) {
                    if ({}.hasOwnProperty.call(v1, $230)) {
                      $229[$230] = v1[$230];
                    }
                    ;
                  }
                  ;
                  $229.boardHistory = t2;
                  return $229;
                }))(function() {
                  return handleAction(EvaluateBoard.value);
                });
              }))(function() {
                return pure24(new Just(v2.value0));
              });
            });
          }
          ;
          if (v2 instanceof Clear) {
            $tco_done = true;
            return bind111(liftBoardM(bind26(use1(_pieces7))(function(pieces) {
              return forWithIndex_1(pieces)(function(loc) {
                return function(v1) {
                  return removePiece2(loc);
                };
              });
            })))(function() {
              return pure24(new Just(v2.value0));
            });
          }
          ;
          if (v2 instanceof RunTestCase) {
            $copy_v = new SetInputs(v2.value0.inputs, function(received) {
              return v2.value1(testCaseOutcome({
                inputs: v2.value0.inputs,
                expected: v2.value0.expected
              })(received));
            });
            return;
          }
          ;
          throw new Error("Failed pattern match at Component.Board (line 116, column 21 - line 190, column 62): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      var handleAction = function(v2) {
        if (v2 instanceof Initialise) {
          return bind111(liftEffect4(globalKeyDownEventEmitter))(function(emitter) {
            return discard13($$void8(subscribe2(map310(GlobalOnKeyDown.create)(emitter))))(function() {
              return discard13(bindFlipped8(raise)(map51(NewBoardState.create)(use2(_board2))))(function() {
                return liftEffect4(function __do5() {
                  var parentNode3 = mapFlipped5(bind32(windowImpl)(document2))(toNonElementParentNode)();
                  return bind32(getElementById("board-component")(parentNode3))(traverse_7(function(element4) {
                    return setAttribute2("oncontextmenu")("return false;")(element4);
                  }))();
                });
              });
            });
          });
        }
        ;
        if (v2 instanceof PieceOutput && v2.value0 instanceof Rotated) {
          return $$void8(liftBoardM(rotatePieceBy2(v2.value0.value0)(v2.value0.value1)));
        }
        ;
        if (v2 instanceof PieceOutput && v2.value0 instanceof Dropped) {
          return discard13(lift9(debug3(empty2)("Piece dropped at " + show110(v2.value0.value0))))(function() {
            return bind111(gets3(function(v12) {
              return v12.isMouseOverLocation;
            }))(function(maybeDst) {
              return bind111(liftBoardM(pieceDropped2(v2.value0.value0)(maybeDst)))(function(result) {
                return when5(isLeft(result))(discard13(lift9(warn3(empty2)(show210(result))))(function() {
                  return headShake2(selector(location3)(v2.value0.value0));
                }));
              });
            });
          });
        }
        ;
        if (v2 instanceof PieceOutput && v2.value0 instanceof RemoveThis) {
          return bind111(liftBoardM(removePiece2(v2.value0.value0)))(function() {
            return pure24(unit);
          });
        }
        ;
        if (v2 instanceof PieceOutput && v2.value0 instanceof NewMultimeterFocus) {
          return tell4(slot5)(unit)(NewFocus.create(v2.value0.value0));
        }
        ;
        if (v2 instanceof MultimeterOutput) {
          return discard13($$void8(liftBoardM(capacityRipple2(v2.value0.value0)(v2.value0.value1))))(function() {
            return bind111(gets3(function(v12) {
              return v12.lastEvalWithPortInfo;
            }))(function(signals) {
              var focus3 = bind25(lookup17(v2.value0.value0)(signals))(function(info4) {
                return pure111({
                  info: info4,
                  relativeEdge: v2.value0.value0
                });
              });
              return tell4(slot5)(unit)(NewFocus.create(focus3));
            });
          });
        }
        ;
        if (v2 instanceof ToggleInput) {
          return discard13(modifying2(function() {
            var $318 = ix4(v2.value0)(strongFn)(choiceFn);
            return function($319) {
              return _inputs2($318($319));
            };
          }())(function(signal) {
            var $251 = eq21(signal)(ff2);
            if ($251) {
              return tt2;
            }
            ;
            return ff2;
          }))(function() {
            return handleAction(EvaluateBoard.value);
          });
        }
        ;
        if (v2 instanceof IncrementInput) {
          return discard13(bind111(gets3(function() {
            var $320 = lookup18(v2.value0);
            return function($321) {
              return $320(function(v12) {
                return v12.boardPorts;
              }($321));
            };
          }()))(traverse_12(function(port2) {
            return modifying2(function() {
              var $322 = ix4(v2.value0)(strongFn)(choiceFn);
              return function($323) {
                return _inputs2($322($323));
              };
            }())(function(signal) {
              var $253 = eq21(signal)(maxValue(portCapacity(port2)));
              if ($253) {
                return ff2;
              }
              ;
              return append110(signal)(one2);
            });
          })))(function() {
            return handleAction(EvaluateBoard.value);
          });
        }
        ;
        if (v2 instanceof DecrementInput) {
          return discard13(bind111(gets3(function() {
            var $324 = lookup18(v2.value0);
            return function($325) {
              return $324(function(v12) {
                return v12.boardPorts;
              }($325));
            };
          }()))(traverse_12(function(port2) {
            return modifying2(function() {
              var $326 = ix4(v2.value0)(strongFn)(choiceFn);
              return function($327) {
                return _inputs2($326($327));
              };
            }())(function(n) {
              var $255 = eq21(n)(zero7);
              if ($255) {
                return maxValue(portCapacity(port2));
              }
              ;
              return sub13(n)(one2);
            });
          })))(function() {
            return handleAction(EvaluateBoard.value);
          });
        }
        ;
        if (v2 instanceof SetOutputs) {
          return discard13(modify_4(function(v12) {
            var $257 = {};
            for (var $258 in v12) {
              if ({}.hasOwnProperty.call(v12, $258)) {
                $257[$258] = v12[$258];
              }
              ;
            }
            ;
            $257.outputs = v2.value0;
            return $257;
          }))(function() {
            return bind111(gets3(function(v12) {
              return v12.isMouseOverBoardPort;
            }))(traverse_12(function(dir2) {
              return tell4(slot5)(unit)(SetSignal.create(fold7(lookup18(dir2)(v2.value0))));
            }));
          });
        }
        ;
        if (v2 instanceof BoardOnDragExit) {
          return discard13(modify_4(function(v12) {
            var $261 = {};
            for (var $262 in v12) {
              if ({}.hasOwnProperty.call(v12, $262)) {
                $261[$262] = v12[$262];
              }
              ;
            }
            ;
            $261.isCreatingWire = Nothing.value;
            return $261;
          }))(function() {
            return lift9(debug3(empty2)("Cancelled wire creation"));
          });
        }
        ;
        if (v2 instanceof LocationOnMouseDown) {
          return $$void8(runMaybeT(bind42(pure24(target5(toEvent(v2.value1))))(function(eventTarget) {
            return bind42(pure24(fromEventTarget(eventTarget)))(function(element4) {
              return bind42(liftEffect1(getBoundingClientRect(element4)))(function(bb) {
                var initialDirection = getDirectionClicked(v2.value1)(bb);
                return modify_1(function(v12) {
                  var $265 = {};
                  for (var $266 in v12) {
                    if ({}.hasOwnProperty.call(v12, $266)) {
                      $265[$266] = v12[$266];
                    }
                    ;
                  }
                  ;
                  $265.isCreatingWire = new Just({
                    initialDirection,
                    locations: [v2.value0]
                  });
                  return $265;
                });
              });
            });
          })));
        }
        ;
        if (v2 instanceof LocationOnMouseOver) {
          return bind111(gets3(function(v12) {
            return v12.isCreatingWire;
          }))(traverse_12(function(creatingWire) {
            return when5(notEq6(last2(creatingWire.locations))(new Just(v2.value0)))(appendModifying2(_wireLocations2)([v2.value0]));
          }));
        }
        ;
        if (v2 instanceof LocationOnMouseUp) {
          return when5(eq110(button4(v2.value1))(Primary.value))(bind111(gets3(function(v12) {
            return v12.isCreatingWire;
          }))(traverse_12(function(v12) {
            return bind111(liftEffect4(boundingBoxFromMouseEvent(v2.value1)))(traverse_12(function(bb) {
              var terminal = getDirectionClicked(v2.value1)(bb);
              return handleQuery(new AddPath(v12.initialDirection, v12.locations, terminal, function(v22) {
                return unit;
              }));
            }));
          })));
        }
        ;
        if (v2 instanceof SetBoard) {
          return discard13(lift9(debug3(empty2)("Updating board")))(function() {
            return discard13(modify_4(function(s2) {
              var $277 = {};
              for (var $278 in s2) {
                if ({}.hasOwnProperty.call(s2, $278)) {
                  $277[$278] = s2[$278];
                }
                ;
              }
              ;
              $277.boardHistory = append11(v2.value0)(s2.boardHistory);
              return $277;
            }))(function() {
              return discard13(handleAction(EvaluateBoard.value))(function() {
                return raise(new NewBoardState(v2.value0));
              });
            });
          });
        }
        ;
        if (v2 instanceof EvaluateBoard) {
          return bind111(gets3(function(v12) {
            return v12.boardPorts;
          }))(function(boardPorts) {
            return bind111(gets3(function(v12) {
              return v12.inputs;
            }))(function(inputs) {
              return bind111(map51(buildEvaluableBoard2(boardPorts))(use2(_board2)))(function(eitherEvaluable) {
                if (eitherEvaluable instanceof Left) {
                  return lift9(warn3(empty2)("Unable to build EvaluableBoard, BoardError: " + show32(eitherEvaluable.value0)));
                }
                ;
                if (eitherEvaluable instanceof Right) {
                  var v12 = runEvaluableM(eitherEvaluable.value0)(evalWithPortInfo2(inputs));
                  return discard13(lift9(debug3(union6(tag("inputs")(show42(inputs)))(tag("outputs")(show42(v12.value0))))("Evaluating board")))(function() {
                    return discard13(lift9(debug3(foldrWithIndex2(function(relEdge) {
                      return function(info4) {
                        return insert13(show52(relEdge))(new StringTag(show62(info4)));
                      };
                    })(empty2)(v12.value1))("Signals from tryboard eval")))(function() {
                      return discard13(modify_4(function(v22) {
                        var $284 = {};
                        for (var $285 in v22) {
                          if ({}.hasOwnProperty.call(v22, $285)) {
                            $284[$285] = v22[$285];
                          }
                          ;
                        }
                        ;
                        $284.lastEvalWithPortInfo = v12.value1;
                        return $284;
                      }))(function() {
                        return handleAction(new SetOutputs(v12.value0));
                      });
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Component.Board (line 294, column 11 - line 305, column 48): " + [eitherEvaluable.constructor.name]);
              });
            });
          });
        }
        ;
        if (v2 instanceof LocationOnDragEnter) {
          return discard13(liftEffect4(preventDefault(toEvent2(v2.value1))))(function() {
            return modify_4(function(v12) {
              var $290 = {};
              for (var $291 in v12) {
                if ({}.hasOwnProperty.call(v12, $291)) {
                  $290[$291] = v12[$291];
                }
                ;
              }
              ;
              $290.isMouseOverLocation = new Just(v2.value0);
              return $290;
            });
          });
        }
        ;
        if (v2 instanceof LocationOnDragOver) {
          return liftEffect4(preventDefault(toEvent2(v2.value1)));
        }
        ;
        if (v2 instanceof LocationOnDrop) {
          return discard13(modify_4(function(v12) {
            var $297 = {};
            for (var $298 in v12) {
              if ({}.hasOwnProperty.call(v12, $298)) {
                $297[$298] = v12[$298];
              }
              ;
            }
            ;
            $297.isMouseOverLocation = new Just(v2.value0);
            return $297;
          }))(function() {
            return liftEffect4(preventDefault(toEvent2(v2.value1)));
          });
        }
        ;
        if (v2 instanceof LocationOnDragLeave) {
          return modify_4(function(v12) {
            var $302 = {};
            for (var $303 in v12) {
              if ({}.hasOwnProperty.call(v12, $303)) {
                $302[$303] = v12[$303];
              }
              ;
            }
            ;
            $302.isMouseOverLocation = Nothing.value;
            return $302;
          });
        }
        ;
        if (v2 instanceof GlobalOnKeyDown) {
          var v1 = key(v2.value0);
          if (v1 === "z") {
            return when5(ctrlKey(v2.value0))($$void8(handleQuery(new Undo(unit))));
          }
          ;
          if (v1 === "y") {
            return when5(ctrlKey(v2.value0))($$void8(handleQuery(new Redo(unit))));
          }
          ;
          if (v1 === "e") {
            return bind111(gets3(function(v22) {
              return v22.isMouseOverBoardPort;
            }))(traverse_12(function(dir2) {
              return handleAction(new IncrementInput(dir2));
            }));
          }
          ;
          if (v1 === "E") {
            return bind111(gets3(function(v22) {
              return v22.isMouseOverBoardPort;
            }))(traverse_12(function(dir2) {
              return handleAction(new DecrementInput(dir2));
            }));
          }
          ;
          return pure24(unit);
        }
        ;
        if (v2 instanceof BoardPortOnMouseEnter) {
          return discard13(modify_4(function(v12) {
            var $308 = {};
            for (var $309 in v12) {
              if ({}.hasOwnProperty.call(v12, $309)) {
                $308[$309] = v12[$309];
              }
              ;
            }
            ;
            $308.isMouseOverBoardPort = new Just(v2.value0);
            return $308;
          }))(function() {
            return bind111(map51(evalState(getBoardPortEdge3(v2.value0)))(use2(_board2)))(function(relativeEdge) {
              return bind111(gets3(function(v12) {
                return v12.lastEvalWithPortInfo;
              }))(function(signals) {
                var focus3 = map120(function(v12) {
                  return {
                    info: v12,
                    relativeEdge
                  };
                })(lookup17(relativeEdge)(signals));
                return tell4(slot5)(unit)(NewFocus.create(focus3));
              });
            });
          });
        }
        ;
        if (v2 instanceof BoardPortOnMouseLeave) {
          return discard13(modify_4(function(v12) {
            var $312 = {};
            for (var $313 in v12) {
              if ({}.hasOwnProperty.call(v12, $313)) {
                $312[$313] = v12[$313];
              }
              ;
            }
            ;
            $312.isMouseOverBoardPort = Nothing.value;
            return $312;
          }))(function() {
            return tell4(slot5)(unit)(NewFocus.create(Nothing.value));
          });
        }
        ;
        throw new Error("Failed pattern match at Component.Board (line 194, column 22 - line 351, column 66): " + [v2.constructor.name]);
      };
      return mkEval({
        finalize: Nothing.value,
        handleAction,
        handleQuery,
        initialize: new Just(Initialise.value),
        receive: function(v2) {
          return Nothing.value;
        }
      });
    }();
    return mkComponent({
      "eval": $$eval3,
      initialState,
      render
    });
  }();

  // output/Component.Demonstration/index.js
  var discard14 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_5 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var pure25 = /* @__PURE__ */ pure(applicativeHalogenM);
  var OpenDemonstration = /* @__PURE__ */ function() {
    function OpenDemonstration2(value0) {
      this.value0 = value0;
    }
    ;
    OpenDemonstration2.create = function(value0) {
      return new OpenDemonstration2(value0);
    };
    return OpenDemonstration2;
  }();
  var CloseDemonstration = /* @__PURE__ */ function() {
    function CloseDemonstration2(value0) {
      this.value0 = value0;
    }
    ;
    CloseDemonstration2.create = function(value0) {
      return new CloseDemonstration2(value0);
    };
    return CloseDemonstration2;
  }();
  var CloseButton = /* @__PURE__ */ function() {
    function CloseButton2() {
    }
    ;
    CloseButton2.value = new CloseButton2();
    return CloseButton2;
  }();
  var slot6 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var component7 = function(dictMonadAff) {
    var render6 = function(state3) {
      if (state3.isShowing) {
        return div5([id2("demonstration-component")])([div_([h2_([text(state3.demonstration.title)]), fromPlainHTML(state3.demonstration.html), button2([onClick(function(v2) {
          return CloseButton.value;
        })])([text("Close demonstration")])]), div5([class_("parchment")])([])]);
      }
      ;
      return text("");
    };
    var initialState5 = function(demonstration) {
      return {
        demonstration,
        isShowing: false
      };
    };
    var $$eval3 = mkEval({
      receive: defaultEval.receive,
      initialize: defaultEval.initialize,
      finalize: defaultEval.finalize,
      handleQuery: function(v1) {
        if (v1 instanceof OpenDemonstration) {
          return discard14(modify_5(function(v2) {
            var $14 = {};
            for (var $15 in v2) {
              if ({}.hasOwnProperty.call(v2, $15)) {
                $14[$15] = v2[$15];
              }
              ;
            }
            ;
            $14.isShowing = true;
            return $14;
          }))(function() {
            return pure25(new Just(v1.value0));
          });
        }
        ;
        if (v1 instanceof CloseDemonstration) {
          return discard14(modify_5(function(v2) {
            var $18 = {};
            for (var $19 in v2) {
              if ({}.hasOwnProperty.call(v2, $19)) {
                $18[$19] = v2[$19];
              }
              ;
            }
            ;
            $18.isShowing = false;
            return $18;
          }))(function() {
            return pure25(new Just(v1.value0));
          });
        }
        ;
        throw new Error("Failed pattern match at Component.Demonstration (line 37, column 23 - line 43, column 27): " + [v1.constructor.name]);
      },
      handleAction: function(v1) {
        return modify_5(function(v2) {
          var $23 = {};
          for (var $24 in v2) {
            if ({}.hasOwnProperty.call(v2, $24)) {
              $23[$24] = v2[$24];
            }
            ;
          }
          ;
          $23.isShowing = false;
          return $23;
        });
      }
    });
    return mkComponent({
      initialState: initialState5,
      "eval": $$eval3,
      render: render6
    });
  };

  // output/Component.Marginalium/index.js
  var TriggerNext = /* @__PURE__ */ function() {
    function TriggerNext2(value0) {
      this.value0 = value0;
    }
    ;
    TriggerNext2.create = function(value0) {
      return new TriggerNext2(value0);
    };
    return TriggerNext2;
  }();
  var RemoveThis2 = /* @__PURE__ */ function() {
    function RemoveThis3(value0) {
      this.value0 = value0;
    }
    ;
    RemoveThis3.create = function(value0) {
      return new RemoveThis3(value0);
    };
    return RemoveThis3;
  }();

  // output/Halogen.HTML.Extras/index.js
  var bimap5 = /* @__PURE__ */ bimap(bifunctorHTML);
  var map52 = /* @__PURE__ */ map(functorComponentSlot);
  var mapActionOverHTML = function(f) {
    return bimap5(map52(f))(f);
  };

  // output/Component.Selector/index.js
  var show33 = /* @__PURE__ */ show(showPieceId);
  var map53 = /* @__PURE__ */ map(functorArray);
  var fromFoldable15 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var pure26 = /* @__PURE__ */ pure(applicativeHalogenM);
  var AddPiece2 = /* @__PURE__ */ function() {
    function AddPiece4(value0) {
      this.value0 = value0;
    }
    ;
    AddPiece4.create = function(value0) {
      return new AddPiece4(value0);
    };
    return AddPiece4;
  }();
  var PieceDropped = /* @__PURE__ */ function() {
    function PieceDropped3(value0) {
      this.value0 = value0;
    }
    ;
    PieceDropped3.create = function(value0) {
      return new PieceDropped3(value0);
    };
    return PieceDropped3;
  }();
  var DoNothing = /* @__PURE__ */ function() {
    function DoNothing3() {
    }
    ;
    DoNothing3.value = new DoNothing3();
    return DoNothing3;
  }();
  var slot8 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var render2 = function(v2) {
    var renderAvailablePiece = function(piece) {
      var pieceState = initialState2({
        piece,
        location: location(0)(0),
        rotation: rotation(0),
        portStates: defaultPortInfo(piece)
      });
      var pieceId2 = name2(piece);
      return div5([attr3(availablePiece)(pieceId2), draggable2(true), classes(["available-piece"]), onDragEnd(function(v1) {
        return new PieceDropped(pieceId2);
      }), onClick(function(v1) {
        return new AddPiece2(pieceId2);
      })])([mapActionOverHTML(function(v1) {
        return DoNothing.value;
      })(renderPiece(pieceState)), text(show33(pieceId2))]);
    };
    var $12 = isEmpty2(v2.availablePieces);
    if ($12) {
      return text("");
    }
    ;
    return div5([id2("selector-component")])([span4([class_("pieces")])(map53(renderAvailablePiece)(fromFoldable15(v2.availablePieces))), h2_([text("Available pieces")])]);
  };
  var $$eval2 = /* @__PURE__ */ function() {
    return mkEval({
      handleAction: function(action2) {
        return raise(action2);
      },
      handleQuery: function(v2) {
        return pure26(Nothing.value);
      },
      receive: function(v2) {
        return Nothing.value;
      },
      initialize: Nothing.value,
      finalize: Nothing.value
    });
  }();
  var component8 = /* @__PURE__ */ mkComponent({
    initialState: /* @__PURE__ */ identity(categoryFn),
    "eval": $$eval2,
    render: render2
  });

  // output/Component/index.js
  var toCssSelectorString = /* @__PURE__ */ function() {
    var $1 = replace(" ")("-");
    return function($2) {
      return toLower($1($2));
    };
  }();

  // output/Component.Sidebar.Segment/index.js
  var segment = function(className2) {
    return function(segmentTitle) {
      return function(html2) {
        return div5([class_(className2)])([h2_([segmentTitle]), html2]);
      };
    };
  };
  var segmentWithTitle = function(segmentTitle) {
    return function(html2) {
      return segment(toCssSelectorString(segmentTitle))(text(segmentTitle))(html2);
    };
  };

  // output/Component.Sidebar.BoardSizeSlider/index.js
  var bind27 = /* @__PURE__ */ bind(bindEffect);
  var pure27 = /* @__PURE__ */ pure(applicativeEffect);
  var bind112 = /* @__PURE__ */ bind(bindMaybe);
  var show34 = /* @__PURE__ */ show(showInt);
  var type_19 = /* @__PURE__ */ type_17(isPropInputType);
  var value13 = /* @__PURE__ */ value12(isPropString);
  var put3 = /* @__PURE__ */ put(monadStateHalogenM);
  var bind28 = /* @__PURE__ */ bind(bindHalogenM);
  var gets4 = /* @__PURE__ */ gets(monadStateHalogenM);
  var when6 = /* @__PURE__ */ when(applicativeHalogenM);
  var discard15 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_6 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var pure112 = /* @__PURE__ */ pure(applicativeHalogenM);
  var AmendBoardSizeSlider = /* @__PURE__ */ function() {
    function AmendBoardSizeSlider3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AmendBoardSizeSlider3.create = function(value0) {
      return function(value1) {
        return new AmendBoardSizeSlider3(value0, value1);
      };
    };
    return AmendBoardSizeSlider3;
  }();
  var BoardSizeChange = /* @__PURE__ */ function() {
    function BoardSizeChange2(value0) {
      this.value0 = value0;
    }
    ;
    BoardSizeChange2.create = function(value0) {
      return new BoardSizeChange2(value0);
    };
    return BoardSizeChange2;
  }();
  var Initialise2 = /* @__PURE__ */ function() {
    function Initialise6(value0) {
      this.value0 = value0;
    }
    ;
    Initialise6.create = function(value0) {
      return new Initialise6(value0);
    };
    return Initialise6;
  }();
  var InputRangeChange = /* @__PURE__ */ function() {
    function InputRangeChange2() {
    }
    ;
    InputRangeChange2.value = new InputRangeChange2();
    return InputRangeChange2;
  }();
  var InputRangeMouseUp = /* @__PURE__ */ function() {
    function InputRangeMouseUp2() {
    }
    ;
    InputRangeMouseUp2.value = new InputRangeMouseUp2();
    return InputRangeMouseUp2;
  }();
  var slot9 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var inputRange = function __do3() {
    var htmlDocument = bind27(windowImpl)(document2)();
    var parentNode3 = toParentNode(htmlDocument);
    var maybeElement = querySelector("#sidebar-component .board-size input")(parentNode3)();
    return maybe$prime(function(v2) {
      return $$throw("couldn't find board size input element");
    })(pure27)(bind112(maybeElement)(fromElement2))();
  };
  var setValue12 = function(boardSize) {
    return bind27(inputRange)(setValueAsNumber(toNumber(boardSize)));
  };
  var getValue = function __do4() {
    var value1 = bind27(inputRange)(valueAsNumber)();
    return floor2(value1);
  };
  var component9 = function(dictMonadAff) {
    var liftEffect11 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    var headShake4 = headShake(monadAffHalogenM(dictMonadAff));
    var render6 = function(state3) {
      var title4 = text("Board size: " + show34(state3.boardSize));
      var html2 = span_([input([type_19(InputRange.value), list("values"), min5(3), max6(9), step3(new Step(2)), value13(show34(state3.boardSize)), onInput($$const(InputRangeChange.value)), onMouseUp($$const(InputRangeMouseUp.value))]), datalist([id2("values")])([option([value13("3")])([]), option([value13("5")])([]), option([value13("7")])([]), option([value13("9")])([])])]);
      return segment("board-size")(title4)(html2);
    };
    var $$eval3 = function() {
      var handleAction = function(v2) {
        if (v2 instanceof Initialise2) {
          return put3(v2.value0);
        }
        ;
        if (v2 instanceof InputRangeChange) {
          return bind28(liftEffect11(getValue))(function(boardSize) {
            return raise(new BoardSizeChange({
              boardSize
            }));
          });
        }
        ;
        if (v2 instanceof InputRangeMouseUp) {
          return bind28(liftEffect11(getValue))(function(sliderValue) {
            return bind28(gets4(function(v1) {
              return v1.boardSize;
            }))(function(boardSize) {
              return when6(sliderValue !== boardSize)(discard15(liftEffect11(setValue12(boardSize)))(function() {
                return headShake4("#sidebar-component .board-size h2");
              }));
            });
          });
        }
        ;
        throw new Error("Failed pattern match at Component.Sidebar.BoardSizeSlider (line 61, column 24 - line 71, column 76): " + [v2.constructor.name]);
      };
      return mkEval({
        finalize: Nothing.value,
        handleAction,
        handleQuery: function(v2) {
          return discard15(modify_6(function(v1) {
            var $32 = {};
            for (var $33 in v1) {
              if ({}.hasOwnProperty.call(v1, $33)) {
                $32[$33] = v1[$33];
              }
              ;
            }
            ;
            $32.boardSize = v2.value0;
            return $32;
          }))(function() {
            return discard15(handleAction(InputRangeMouseUp.value))(function() {
              return pure112(new Just(v2.value1));
            });
          });
        },
        initialize: Nothing.value,
        receive: function($37) {
          return Just.create(Initialise2.create($37));
        }
      });
    }();
    return mkComponent({
      "eval": $$eval3,
      initialState: identity(categoryFn),
      render: render6
    });
  };

  // output/Component.Sidebar.Types/index.js
  var AmendBoardSizeSlider2 = /* @__PURE__ */ function() {
    function AmendBoardSizeSlider3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AmendBoardSizeSlider3.create = function(value0) {
      return function(value1) {
        return new AmendBoardSizeSlider3(value0, value1);
      };
    };
    return AmendBoardSizeSlider3;
  }();
  var TestCaseResponse = /* @__PURE__ */ function() {
    function TestCaseResponse2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TestCaseResponse2.create = function(value0) {
      return function(value1) {
        return new TestCaseResponse2(value0, value1);
      };
    };
    return TestCaseResponse2;
  }();
  var BoardSize = /* @__PURE__ */ function() {
    function BoardSize2(value0) {
      this.value0 = value0;
    }
    ;
    BoardSize2.create = function(value0) {
      return new BoardSize2(value0);
    };
    return BoardSize2;
  }();
  var AddPiece3 = /* @__PURE__ */ function() {
    function AddPiece4(value0) {
      this.value0 = value0;
    }
    ;
    AddPiece4.create = function(value0) {
      return new AddPiece4(value0);
    };
    return AddPiece4;
  }();
  var BackToLevelSelect = /* @__PURE__ */ function() {
    function BackToLevelSelect2() {
    }
    ;
    BackToLevelSelect2.value = new BackToLevelSelect2();
    return BackToLevelSelect2;
  }();
  var Undo2 = /* @__PURE__ */ function() {
    function Undo3() {
    }
    ;
    Undo3.value = new Undo3();
    return Undo3;
  }();
  var Redo2 = /* @__PURE__ */ function() {
    function Redo3() {
    }
    ;
    Redo3.value = new Redo3();
    return Redo3;
  }();
  var RunTests = /* @__PURE__ */ function() {
    function RunTests2() {
    }
    ;
    RunTests2.value = new RunTests2();
    return RunTests2;
  }();
  var Clear2 = /* @__PURE__ */ function() {
    function Clear3() {
    }
    ;
    Clear3.value = new Clear3();
    return Clear3;
  }();
  var Base = /* @__PURE__ */ function() {
    function Base2(value0) {
      this.value0 = value0;
    }
    ;
    Base2.create = function(value0) {
      return new Base2(value0);
    };
    return Base2;
  }();
  var RunDemonstration = /* @__PURE__ */ function() {
    function RunDemonstration2() {
    }
    ;
    RunDemonstration2.value = new RunDemonstration2();
    return RunDemonstration2;
  }();
  var PieceDropped2 = /* @__PURE__ */ function() {
    function PieceDropped3(value0) {
      this.value0 = value0;
    }
    ;
    PieceDropped3.create = function(value0) {
      return new PieceDropped3(value0);
    };
    return PieceDropped3;
  }();
  var ButtonOutput = /* @__PURE__ */ function() {
    function ButtonOutput2(value0) {
      this.value0 = value0;
    }
    ;
    ButtonOutput2.create = function(value0) {
      return new ButtonOutput2(value0);
    };
    return ButtonOutput2;
  }();
  var InputFieldOutput = /* @__PURE__ */ function() {
    function InputFieldOutput2(value0) {
      this.value0 = value0;
    }
    ;
    InputFieldOutput2.create = function(value0) {
      return new InputFieldOutput2(value0);
    };
    return InputFieldOutput2;
  }();
  var TestRunnerOutput = /* @__PURE__ */ function() {
    function TestRunnerOutput2(value0) {
      this.value0 = value0;
    }
    ;
    TestRunnerOutput2.create = function(value0) {
      return new TestRunnerOutput2(value0);
    };
    return TestRunnerOutput2;
  }();
  var Initialise3 = /* @__PURE__ */ function() {
    function Initialise6(value0) {
      this.value0 = value0;
    }
    ;
    Initialise6.create = function(value0) {
      return new Initialise6(value0);
    };
    return Initialise6;
  }();
  var PieceOnDrop = /* @__PURE__ */ function() {
    function PieceOnDrop2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    PieceOnDrop2.create = function(value0) {
      return function(value1) {
        return new PieceOnDrop2(value0, value1);
      };
    };
    return PieceOnDrop2;
  }();
  var ButtonClicked = /* @__PURE__ */ function() {
    function ButtonClicked2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ButtonClicked2.create = function(value0) {
      return function(value1) {
        return new ButtonClicked2(value0, value1);
      };
    };
    return ButtonClicked2;
  }();
  var BoardSizeSliderAction = /* @__PURE__ */ function() {
    function BoardSizeSliderAction2(value0) {
      this.value0 = value0;
    }
    ;
    BoardSizeSliderAction2.create = function(value0) {
      return new BoardSizeSliderAction2(value0);
    };
    return BoardSizeSliderAction2;
  }();
  var TestRunnerAction = /* @__PURE__ */ function() {
    function TestRunnerAction2(value0) {
      this.value0 = value0;
    }
    ;
    TestRunnerAction2.create = function(value0) {
      return new TestRunnerAction2(value0);
    };
    return TestRunnerAction2;
  }();
  var DoNothing2 = /* @__PURE__ */ function() {
    function DoNothing3() {
    }
    ;
    DoNothing3.value = new DoNothing3();
    return DoNothing3;
  }();
  var slot10 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var initialState3 = /* @__PURE__ */ identity(categoryFn);

  // output/Component.TestRunner.Types/index.js
  var map54 = /* @__PURE__ */ map(functorArray);
  var fromFoldable16 = /* @__PURE__ */ fromFoldable3(foldableNonEmptyArray);
  var map121 = /* @__PURE__ */ map(functorNonEmptyArray);
  var bind29 = /* @__PURE__ */ bind(bindMaybe);
  var pure28 = /* @__PURE__ */ pure(applicativeMaybe);
  var TestCaseOutcome = /* @__PURE__ */ function() {
    function TestCaseOutcome2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TestCaseOutcome2.create = function(value0) {
      return function(value1) {
        return new TestCaseOutcome2(value0, value1);
      };
    };
    return TestCaseOutcome2;
  }();
  var TestCaseData = /* @__PURE__ */ function() {
    function TestCaseData2(value0) {
      this.value0 = value0;
    }
    ;
    TestCaseData2.create = function(value0) {
      return new TestCaseData2(value0);
    };
    return TestCaseData2;
  }();
  var AllTestsPassed = /* @__PURE__ */ function() {
    function AllTestsPassed2() {
    }
    ;
    AllTestsPassed2.value = new AllTestsPassed2();
    return AllTestsPassed2;
  }();
  var Receive3 = /* @__PURE__ */ function() {
    function Receive4(value0) {
      this.value0 = value0;
    }
    ;
    Receive4.create = function(value0) {
      return new Receive4(value0);
    };
    return Receive4;
  }();
  var RunCurrentTest = /* @__PURE__ */ function() {
    function RunCurrentTest2() {
    }
    ;
    RunCurrentTest2.value = new RunCurrentTest2();
    return RunCurrentTest2;
  }();
  var RunAllTests = /* @__PURE__ */ function() {
    function RunAllTests2() {
    }
    ;
    RunAllTests2.value = new RunAllTests2();
    return RunAllTests2;
  }();
  var slot11 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var resetTestRunner = function(state3) {
    return {
      base: state3.base,
      model: state3.model,
      testCases: map54(function(v1) {
        return {
          data: v1.data,
          status: NotStarted2.value
        };
      })(state3.testCases),
      currentIndex: 0,
      testSuiteFailed: false
    };
  };
  var maxRows = 5;
  var initialState4 = function(v2) {
    var testCases = fromFoldable16(flip(map121)(v2.inputs)(function(i2) {
      return {
        data: {
          inputs: i2,
          expected: $$eval(v2.model)(i2)
        },
        status: NotStarted2.value
      };
    }));
    return {
      base: v2.base,
      model: v2.model,
      testCases,
      currentIndex: 0,
      testSuiteFailed: false
    };
  };
  var delayBetweenTests = 1e3;
  var currentTestCase = function(state3) {
    return index2(state3.testCases)(state3.currentIndex);
  };
  var _currentTestCase = function(dictStrong) {
    return lens(currentTestCase)(function(s2) {
      return function(maybeTestCase) {
        return fromMaybe(s2)(bind29(maybeTestCase)(function(testCase) {
          return bind29(updateAt2(s2.currentIndex)(testCase)(s2.testCases))(function(testCases) {
            return pure28({
              base: s2.base,
              currentIndex: s2.currentIndex,
              model: s2.model,
              testSuiteFailed: s2.testSuiteFailed,
              testCases
            });
          });
        }));
      };
    })(dictStrong);
  };

  // output/Component.TestRunner.Render/index.js
  var show35 = /* @__PURE__ */ show(showInt);
  var pure29 = /* @__PURE__ */ pure(applicativeArray);
  var lookup19 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var fromFoldable17 = /* @__PURE__ */ fromFoldable3(foldableMap);
  var mapWithIndex4 = /* @__PURE__ */ mapWithIndex(functorWithIndexMap);
  var join5 = /* @__PURE__ */ join(bindArray);
  var min6 = /* @__PURE__ */ min(ordInt);
  var length12 = /* @__PURE__ */ length(foldableArray)(semiringInt);
  var max7 = /* @__PURE__ */ max(ordInt);
  var fromFoldable18 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var mapWithIndex1 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var fromFoldable24 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var mapFlipped6 = /* @__PURE__ */ mapFlipped(functorArray);
  var append111 = /* @__PURE__ */ append(semigroupArray);
  var map55 = /* @__PURE__ */ map(functorArray);
  var show111 = /* @__PURE__ */ show(showCardinalDirection);
  var eq111 = /* @__PURE__ */ eq(eqTestCaseStatus);
  var render3 = function(state3) {
    var renderRunCurrentTestButton = function() {
      if (state3.testSuiteFailed) {
        return button2([onClick(function(v2) {
          return RunCurrentTest.value;
        })])([text("Rerun test " + show35(state3.currentIndex + 1 | 0))]);
      }
      ;
      return text("");
    }();
    var renderRunAllTestsButton = function() {
      var $30 = state3.currentIndex === 0 && !state3.testSuiteFailed;
      if ($30) {
        return button2([onClick(function(v2) {
          return RunAllTests.value;
        })])([text("Run tests")]);
      }
      ;
      return text("");
    }();
    var renderRow = function(testIndex) {
      return function(testCase) {
        var renderStatus = td_(pure29(function() {
          if (testCase.status instanceof NotStarted2) {
            return text("");
          }
          ;
          if (testCase.status instanceof InProgress) {
            return text("Running");
          }
          ;
          if (testCase.status instanceof Completed3 && testCase.status.value0 instanceof Passed) {
            return text("Passed");
          }
          ;
          if (testCase.status instanceof Completed3 && testCase.status.value0 instanceof Failed) {
            return text("Failed");
          }
          ;
          throw new Error("Failed pattern match at Component.TestRunner.Render (line 143, column 42 - line 147, column 69): " + [testCase.status.constructor.name]);
        }()));
        var ports = getPorts(state3.model);
        var rep = function(dir2) {
          return new SignalRepresentation(state3.base, maybe(EightBit.value)(portCapacity)(lookup19(dir2)(ports)));
        };
        var renderSignals = function(signals) {
          return fromFoldable17(flip(mapWithIndex4)(signals)(function(dir2) {
            return function(signal) {
              return td_([text(printSignal(rep(dir2))(signal))]);
            };
          }));
        };
        var renderExpected = renderSignals(testCase.data.expected);
        var renderInputs = renderSignals(testCase.data.inputs);
        var renderReceived = function() {
          var n = size(testCase.data.expected);
          if (testCase.status instanceof NotStarted2) {
            return replicate(n)(td_([text("")]));
          }
          ;
          if (testCase.status instanceof InProgress) {
            return replicate(n)(td_([text("-")]));
          }
          ;
          if (testCase.status instanceof Completed3 && testCase.status.value0 instanceof Passed) {
            return renderSignals(testCase.data.expected);
          }
          ;
          if (testCase.status instanceof Completed3 && testCase.status.value0 instanceof Failed) {
            return renderSignals(testCase.status.value0.value0.received);
          }
          ;
          throw new Error("Failed pattern match at Component.TestRunner.Render (line 135, column 26 - line 139, column 86): " + [testCase.status.constructor.name]);
        }();
        return tr([class_("test-case"), attr3(testCaseStatus)(testCase.status)])(join5([[td_([text(show35(testIndex + 1 | 0))])], renderInputs, renderExpected, renderReceived, [renderStatus]]));
      };
    };
    var renderRows = function() {
      var n = min6(maxRows)(length12(state3.testCases));
      var end3 = max7(n)(state3.currentIndex);
      var start2 = max7(0)(end3 - n | 0);
      var relevantTestCases = slice2(start2)(end3)(fromFoldable18(state3.testCases));
      return flip(mapWithIndex1)(relevantTestCases)(function(i2) {
        return function(testCase) {
          return renderRow(start2 + i2 | 0)(testCase);
        };
      });
    }();
    var renderRerunAllTests = function() {
      if (state3.testSuiteFailed) {
        return button2([onClick(function(v2) {
          return RunAllTests.value;
        })])([text("Retry tests")]);
      }
      ;
      return text("");
    }();
    var outputDirs = fromFoldable24(getOutputDirs(state3.model));
    var numOutputs = length4(outputDirs);
    var inputDirs = fromFoldable24(getInputDirs(state3.model));
    var numInputs = length4(inputDirs);
    var headers = function() {
      var subheaders = mapFlipped6(append111([""])(map55(show111)(append111(inputDirs)(append111(outputDirs)(outputDirs)))))(function(s2) {
        return th_([text(take4(1)(s2))]);
      });
      return thead_([tr_([th([class_("col-index")])([]), th([colSpan2(numInputs), class_("col-input")])([text("In")]), th([colSpan2(numOutputs), class_("col-expected")])([text("Ex.")]), th([colSpan2(numOutputs), class_("col-expected")])([text("Out")]), th([colSpan2(1), rowSpan2(2), class_("col-status")])([text("Status")])]), tr_(subheaders)]);
    }();
    var footers = function() {
      var testsPassed = length4(takeWhile2(function(testCase) {
        return eq111(testCase.status)(new Completed3(Passed.value));
      })(state3.testCases));
      return tfoot_([tr_([td([colSpan2((1 + numInputs | 0) + (2 * numOutputs | 0) | 0)])([text("Tests Complete:")]), td_([text(show35(testsPassed) + ("/" + show35(length4(state3.testCases))))])])]);
    }();
    var colgroup2 = colgroup_(join5([replicate(1)(col([class_("test-case-index")])), replicate(numInputs)(col([class_("test-case-input")])), replicate(numOutputs)(col([class_("test-case-expected")])), replicate(numOutputs)(col([class_("test-case-recieved")])), replicate(1)(col([class_("test-case-status")]))]));
    var buttons2 = span4([class_("buttons")])([renderRunAllTestsButton, renderRunCurrentTestButton, renderRerunAllTests]);
    var body2 = tbody_(renderRows);
    return div5([class_("test-runner")])([table_([colgroup2, headers, body2, footers]), buttons2]);
  };

  // output/Component.TestRunner/index.js
  var modify_7 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var discard16 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var whenM2 = /* @__PURE__ */ whenM(monadHalogenM);
  var gets5 = /* @__PURE__ */ gets(monadStateHalogenM);
  var bind30 = /* @__PURE__ */ bind(bindHalogenM);
  var modifying3 = /* @__PURE__ */ modifying(monadStateHalogenM);
  var _currentTestCase2 = /* @__PURE__ */ _currentTestCase(strongFn);
  var _Just2 = /* @__PURE__ */ _Just(choiceFn);
  var when7 = /* @__PURE__ */ when(applicativeHalogenM);
  var pure30 = /* @__PURE__ */ pure(applicativeHalogenM);
  var component10 = function(dictMonadAff) {
    var liftAff2 = liftAff(monadAffHalogenM(dictMonadAff));
    var handleAction = function(v2) {
      if (v2 instanceof Receive3) {
        return modify_7(function(v1) {
          var $30 = {};
          for (var $31 in v1) {
            if ({}.hasOwnProperty.call(v1, $31)) {
              $30[$31] = v1[$31];
            }
            ;
          }
          ;
          $30.base = v2.value0.base;
          return $30;
        });
      }
      ;
      if (v2 instanceof RunAllTests) {
        return discard16(whenM2(gets5(function(v1) {
          return v1.testSuiteFailed;
        }))(modify_7(resetTestRunner)))(function() {
          return handleAction(RunCurrentTest.value);
        });
      }
      ;
      if (v2 instanceof RunCurrentTest) {
        return bind30(gets5(currentTestCase))(function(v1) {
          if (v1 instanceof Nothing) {
            return raise(AllTestsPassed.value);
          }
          ;
          if (v1 instanceof Just) {
            return discard16(modifying3(function($49) {
              return _currentTestCase2(_Just2($49));
            })(function(v22) {
              return {
                data: v22.data,
                status: InProgress.value
              };
            }))(function() {
              return raise(new TestCaseData(v1.value0.data));
            });
          }
          ;
          throw new Error("Failed pattern match at Component.TestRunner (line 61, column 34 - line 65, column 49): " + [v1.constructor.name]);
        });
      }
      ;
      throw new Error("Failed pattern match at Component.TestRunner (line 51, column 20 - line 65, column 49): " + [v2.constructor.name]);
    };
    var handleQuery = function(v2) {
      return discard16(liftAff2(delay(delayBetweenTests)))(function() {
        return discard16(modifying3(function($50) {
          return _currentTestCase2(_Just2($50));
        })(function(v1) {
          return {
            data: v1.data,
            status: new Completed3(v2.value0)
          };
        }))(function() {
          return discard16(function() {
            if (v2.value0 instanceof Passed) {
              return bind30(gets5(function(v1) {
                return v1.testSuiteFailed;
              }))(function(testSuiteFailed) {
                return when7(!testSuiteFailed)(discard16(modify_7(function(s2) {
                  var $38 = {};
                  for (var $39 in s2) {
                    if ({}.hasOwnProperty.call(s2, $39)) {
                      $38[$39] = s2[$39];
                    }
                    ;
                  }
                  ;
                  $38.currentIndex = s2.currentIndex + 1 | 0;
                  return $38;
                }))(function() {
                  return bind30(gets5(currentTestCase))(function(v1) {
                    if (v1 instanceof Just) {
                      return handleAction(RunCurrentTest.value);
                    }
                    ;
                    if (v1 instanceof Nothing) {
                      return raise(AllTestsPassed.value);
                    }
                    ;
                    throw new Error("Failed pattern match at Component.TestRunner (line 80, column 40 - line 84, column 41): " + [v1.constructor.name]);
                  });
                }));
              });
            }
            ;
            if (v2.value0 instanceof Failed) {
              return modify_7(function(v1) {
                var $43 = {};
                for (var $44 in v1) {
                  if ({}.hasOwnProperty.call(v1, $44)) {
                    $43[$44] = v1[$44];
                  }
                  ;
                }
                ;
                $43.testSuiteFailed = true;
                return $43;
              });
            }
            ;
            throw new Error("Failed pattern match at Component.TestRunner (line 75, column 9 - line 86, column 52): " + [v2.value0.constructor.name]);
          }())(function() {
            return pure30(new Just(v2.value1));
          });
        });
      });
    };
    var $$eval3 = mkEval({
      initialize: defaultEval.initialize,
      finalize: defaultEval.finalize,
      handleAction,
      handleQuery,
      receive: function($51) {
        return Just.create(Receive3.create($51));
      }
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState4,
      render: render3
    });
  };

  // output/Game.Message/index.js
  var green2 = function(text7) {
    return span4([class_("green")])([text(text7)]);
  };

  // output/Game.Piece.BasicPiece/index.js
  var map56 = /* @__PURE__ */ map(functorMap);
  var discard17 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var guard6 = /* @__PURE__ */ guard(alternativeMaybe);
  var member5 = /* @__PURE__ */ member(ordCardinalDirection);
  var pure31 = /* @__PURE__ */ pure(applicativeMaybe);
  var zero8 = /* @__PURE__ */ zero(semiringSignal);
  var lookup20 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var not4 = /* @__PURE__ */ not(heytingAlgebraSignal);
  var fromFoldable19 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection)(foldableArray);
  var disj2 = /* @__PURE__ */ disj(heytingAlgebraSignal);
  var conj2 = /* @__PURE__ */ conj(heytingAlgebraSignal);
  var basicPiece = function(basic) {
    return mkPieceNoGlob({
      name: basic.name,
      "eval": basic["eval"],
      ports: map56(function(portType2) {
        return createPort(portType2)(basic.capacity);
      })(basic.ports),
      complexity: space(1),
      shouldRipple: true,
      updateCapacity: function(dir2) {
        return function(capacity) {
          return discard17(guard6(member5(dir2)(basic.ports)))(function() {
            return pure31(basicPiece({
              name: basic.name,
              "eval": basic["eval"],
              ports: basic.ports,
              capacity
            }));
          });
        };
      },
      isSimplifiable: Nothing.value
    });
  };
  var notPiece = /* @__PURE__ */ function() {
    return basicPiece({
      name: "not-piece",
      "eval": function(m2) {
        var l2 = fromMaybe(zero8)(lookup20(Left2.value)(m2));
        return singleton6(Right2.value)(not4(l2));
      },
      ports: fromFoldable19([new Tuple(Left2.value, Input.value), new Tuple(Right2.value, Output.value)]),
      capacity: OneBit.value
    });
  }();
  var orPiece = /* @__PURE__ */ function() {
    return basicPiece({
      name: "or-piece",
      "eval": function(m2) {
        var u2 = fromMaybe(zero8)(lookup20(Up.value)(m2));
        var l2 = fromMaybe(zero8)(lookup20(Left2.value)(m2));
        return singleton6(Right2.value)(disj2(l2)(u2));
      },
      ports: fromFoldable19([new Tuple(Left2.value, Input.value), new Tuple(Up.value, Input.value), new Tuple(Right2.value, Output.value)]),
      capacity: OneBit.value
    });
  }();
  var xorPiece = /* @__PURE__ */ function() {
    return basicPiece({
      name: "xor-piece",
      "eval": function(m2) {
        var u2 = fromMaybe(zero8)(lookup20(Up.value)(m2));
        var l2 = fromMaybe(zero8)(lookup20(Left2.value)(m2));
        return singleton6(Right2.value)(xor2(l2)(u2));
      },
      ports: fromFoldable19([new Tuple(Left2.value, Input.value), new Tuple(Up.value, Input.value), new Tuple(Right2.value, Output.value)]),
      capacity: OneBit.value
    });
  }();
  var andPiece = /* @__PURE__ */ function() {
    return basicPiece({
      name: "and-piece",
      "eval": function(m2) {
        var u2 = fromMaybe(zero8)(lookup20(Up.value)(m2));
        var l2 = fromMaybe(zero8)(lookup20(Left2.value)(m2));
        return singleton6(Right2.value)(conj2(l2)(u2));
      },
      ports: fromFoldable19([new Tuple(Left2.value, Input.value), new Tuple(Up.value, Input.value), new Tuple(Right2.value, Output.value)]),
      capacity: OneBit.value
    });
  }();
  var allBasicPieces = [notPiece, orPiece, andPiece, xorPiece];

  // output/Game.Piece.FusePiece/index.js
  var sub3 = /* @__PURE__ */ sub(uintRing);
  var one3 = /* @__PURE__ */ one(uintSemiring);
  var foldMap4 = /* @__PURE__ */ foldMap(foldableMaybe)(/* @__PURE__ */ monoidTuple(monoidSignal)(monoidSignal));
  var lookup21 = /* @__PURE__ */ lookup2(ordCardinalDirection);
  var fromFoldable20 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection)(foldableArray);
  var bind31 = /* @__PURE__ */ bind(bindMaybe);
  var pure32 = /* @__PURE__ */ pure(applicativeMaybe);
  var discard18 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var guard7 = /* @__PURE__ */ guard(alternativeMaybe);
  var notEq7 = /* @__PURE__ */ notEq(eqCapacity);
  var fold8 = /* @__PURE__ */ fold(foldableMaybe)(monoidSignal);
  var severSignal = function(outputCapacity) {
    return function(signal) {
      var n = fromInt(toInt(outputCapacity));
      var low2 = overSignal(function(s2) {
        return and2(s2)(sub3(shl(one3)(n))(one3));
      })(signal);
      var high2 = overSignal(function(s2) {
        return shr(s2)(n);
      })(signal);
      return new Tuple(high2, low2);
    };
  };
  var mkSeverPiece = function(v2) {
    return mkPieceNoGlob({
      name: "sever-piece",
      "eval": function(inputs) {
        var v1 = foldMap4(severSignal(v2.outputCapacity))(lookup21(Left2.value)(inputs));
        return fromFoldable20([new Tuple(Up.value, v1.value0), new Tuple(Down.value, v1.value1)]);
      },
      ports: fromMaybe(empty2)(bind31(doubleCapacity(v2.outputCapacity))(function(inputCapacity) {
        return pure32(fromFoldable20([new Tuple(Left2.value, inputPort(inputCapacity)), new Tuple(Up.value, outputPort(v2.outputCapacity)), new Tuple(Down.value, outputPort(v2.outputCapacity))]));
      })),
      complexity: space(1),
      shouldRipple: true,
      updateCapacity: function(dir2) {
        return function(capacity) {
          if (dir2 instanceof Right2) {
            return Nothing.value;
          }
          ;
          if (dir2 instanceof Left2) {
            return bind31(halveCapacity(capacity))(function(outputCapacity$prime) {
              return discard18(guard7(notEq7(v2.outputCapacity)(outputCapacity$prime)))(function() {
                return pure32(mkSeverPiece({
                  outputCapacity: outputCapacity$prime
                }));
              });
            });
          }
          ;
          return discard18(guard7(notEq7(capacity)(v2.outputCapacity)))(function() {
            return pure32(mkSeverPiece({
              outputCapacity: capacity
            }));
          });
        };
      },
      isSimplifiable: Nothing.value
    });
  };
  var severPiece = /* @__PURE__ */ function() {
    return mkSeverPiece({
      outputCapacity: OneBit.value
    });
  }();
  var fuseSignals = function(inputCapacity) {
    var n = fromInt(toInt(inputCapacity));
    return over2Signal(function(high2) {
      return function(low2) {
        return or2(shl(high2)(n))(and2(low2)(sub3(shl(one3)(n))(one3)));
      };
    });
  };
  var mkFusePiece = function(v2) {
    return mkPieceNoGlob({
      name: "fuse-piece",
      "eval": function(inputs) {
        var low2 = fold8(lookup21(Down.value)(inputs));
        var high2 = fold8(lookup21(Up.value)(inputs));
        return singleton6(Right2.value)(fuseSignals(v2.inputCapacity)(high2)(low2));
      },
      ports: fromMaybe(empty2)(bind31(doubleCapacity(v2.inputCapacity))(function(outputCapacity) {
        return pure32(fromFoldable20([new Tuple(Up.value, inputPort(v2.inputCapacity)), new Tuple(Down.value, inputPort(v2.inputCapacity)), new Tuple(Right2.value, outputPort(outputCapacity))]));
      })),
      complexity: space(1),
      shouldRipple: true,
      updateCapacity: function(dir2) {
        return function(capacity) {
          if (dir2 instanceof Left2) {
            return Nothing.value;
          }
          ;
          if (dir2 instanceof Right2) {
            return bind31(halveCapacity(capacity))(function(inputCapacity$prime) {
              return discard18(guard7(notEq7(inputCapacity$prime)(v2.inputCapacity)))(function() {
                return pure32(mkFusePiece({
                  inputCapacity: inputCapacity$prime
                }));
              });
            });
          }
          ;
          return discard18(guard7(notEq7(capacity)(v2.inputCapacity)))(function() {
            return bind31(doubleCapacity(capacity))(function() {
              return pure32(mkFusePiece({
                inputCapacity: capacity
              }));
            });
          });
        };
      },
      isSimplifiable: Nothing.value
    });
  };
  var fusePiece = /* @__PURE__ */ function() {
    return mkFusePiece({
      inputCapacity: OneBit.value
    });
  }();
  var allFusePieces = [fusePiece, severPiece];

  // output/Game.Piece/index.js
  var append21 = /* @__PURE__ */ append(semigroupArray);
  var show36 = /* @__PURE__ */ show(showPieceId);
  var lookup23 = /* @__PURE__ */ lookup2(ordPieceId);
  var allPieces = /* @__PURE__ */ append21(allBasicPieces)(/* @__PURE__ */ append21(allWirePieces)(allFusePieces));
  var pieceVault = /* @__PURE__ */ fromFoldable2(ordPieceId)(foldableArray)(/* @__PURE__ */ map(functorArray)(function(v2) {
    return new Tuple(v2.name, v2);
  })(allPieces));
  var pieceLookup = function(pieceId2) {
    var message2 = "piece lookup crash on " + (show36(pieceId2) + "... WITH NO SURVIVORS");
    return fromMaybe$prime(function(v2) {
      return unsafeCrashWith(message2);
    })(lookup23(pieceId2)(pieceVault));
  };

  // output/Component.Sidebar.Render/index.js
  var eq24 = /* @__PURE__ */ eq(eqBase);
  var member6 = /* @__PURE__ */ member(ordPieceId);
  var fromFoldable21 = /* @__PURE__ */ fromFoldable3(foldableList);
  var map57 = /* @__PURE__ */ map(functorList);
  var fromFoldable110 = /* @__PURE__ */ fromFoldable(foldableArray);
  var show37 = /* @__PURE__ */ show(showInt);
  var eq112 = /* @__PURE__ */ eq(eqPortType);
  var show112 = /* @__PURE__ */ show(showBoardError);
  var show211 = /* @__PURE__ */ show(showCardinalDirection);
  var show38 = /* @__PURE__ */ show(showPortType);
  var slot12 = /* @__PURE__ */ slot3();
  var slot1 = /* @__PURE__ */ slot12({
    reflectSymbol: function() {
      return "testRunner";
    }
  })(ordUnit);
  var slot22 = /* @__PURE__ */ slot12({
    reflectSymbol: function() {
      return "boardSizeSlider";
    }
  })(ordUnit);
  var render4 = function(dictMonadAff) {
    var component16 = component10(dictMonadAff);
    var component17 = component9(dictMonadAff);
    return function(state3) {
      var renderUndoRedo = function() {
        var title4 = span_([span4([onClick(ButtonClicked.create(Undo2.value))])([text("Undo")]), text("/"), span4([onClick(ButtonClicked.create(Redo2.value))])([text("Redo")])]);
        var html2 = span_([span4([onClick(ButtonClicked.create(Undo2.value))])([text("Ctrl-Z")]), text("/"), span4([onClick(ButtonClicked.create(Redo2.value))])([text("Ctrl-Y")])]);
        return segment("undo-redo")(title4)(html2);
      }();
      var renderTitle = h1([class_("title")])([text(state3.problem.title)]);
      var renderSubtitle = function() {
        if (state3.problem.subtitle instanceof Just) {
          return h3([class_("subtitle")])([text(state3.problem.subtitle.value0)]);
        }
        ;
        if (state3.problem.subtitle instanceof Nothing) {
          return text("");
        }
        ;
        throw new Error("Failed pattern match at Component.Sidebar.Render (line 62, column 22 - line 67, column 28): " + [state3.problem.subtitle.constructor.name]);
      }();
      var renderSignalRepresentation = function() {
        var signalRepresentationOption = function(base2) {
          return function(text7) {
            return span4([onClick(ButtonClicked.create(new Base(base2)))])(function() {
              var $28 = eq24(state3.base)(base2);
              if ($28) {
                return [b_([text(text7)])];
              }
              ;
              return [text(text7)];
            }());
          };
        };
        return segmentWithTitle("Radix")(div_([signalRepresentationOption(Binary.value)("Binary"), text(" | "), signalRepresentationOption(Decimal.value)("Decimal"), text(" | "), signalRepresentationOption(Hexadecimal.value)("Hexidecimal")]));
      }();
      var renderRunDemonstration = function() {
        var title4 = span4([onClick(ButtonClicked.create(RunDemonstration.value))])([text("Demonstrate")]);
        var html2 = span4([onClick(ButtonClicked.create(RunDemonstration.value))])([text("Provide guidance")]);
        return segment("demonstrate")(title4)(html2);
      }();
      var renderGiveUp = function() {
        var title4 = span4([onClick(ButtonClicked.create(BackToLevelSelect.value))])([text("Resign")]);
        var html2 = span4([onClick(ButtonClicked.create(BackToLevelSelect.value))])([text("Choose another level")]);
        return segment("give-up")(title4)(html2);
      }();
      var renderDescription = function() {
        var reduceStrings = function(v2) {
          if (v2 instanceof Cons && (v2.value0 instanceof Right && (v2.value1 instanceof Cons && v2.value1.value0 instanceof Right))) {
            return reduceStrings(new Cons(new Right(v2.value0.value0 + (" " + v2.value1.value0.value0)), v2.value1.value1));
          }
          ;
          if (v2 instanceof Cons && (v2.value0 instanceof Left && (v2.value1 instanceof Cons && v2.value1.value0 instanceof Right))) {
            return new Cons(new Left(v2.value0.value0), reduceStrings(new Cons(new Right(" " + v2.value1.value0.value0), v2.value1.value1)));
          }
          ;
          if (v2 instanceof Cons && (v2.value0 instanceof Right && (v2.value1 instanceof Cons && v2.value1.value0 instanceof Left))) {
            return new Cons(new Right(v2.value0.value0 + " "), new Cons(new Left(v2.value1.value0.value0), reduceStrings(v2.value1.value1)));
          }
          ;
          if (v2 instanceof Cons) {
            return new Cons(v2.value0, reduceStrings(v2.value1));
          }
          ;
          if (v2 instanceof Nil) {
            return Nil.value;
          }
          ;
          throw new Error("Failed pattern match at Component.Sidebar.Render (line 75, column 9 - line 75, column 84): " + [v2.constructor.name]);
        };
        var filterPieceNames = eitherBool(function(s2) {
          return !member6(s2)(pieceVault);
        });
        var asHTML = function(v2) {
          if (v2 instanceof Left) {
            return span4([class_("piece-name")])([text(v2.value0)]);
          }
          ;
          if (v2 instanceof Right) {
            return text(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Component.Sidebar.Render (line 82, column 9 - line 82, column 63): " + [v2.constructor.name]);
        };
        var $78 = span4([class_("description")]);
        var $79 = map57(asHTML);
        var $80 = map57(filterPieceNames);
        var $81 = split(" ");
        return function($82) {
          return $78(fromFoldable21($79(reduceStrings($80(fromFoldable110($81($82)))))));
        };
      }();
      var renderCompletionStatus = function() {
        var renderTestSuccess = function(i2) {
          return function(n) {
            return span_([green2(show37(i2) + ("/" + show37(n))), text(" Sucessful")]);
          };
        };
        var describePort = function(v2) {
          return "an " + function() {
            var $54 = eq112(v2.portType)(Input.value);
            if ($54) {
              return "input";
            }
            ;
            return "output" + (" of capacity " + show37(toInt(v2.capacity)));
          }();
        };
        return div5([class_("completion-status")])(function() {
          if (state3.completionStatus instanceof NotStarted) {
            return [];
          }
          ;
          if (state3.completionStatus instanceof FailedRestriction) {
            return [h2_([text("Restriction!")]), text("This level has a special restriction: "), b_([text(state3.completionStatus.value0.name)]), br_, text(state3.completionStatus.value0.description)];
          }
          ;
          if (state3.completionStatus instanceof NotEvaluable) {
            return [h2_([text("Not Evaluable!")]), text("not evaluable due to: " + show112(state3.completionStatus.value0))];
          }
          ;
          if (state3.completionStatus instanceof PortMismatch) {
            return [h2_([text("Port mismatch")]), function() {
              if (state3.completionStatus.value0 instanceof PortExpected) {
                return text("You need " + (describePort(state3.completionStatus.value0.value0.expected) + (" in the " + (show211(state3.completionStatus.value0.value0.direction) + " direction"))));
              }
              ;
              if (state3.completionStatus.value0 instanceof NoPortExpected) {
                return text("Remove the port in the " + (show211(state3.completionStatus.value0.value0.direction) + "direction"));
              }
              ;
              if (state3.completionStatus.value0 instanceof IncorrectPortType) {
                return text("Port in the " + (show211(state3.completionStatus.value0.value0.direction) + (" direction should be an " + show38(state3.completionStatus.value0.value0.expected))));
              }
              ;
              if (state3.completionStatus.value0 instanceof IncorrectCapacity) {
                return text("Port in the " + (show211(state3.completionStatus.value0.value0.direction) + (" direction should have capacity " + show37(toInt(state3.completionStatus.value0.value0.expected)))));
              }
              ;
              throw new Error("Failed pattern match at Component.Sidebar.Render (line 102, column 15 - line 106, column 187): " + [state3.completionStatus.value0.constructor.name]);
            }()];
          }
          ;
          if (state3.completionStatus instanceof ReadyForTesting) {
            return [h2_([text("Testing")]), slot1(slot11)(unit)(component16)({
              base: state3.base,
              inputs: state3.problem.testCases,
              model: state3.problem.goal
            })(TestRunnerAction.create)];
          }
          ;
          if (state3.completionStatus instanceof Completed2) {
            return [h2_([text("Level Complete!")]), slot1(slot11)(unit)(component16)({
              base: state3.base,
              inputs: state3.problem.testCases,
              model: state3.problem.goal
            })(TestRunnerAction.create), button2([class_("run-tests-again"), onClick(ButtonClicked.create(RunTests.value))])([text("Run Tests again")]), button2([class_("back-to-level-select"), onClick(ButtonClicked.create(BackToLevelSelect.value))])([text("Back to Level Select ")])];
          }
          ;
          throw new Error("Failed pattern match at Component.Sidebar.Render (line 88, column 9 - line 127, column 14): " + [state3.completionStatus.constructor.name]);
        }());
      }();
      var renderClear = function() {
        var title4 = span4([onClick(ButtonClicked.create(Clear2.value))])([text("Obliterate")]);
        var html2 = span4([onClick(ButtonClicked.create(Clear2.value))])([text("Remove all pieces")]);
        return segment("clear-all")(title4)(html2);
      }();
      return div5([id2("sidebar-component")])([div_([renderTitle, renderSubtitle, renderDescription(state3.problem.description)]), renderCompletionStatus, renderRunDemonstration, slot22(slot9)(unit)(component17)({
        boardSize: state3.boardSize
      })(BoardSizeSliderAction.create), renderUndoRedo, renderClear, renderSignalRepresentation, renderGiveUp]);
    };
  };

  // output/Component.Sidebar/index.js
  var discard19 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var put4 = /* @__PURE__ */ put(monadStateHalogenM);
  var tell5 = /* @__PURE__ */ tell2();
  var tell1 = /* @__PURE__ */ tell5({
    reflectSymbol: function() {
      return "boardSizeSlider";
    }
  })(ordUnit);
  var pure33 = /* @__PURE__ */ pure(applicativeHalogenM);
  var modify_8 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var headShake3 = /* @__PURE__ */ headShake(/* @__PURE__ */ monadAffHalogenM(monadAffAppM));
  var tell22 = /* @__PURE__ */ tell5({
    reflectSymbol: function() {
      return "testRunner";
    }
  })(ordUnit);
  var component11 = /* @__PURE__ */ function() {
    var $$eval3 = mkEval({
      finalize: Nothing.value,
      handleAction: function(v2) {
        if (v2 instanceof Initialise3) {
          return discard19(put4(initialState3(v2.value0)))(function() {
            return tell1(slot9)(unit)(AmendBoardSizeSlider.create(v2.value0.boardSize));
          });
        }
        ;
        if (v2 instanceof PieceOnDrop) {
          return raise(new PieceDropped2(v2.value0));
        }
        ;
        if (v2 instanceof ButtonClicked) {
          return raise(new ButtonOutput(v2.value0));
        }
        ;
        if (v2 instanceof BoardSizeSliderAction) {
          return raise(new InputFieldOutput(new BoardSize(v2.value0.value0.boardSize)));
        }
        ;
        if (v2 instanceof TestRunnerAction) {
          return raise(new TestRunnerOutput(v2.value0));
        }
        ;
        if (v2 instanceof DoNothing2) {
          return pure33(unit);
        }
        ;
        throw new Error("Failed pattern match at Component.Sidebar (line 69, column 21 - line 80, column 31): " + [v2.constructor.name]);
      },
      handleQuery: function(v2) {
        if (v2 instanceof AmendBoardSizeSlider2) {
          return discard19(modify_8(function(v1) {
            var $34 = {};
            for (var $35 in v1) {
              if ({}.hasOwnProperty.call(v1, $35)) {
                $34[$35] = v1[$35];
              }
              ;
            }
            ;
            $34.boardSize = v2.value0;
            return $34;
          }))(function() {
            return discard19(headShake3("#sidebar-component .board-size h3"))(function() {
              return pure33(new Just(v2.value1));
            });
          });
        }
        ;
        if (v2 instanceof TestCaseResponse) {
          return discard19(tell22(slot11)(unit)(TestCaseOutcome.create(v2.value0)))(function() {
            return pure33(new Just(v2.value1));
          });
        }
        ;
        throw new Error("Failed pattern match at Component.Sidebar (line 81, column 20 - line 88, column 27): " + [v2.constructor.name]);
      },
      initialize: Nothing.value,
      receive: function($44) {
        return Just.create(Initialise3.create($44));
      }
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState3,
      render: render4(monadAffAppM)
    });
  }();

  // output/Data.UUID.Random/index.js
  var compare9 = /* @__PURE__ */ compare(ordString);
  var fromJust7 = /* @__PURE__ */ fromJust();
  var map58 = /* @__PURE__ */ map(functorArray);
  var append112 = /* @__PURE__ */ append(semigroupArray);
  var sequence4 = /* @__PURE__ */ sequence(traversableArray);
  var UUIDv4 = /* @__PURE__ */ function() {
    function UUIDv42(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    UUIDv42.create = function(value0) {
      return function(value1) {
        return new UUIDv42(value0, value1);
      };
    };
    return UUIDv42;
  }();
  var eqUUIDv4 = {
    eq: function(v2) {
      return function(v1) {
        return v2.value0 === v1.value0;
      };
    }
  };
  var ordUUIDv4 = {
    compare: function(v2) {
      return function(v1) {
        return compare9(v2.value0)(v1.value0);
      };
    },
    Eq0: function() {
      return eqUUIDv4;
    }
  };
  var hexRadix = /* @__PURE__ */ fromJust7(/* @__PURE__ */ radix(16));
  var render5 = function(is) {
    var chunk = function(i2) {
      return function(j) {
        return joinWith("")(map58(toStringAs(hexRadix))(slice2(i2)(j)(is)));
      };
    };
    return joinWith("-")([chunk(0)(8), chunk(8)(12), chunk(12)(16), chunk(16)(20), chunk(20)(32)]);
  };
  var unsafeFromInts = function(is) {
    return new UUIDv4(render5(is), is);
  };
  var make$prime = function(dictApplicative) {
    var pure116 = pure(dictApplicative);
    var map123 = map(dictApplicative.Apply0().Functor0());
    var sequence12 = sequence4(dictApplicative);
    return function(rand) {
      var y2 = [rand(8)(11)];
      var x2 = [rand(0)(15)];
      var x3 = append112(x2)(append112(x2)(x2));
      var x4 = append112(x3)(x2);
      var x8 = append112(x4)(x4);
      var x12 = append112(x8)(x4);
      var uuid = append112(x8)(append112(x4)(append112([pure116(4)])(append112(x3)(append112(y2)(append112(x3)(x12))))));
      return map123(unsafeFromInts)(sequence12(uuid));
    };
  };
  var make$prime1 = /* @__PURE__ */ make$prime(applicativeEffect);
  var make = function(dictMonadEffect) {
    return liftEffect(dictMonadEffect)(make$prime1(randomInt));
  };

  // output/Component.Level/index.js
  var discard20 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard20(bindAff);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var slot13 = /* @__PURE__ */ slot3();
  var boardIsSymbol = {
    reflectSymbol: function() {
      return "board";
    }
  };
  var slot14 = /* @__PURE__ */ slot13(boardIsSymbol)(ordUnit);
  var sidebarIsSymbol = {
    reflectSymbol: function() {
      return "sidebar";
    }
  };
  var slot23 = /* @__PURE__ */ slot13(sidebarIsSymbol)(ordUnit);
  var slot32 = /* @__PURE__ */ slot13({
    reflectSymbol: function() {
      return "selector";
    }
  })(ordUnit);
  var map59 = /* @__PURE__ */ map(functorMaybe);
  var demonstrationIsSymbol = {
    reflectSymbol: function() {
      return "demonstration";
    }
  };
  var slot_2 = /* @__PURE__ */ slot_()(demonstrationIsSymbol)(ordUnit);
  var component1 = /* @__PURE__ */ component7(monadAffAppM);
  var getBoardPorts3 = /* @__PURE__ */ getBoardPorts(/* @__PURE__ */ monadStateStateT(monadIdentity));
  var bind33 = /* @__PURE__ */ bind(bindHalogenM);
  var gets6 = /* @__PURE__ */ gets(monadStateHalogenM);
  var discard22 = /* @__PURE__ */ discard20(bindHalogenM);
  var lift10 = /* @__PURE__ */ lift(monadTransHalogenM)(monadAppM);
  var debug4 = /* @__PURE__ */ debug(monadLoggerAppM);
  var show39 = /* @__PURE__ */ show(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "levelName";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "suiteName";
    }
  })(showString))(showString)));
  var traverse_8 = /* @__PURE__ */ traverse_(applicativeHalogenM);
  var traverse_13 = /* @__PURE__ */ traverse_8(foldableArray);
  var info3 = /* @__PURE__ */ info(monadLoggerAppM);
  var monadEffectHalogenM3 = /* @__PURE__ */ monadEffectHalogenM(monadEffectAppM);
  var make2 = /* @__PURE__ */ make(monadEffectHalogenM3);
  var modify_9 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var insert14 = /* @__PURE__ */ insert(ordUUIDv4);
  var pure34 = /* @__PURE__ */ pure(applicativeHalogenM);
  var tell6 = /* @__PURE__ */ tell2();
  var tell12 = /* @__PURE__ */ tell6(demonstrationIsSymbol)(ordUnit);
  var tell23 = /* @__PURE__ */ tell6(boardIsSymbol)(ordUnit);
  var _size4 = /* @__PURE__ */ _size(strongForget);
  var updateStore2 = /* @__PURE__ */ updateStore(/* @__PURE__ */ monadStoreHalogenM(monadStoreGlobalStateActi));
  var request2 = /* @__PURE__ */ request()(boardIsSymbol)(ordUnit);
  var for_5 = /* @__PURE__ */ for_(applicativeHalogenM)(foldableMaybe);
  var tell32 = /* @__PURE__ */ tell6(sidebarIsSymbol)(ordUnit);
  var traverse_22 = /* @__PURE__ */ traverse_8(foldableMaybe);
  var liftEffect12 = /* @__PURE__ */ liftEffect(monadEffectHalogenM3);
  var navigateTo2 = /* @__PURE__ */ navigateTo(monadEffectEffect);
  var $$delete8 = /* @__PURE__ */ $$delete2(ordUUIDv4);
  var Initialise4 = /* @__PURE__ */ function() {
    function Initialise6() {
    }
    ;
    Initialise6.value = new Initialise6();
    return Initialise6;
  }();
  var TriggerDemonstration = /* @__PURE__ */ function() {
    function TriggerDemonstration2() {
    }
    ;
    TriggerDemonstration2.value = new TriggerDemonstration2();
    return TriggerDemonstration2;
  }();
  var BoardOutput = /* @__PURE__ */ function() {
    function BoardOutput2(value0) {
      this.value0 = value0;
    }
    ;
    BoardOutput2.create = function(value0) {
      return new BoardOutput2(value0);
    };
    return BoardOutput2;
  }();
  var SidebarOutput = /* @__PURE__ */ function() {
    function SidebarOutput2(value0) {
      this.value0 = value0;
    }
    ;
    SidebarOutput2.create = function(value0) {
      return new SidebarOutput2(value0);
    };
    return SidebarOutput2;
  }();
  var SelectorOutput = /* @__PURE__ */ function() {
    function SelectorOutput2(value0) {
      this.value0 = value0;
    }
    ;
    SelectorOutput2.create = function(value0) {
      return new SelectorOutput2(value0);
    };
    return SelectorOutput2;
  }();
  var MarginaliumOutput = /* @__PURE__ */ function() {
    function MarginaliumOutput2(value0) {
      this.value0 = value0;
    }
    ;
    MarginaliumOutput2.create = function(value0) {
      return new MarginaliumOutput2(value0);
    };
    return MarginaliumOutput2;
  }();
  var delay2 = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var Monad0 = MonadEffect0.Monad0();
    var bind118 = bind(Monad0.Bind1());
    var liftEffect22 = liftEffect(MonadEffect0);
    var liftAff2 = liftAff(dictMonadAff);
    var pure116 = pure(Monad0.Applicative0());
    return function(duration2) {
      return function(val) {
        return bind118(liftEffect22(create))(function(v2) {
          return bind118(liftAff2(forkAff(discard1(delay(duration2))(function() {
            return liftEffect5(notify(v2.listener)(val));
          }))))(function() {
            return pure116(v2.emitter);
          });
        });
      };
    };
  };
  var delay1 = /* @__PURE__ */ delay2(/* @__PURE__ */ monadAffHalogenM(monadAffAppM));
  var component12 = /* @__PURE__ */ function() {
    var render6 = function(v2) {
      var sidebarInput = {
        problem: v2.level.problem,
        completionStatus: v2.completionStatus,
        boardSize: v2.boardSize,
        boardPorts: v2.boardPorts,
        base: v2.base
      };
      return div5([id2("puzzle-component")])([slot14(slot)(unit)(component6)({
        board: standardBoard
      })(BoardOutput.create), slot23(slot10)(unit)(component11)(sidebarInput)(SidebarOutput.create), slot32(slot8)(unit)(component8)({
        availablePieces: v2.level.problem.availablePieces
      })(SelectorOutput.create), fromMaybe(text(""))(map59(slot_2(slot6)(unit)(component1))(v2.level.problem.demonstration))]);
    };
    var initialState5 = function(v2) {
      return {
        levelId: v2.levelId,
        level: v2.level,
        completionStatus: NotStarted.value,
        boardSize: 3,
        boardPorts: evalState(getBoardPorts3)(standardBoard),
        marginalia: empty2,
        base: v2.level.options.base
      };
    };
    var handleAction = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v2) {
        if (v2 instanceof Initialise4) {
          $tco_done = true;
          return bind33(gets6(function(v1) {
            return v1.levelId;
          }))(function(levelId) {
            return discard22(lift10(debug4(empty2)("Initialised level " + show39(levelId))))(function() {
              return discard22(bind33(gets6(function(v1) {
                return v1.level.marginalia;
              }))(traverse_13(function(m2) {
                return discard22(lift10(info3(empty2)("initialising marginalia")))(function() {
                  return bind33(make2)(function(uuid) {
                    return modify_9(function(state3) {
                      var $111 = {};
                      for (var $112 in state3) {
                        if ({}.hasOwnProperty.call(state3, $112)) {
                          $111[$112] = state3[$112];
                        }
                        ;
                      }
                      ;
                      $111.marginalia = insert14(uuid)(m2)(state3.marginalia);
                      return $111;
                    });
                  });
                });
              })))(function() {
                return bind33(bind33(delay1(1e3)(TriggerDemonstration.value))(subscribe2))(function() {
                  return pure34(unit);
                });
              });
            });
          });
        }
        ;
        if (v2 instanceof TriggerDemonstration) {
          $tco_done = true;
          return discard22(tell12(slot6)(unit)(OpenDemonstration.create))(function() {
            return bind33(gets6(function(v1) {
              return v1.level.problem.goal;
            }))(function(v1) {
              return tell23(slot)(unit)(SetGoalPorts.create(v1.ports));
            });
          });
        }
        ;
        if (v2 instanceof BoardOutput) {
          if (v2.value0 instanceof NewBoardState) {
            $tco_done = true;
            return bind33(gets6(function(v1) {
              return v1.level.problem;
            }))(function(problem) {
              return modify_9(function(v1) {
                var $116 = {};
                for (var $117 in v1) {
                  if ({}.hasOwnProperty.call(v1, $117)) {
                    $116[$117] = v1[$117];
                  }
                  ;
                }
                ;
                $116.completionStatus = isReadyForTesting(problem)(v2.value0.value0);
                $116.boardSize = viewOn(v2.value0.value0)(_size4);
                $116.boardPorts = evalState(getBoardPorts3)(v2.value0.value0);
                return $116;
              });
            });
          }
          ;
          if (v2.value0 instanceof BoardEvent2) {
            $tco_done = true;
            return updateStore2(newBoardEvent(v2.value0.value0));
          }
          ;
          throw new Error("Failed pattern match at Component.Level (line 163, column 32 - line 173, column 47): " + [v2.value0.constructor.name]);
        }
        ;
        if (v2 instanceof SidebarOutput) {
          if (v2.value0 instanceof PieceDropped2) {
            $tco_done = true;
            return bind33(request2(slot)(unit)(GetMouseOverLocation.create))(function(maybeLocation) {
              return for_5(maybeLocation)(function(loc) {
                return request2(slot)(unit)(AddPiece.create(loc)(pieceLookup(v2.value0.value0)));
              });
            });
          }
          ;
          if (v2.value0 instanceof InputFieldOutput) {
            $tco_done = true;
            return bind33(request2(slot)(unit)(SetBoardSize.create(v2.value0.value0.value0)))(function(v1) {
              if (v1 instanceof Just && v1.value0 instanceof Right) {
                return modify_9(function(v22) {
                  var $125 = {};
                  for (var $126 in v22) {
                    if ({}.hasOwnProperty.call(v22, $126)) {
                      $125[$126] = v22[$126];
                    }
                    ;
                  }
                  ;
                  $125.boardSize = v2.value0.value0.value0;
                  return $125;
                });
              }
              ;
              if (v1 instanceof Just && v1.value0 instanceof Left) {
                return bind33(gets6(function(v22) {
                  return v22.boardSize;
                }))(function(size6) {
                  return tell32(slot10)(unit)(AmendBoardSizeSlider2.create(size6));
                });
              }
              ;
              if (v1 instanceof Nothing) {
                return pure34(unit);
              }
              ;
              throw new Error("Failed pattern match at Component.Level (line 181, column 62 - line 186, column 31): " + [v1.constructor.name]);
            });
          }
          ;
          if (v2.value0 instanceof ButtonOutput) {
            if (v2.value0.value0 instanceof AddPiece3) {
              $tco_done = true;
              return bind33(request2(slot)(unit)(GetBoard.create))(traverse_22(function(board) {
                return for_5(firstEmptyLocation(board))(function(loc) {
                  return request2(slot)(unit)(AddPiece.create(loc)(pieceLookup(v2.value0.value0.value0)));
                });
              }));
            }
            ;
            if (v2.value0.value0 instanceof BackToLevelSelect) {
              $tco_done = true;
              return liftEffect12(navigateTo2(LevelSelect.value));
            }
            ;
            if (v2.value0.value0 instanceof Undo2) {
              $tco_done = true;
              return tell23(slot)(unit)(Undo.create);
            }
            ;
            if (v2.value0.value0 instanceof Redo2) {
              $tco_done = true;
              return tell23(slot)(unit)(Redo.create);
            }
            ;
            if (v2.value0.value0 instanceof RunTests) {
              $tco_done = true;
              return pure34(unit);
            }
            ;
            if (v2.value0.value0 instanceof Clear2) {
              $tco_done = true;
              return tell23(slot)(unit)(Clear.create);
            }
            ;
            if (v2.value0.value0 instanceof Base) {
              $tco_done = true;
              return modify_9(function(v1) {
                var $136 = {};
                for (var $137 in v1) {
                  if ({}.hasOwnProperty.call(v1, $137)) {
                    $136[$137] = v1[$137];
                  }
                  ;
                }
                ;
                $136.base = v2.value0.value0.value0;
                return $136;
              });
            }
            ;
            if (v2.value0.value0 instanceof RunDemonstration) {
              $copy_v = TriggerDemonstration.value;
              return;
            }
            ;
            throw new Error("Failed pattern match at Component.Level (line 187, column 38 - line 204, column 44): " + [v2.value0.value0.constructor.name]);
          }
          ;
          if (v2.value0 instanceof TestRunnerOutput) {
            if (v2.value0.value0 instanceof TestCaseData) {
              $tco_done = true;
              return discard22(bind33(request2(slot)(unit)(RunTestCase.create(v2.value0.value0.value0)))(traverse_22(function(outcome) {
                return tell32(slot10)(unit)(TestCaseResponse.create(outcome));
              })))(function() {
                return pure34(unit);
              });
            }
            ;
            if (v2.value0.value0 instanceof AllTestsPassed) {
              $tco_done = true;
              return modify_9(function(v1) {
                var $143 = {};
                for (var $144 in v1) {
                  if ({}.hasOwnProperty.call(v1, $144)) {
                    $143[$144] = v1[$144];
                  }
                  ;
                }
                ;
                $143.completionStatus = Completed2.value;
                return $143;
              });
            }
            ;
            throw new Error("Failed pattern match at Component.Level (line 205, column 42 - line 211, column 65): " + [v2.value0.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Component.Level (line 175, column 36 - line 211, column 65): " + [v2.value0.constructor.name]);
        }
        ;
        if (v2 instanceof SelectorOutput) {
          if (v2.value0 instanceof AddPiece2) {
            $tco_done = true;
            return bind33(request2(slot)(unit)(GetBoard.create))(traverse_22(function(board) {
              return for_5(firstEmptyLocation(board))(function(loc) {
                return request2(slot)(unit)(AddPiece.create(loc)(pieceLookup(v2.value0.value0)));
              });
            }));
          }
          ;
          if (v2.value0 instanceof PieceDropped) {
            $tco_done = true;
            return bind33(request2(slot)(unit)(GetMouseOverLocation.create))(function(maybeLocation) {
              return for_5(maybeLocation)(function(loc) {
                return request2(slot)(unit)(AddPiece.create(loc)(pieceLookup(v2.value0.value0)));
              });
            });
          }
          ;
          if (v2.value0 instanceof DoNothing) {
            $tco_done = true;
            return pure34(unit);
          }
          ;
          throw new Error("Failed pattern match at Component.Level (line 214, column 30 - line 223, column 38): " + [v2.value0.constructor.name]);
        }
        ;
        if (v2 instanceof MarginaliumOutput) {
          if (v2.value0 instanceof TriggerNext) {
            $tco_done = true;
            return bind33(make2)(function(uuid) {
              return modify_9(function(state3) {
                var $153 = {};
                for (var $154 in state3) {
                  if ({}.hasOwnProperty.call(state3, $154)) {
                    $153[$154] = state3[$154];
                  }
                  ;
                }
                ;
                $153.marginalia = insert14(uuid)(v2.value0.value0)(state3.marginalia);
                return $153;
              });
            });
          }
          ;
          if (v2.value0 instanceof RemoveThis2) {
            $tco_done = true;
            return modify_9(function(state3) {
              var $157 = {};
              for (var $158 in state3) {
                if ({}.hasOwnProperty.call(state3, $158)) {
                  $157[$158] = state3[$158];
                }
                ;
              }
              ;
              $157.marginalia = $$delete8(v2.value0.value0)(state3.marginalia);
              return $157;
            });
          }
          ;
          throw new Error("Failed pattern match at Component.Level (line 226, column 43 - line 231, column 80): " + [v2.value0.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Component.Level (line 140, column 18 - line 231, column 80): " + [v2.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    var $$eval3 = mkEval({
      finalize: Nothing.value,
      handleAction,
      handleQuery: function(v2) {
        return pure34(Nothing.value);
      },
      initialize: new Just(Initialise4.value),
      receive: $$const(Nothing.value)
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState5,
      render: render6
    });
  }();

  // output/Game.Level.Problem/index.js
  var defaultProblem = /* @__PURE__ */ function() {
    return {
      goal: idPiece,
      title: "default title",
      subtitle: Nothing.value,
      description: "default description",
      demonstration: Nothing.value,
      testCases: [],
      requiresAutomaticTesting: false,
      availablePieces: empty3,
      otherRestrictions: []
    };
  }();

  // output/Game.Level/index.js
  var bind34 = /* @__PURE__ */ bind(bindArray);
  var traverse4 = /* @__PURE__ */ traverse(traversableArray)(applicativeArray);
  var zero9 = /* @__PURE__ */ zero(semiringSignal);
  var one4 = /* @__PURE__ */ one(semiringSignal);
  var pure35 = /* @__PURE__ */ pure(applicativeArray);
  var fromFoldable25 = /* @__PURE__ */ fromFoldable2(ordCardinalDirection)(foldableArray);
  var defaultLevelOptions = /* @__PURE__ */ function() {
    return {
      enableBoardSizeChange: true,
      compulsory: false,
      base: Binary.value
    };
  }();
  var defaultLevel = {
    problem: defaultProblem,
    marginalia: [],
    options: defaultLevelOptions
  };
  var binaryTestInputs = function(directions) {
    return bind34(traverse4(function(v2) {
      return [zero9, one4];
    })(directions))(function(inputs) {
      return pure35(fromFoldable25(zip(directions)(inputs)));
    });
  };

  // output/Resources.LevelSuites.IntermediateSuite/index.js
  var fromFoldable26 = /* @__PURE__ */ fromFoldable4(foldableArray)(ordPiece);
  var all5 = /* @__PURE__ */ all(foldableMap)(heytingAlgebraBoolean);
  var notEq8 = /* @__PURE__ */ notEq(eqPiece);
  var intermediateSuite = /* @__PURE__ */ function() {
    return fromHomogeneous()({
      "Criss cross": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          subtitle: defaultProblem.subtitle,
          goal: crossPiece,
          title: "Cross over",
          description: "Propogate the signal on the left to the right, and the top to the bottom",
          testCases: binaryTestInputs([Left2.value, Up.value]),
          availablePieces: fromFoldable26([idPiece, superPiece, leftPiece, rightPiece, xorPiece]),
          otherRestrictions: [{
            name: "Prohibited Piece",
            description: "You can't use the CrossOver piece in this level",
            restriction: function(v2) {
              return flip(all5)(v2.pieces)(function(info4) {
                return notEq8(info4.piece)(crossPiece);
              });
            }
          }]
        }
      },
      "From Or, birthed And": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          subtitle: defaultProblem.subtitle,
          goal: andPiece,
          title: "From Or, birthed And",
          description: "Create an and-piece using only or-piece and not-piece",
          testCases: binaryTestInputs([Left2.value, Up.value]),
          availablePieces: fromFoldable26([orPiece, notPiece])
        }
      },
      "Exclusive Or: Pick One": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          subtitle: defaultProblem.subtitle,
          goal: xorPiece,
          title: "Exclusive Or: Pick One",
          description: "Output true when EXACTLY one input is true. If both inputs are true, output false",
          testCases: binaryTestInputs([Left2.value, Up.value]),
          availablePieces: fromFoldable26([idPiece, notPiece, orPiece, andPiece, crossPiece])
        }
      }
    });
  }();

  // output/Game.Level.Demonstration/index.js
  var type_20 = /* @__PURE__ */ type_17(isPropMediaType);
  var videoDemonstration = function(v2) {
    var html2 = div_([video([controls2(false), autoplay2(true), muted2(true), loop2(true)])([source([src9(v2.videoUrl), type_20("video/mp4")])]), text(v2.description)]);
    return {
      title: v2.title,
      html: html2
    };
  };

  // output/Resources.LevelSuites.TutorialSuite.Suite/index.js
  var fromFoldable27 = /* @__PURE__ */ fromFoldable4(foldableArray)(ordPiece);
  var tutorialSuite = /* @__PURE__ */ function() {
    return fromHomogeneous()({
      "From A to B": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          goal: idPiece,
          title: "From A to B",
          subtitle: new Just("As easy as... "),
          description: "The input on the left needs to be connected to the output on the right. Use the 'demonstrate' button for a quick tutorial.",
          demonstration: new Just(videoDemonstration({
            title: "Creating pieces",
            videoUrl: "./static/images/demonstrations/new_path.mp4",
            description: "To create a Piece, click and drag from the left to the right"
          })),
          testCases: binaryTestInputs([Left2.value]),
          availablePieces: fromFoldable27([])
        }
      },
      Negation: {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          goal: notPiece,
          title: "Negation",
          subtitle: new Just("Not bad"),
          description: "Negate the signal inputed on the Left and output it on the Right. You can add a piece to the board from the 'Available Pieces' menu by clicking an icon or dragging an icon an open location.",
          testCases: binaryTestInputs([Left2.value]),
          availablePieces: fromFoldable27([notPiece])
        }
      },
      "Two enter, one leaves": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          goal: orPiece,
          title: "Two enter, one leaves",
          subtitle: new Just("The gladiator (2000)"),
          description: "An or piece takes two inputs!",
          testCases: binaryTestInputs([Left2.value, Up.value]),
          availablePieces: fromFoldable27([orPiece])
        }
      },
      "Take a Left": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          goal: leftPiece,
          title: "Take a Left",
          subtitle: new Just("Taking L(efts)s  "),
          description: "",
          testCases: binaryTestInputs([Left2.value]),
          availablePieces: fromFoldable27([orPiece])
        }
      },
      "The Chicken": {
        marginalia: defaultLevel.marginalia,
        options: defaultLevel.options,
        problem: {
          demonstration: defaultProblem.demonstration,
          otherRestrictions: defaultProblem.otherRestrictions,
          requiresAutomaticTesting: defaultProblem.requiresAutomaticTesting,
          goal: chickenPiece,
          title: "The Chicken",
          subtitle: new Just("Huh McFly!"),
          description: "",
          testCases: binaryTestInputs([Left2.value, Right2.value]),
          availablePieces: fromFoldable27([])
        }
      }
    });
  }();

  // output/Resources.LevelSuites/index.js
  var fromHomogeneous2 = /* @__PURE__ */ fromHomogeneous();
  var join6 = /* @__PURE__ */ join(bindArray);
  var ordRecord2 = /* @__PURE__ */ ordRecord()(/* @__PURE__ */ ordRecordCons(/* @__PURE__ */ ordRecordCons(ordRecordNil)()({
    reflectSymbol: function() {
      return "suiteName";
    }
  })(ordString))()({
    reflectSymbol: function() {
      return "levelName";
    }
  })(ordString));
  var fromFoldable28 = /* @__PURE__ */ fromFoldable2(ordRecord2)(foldableArray);
  var catMaybes6 = /* @__PURE__ */ catMaybes2(ordRecord2);
  var toUnfoldable9 = /* @__PURE__ */ toUnfoldable5(unfoldableArray);
  var allLevelSuites = /* @__PURE__ */ fromHomogeneous2({
    Tutorial: tutorialSuite,
    Intermediate: intermediateSuite
  });
  var getAllLevelProgress = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var map65 = map(Monad0.Bind1().Apply0().Functor0());
    var $$for3 = $$for(Monad0.Applicative0())(traversableArray);
    var getLevelProgress2 = getLevelProgress(dictMonadEffect);
    return map65(function($37) {
      return catMaybes6(fromFoldable28(join6($37)));
    })($$for3(toUnfoldable9(allLevelSuites))(function(v2) {
      return $$for3(toUnfoldable9(v2.value1))(function(v1) {
        return map65(Tuple.create({
          suiteName: v2.value0,
          levelName: v1.value0
        }))(getLevelProgress2({
          suiteName: v2.value0,
          levelName: v1.value0
        }));
      });
    }));
  };

  // output/Component.LevelSelect/index.js
  var suiteNameIsSymbol2 = {
    reflectSymbol: function() {
      return "suiteName";
    }
  };
  var levelNameIsSymbol2 = {
    reflectSymbol: function() {
      return "levelName";
    }
  };
  var lookup24 = /* @__PURE__ */ lookup2(/* @__PURE__ */ ordRecord()(/* @__PURE__ */ ordRecordCons(/* @__PURE__ */ ordRecordCons(ordRecordNil)()(suiteNameIsSymbol2)(ordString))()(levelNameIsSymbol2)(ordString)));
  var foldMap5 = /* @__PURE__ */ foldMap(foldableArray)(/* @__PURE__ */ monoidMaybe(semigroupLevelProgress));
  var bind35 = /* @__PURE__ */ bind(bindArray);
  var toUnfoldable10 = /* @__PURE__ */ toUnfoldable5(unfoldableArray);
  var fromFoldable29 = /* @__PURE__ */ fromFoldable3(foldableObject);
  var mapWithIndex5 = /* @__PURE__ */ mapWithIndex(functorWithIndexObject);
  var bind113 = /* @__PURE__ */ bind(bindHalogenM);
  var getAllLevelProgress2 = /* @__PURE__ */ getAllLevelProgress(monadEffectEffect);
  var discard21 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var show40 = /* @__PURE__ */ show(/* @__PURE__ */ showMap(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons(levelNameIsSymbol2)(/* @__PURE__ */ showRecordFieldsConsNil(suiteNameIsSymbol2)(showString))(showString)))(showLevelProgress));
  var modify_10 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var Initialise5 = /* @__PURE__ */ function() {
    function Initialise6() {
    }
    ;
    Initialise6.value = new Initialise6();
    return Initialise6;
  }();
  var NavigateTo2 = /* @__PURE__ */ function() {
    function NavigateTo3(value0) {
      this.value0 = value0;
    }
    ;
    NavigateTo3.create = function(value0) {
      return new NavigateTo3(value0);
    };
    return NavigateTo3;
  }();
  var component13 = function(dictMonadAff) {
    var monadEffectHalogenM4 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    var liftEffect11 = liftEffect(monadEffectHalogenM4);
    var log6 = log4(monadEffectHalogenM4);
    var saveLevelProgress2 = saveLevelProgress(monadEffectHalogenM4);
    var navigateTo3 = navigateTo(monadEffectHalogenM4);
    var render6 = function(state3) {
      var renderLevelProgress = function(maybeProgress) {
        if (maybeProgress instanceof Just && maybeProgress.value0 instanceof Completed) {
          return span4([attr3(progress)(Completed.value)])([text("  \u2714")]);
        }
        ;
        if (maybeProgress instanceof Just && maybeProgress.value0 instanceof Incomplete) {
          return span4([attr3(progress)(Incomplete.value)])([text(" \u2736")]);
        }
        ;
        if (maybeProgress instanceof Nothing) {
          return text("");
        }
        ;
        throw new Error("Failed pattern match at Component.LevelSelect (line 79, column 45 - line 82, column 32): " + [maybeProgress.constructor.name]);
      };
      var renderPuzzle = function(suiteName) {
        return function(levelName) {
          return a([onClick(function(v2) {
            return new NavigateTo2({
              suiteName,
              levelName
            });
          })])([text(levelName), renderLevelProgress(lookup24({
            suiteName,
            levelName
          })(state3.levelProgress))]);
        };
      };
      var renderLevelSuite = function(suiteName) {
        return function(levelSuite) {
          var maybeTotalProgress = foldMap5(function(levelName) {
            return lookup24({
              suiteName,
              levelName
            })(state3.levelProgress);
          })(keys3(levelSuite));
          return div5([class_("level-suite")])([h2_([text(suiteName), renderLevelProgress(maybeTotalProgress)]), ul_(bind35(toUnfoldable10(levelSuite))(function(v2) {
            return [li_([renderPuzzle(suiteName)(v2.value0)])];
          }))]);
        };
      };
      return defaultLayout(div5([id2("puzzle-select-component")])([h1_([text("Level Select")]), div5([id2("level-suites")])(fromFoldable29(mapWithIndex5(renderLevelSuite)(allLevelSuites)))]));
    };
    var initialState5 = function(v2) {
      return {
        levelProgress: empty2
      };
    };
    var $$eval3 = mkEval({
      handleQuery: defaultEval.handleQuery,
      receive: defaultEval.receive,
      finalize: defaultEval.finalize,
      handleAction: function(v1) {
        if (v1 instanceof Initialise5) {
          return bind113(liftEffect11(getAllLevelProgress2))(function(progress3) {
            return discard21(log6(show40(progress3)))(function() {
              return modify_10(function(v2) {
                var $56 = {};
                for (var $57 in v2) {
                  if ({}.hasOwnProperty.call(v2, $57)) {
                    $56[$57] = v2[$57];
                  }
                  ;
                }
                ;
                $56.levelProgress = progress3;
                return $56;
              });
            });
          });
        }
        ;
        if (v1 instanceof NavigateTo2) {
          return discard21(saveLevelProgress2(v1.value0)(Incomplete.value))(function() {
            return navigateTo3(level(v1.value0));
          });
        }
        ;
        throw new Error("Failed pattern match at Component.LevelSelect (line 86, column 24 - line 93, column 39): " + [v1.constructor.name]);
      },
      initialize: new Just(Initialise5.value)
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState5,
      render: render6
    });
  };

  // output/Component.Routes/index.js
  var slot_3 = /* @__PURE__ */ slot_();
  var slot_1 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "home";
    }
  })(ordUnit);
  var component14 = /* @__PURE__ */ component2(monadAffAppM);
  var slot_22 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "about";
    }
  })(ordUnit);
  var component22 = /* @__PURE__ */ component(monadAffAppM);
  var slot_32 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "instructions";
    }
  })(ordUnit);
  var slot_4 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "levelSelect";
    }
  })(ordUnit);
  var component32 = /* @__PURE__ */ component13(monadAffAppM);
  var bind36 = /* @__PURE__ */ bind(bindMaybe);
  var pure36 = /* @__PURE__ */ pure(applicativeMaybe);
  var slot_5 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "level";
    }
  })(ordUnit);
  var pure113 = /* @__PURE__ */ pure(applicativeHalogenM);
  var bind114 = /* @__PURE__ */ bind(bindHalogenM);
  var get3 = /* @__PURE__ */ get(monadStateHalogenM);
  var discard23 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var when8 = /* @__PURE__ */ when(applicativeHalogenM);
  var notEq9 = /* @__PURE__ */ notEq(eqRoute);
  var lift11 = /* @__PURE__ */ lift(monadTransHalogenM)(monadAppM);
  var debug5 = /* @__PURE__ */ debug(monadLoggerAppM);
  var show41 = /* @__PURE__ */ show(showRoute);
  var modify_11 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var Navigate = /* @__PURE__ */ function() {
    function Navigate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Navigate2.create = function(value0) {
      return function(value1) {
        return new Navigate2(value0, value1);
      };
    };
    return Navigate2;
  }();
  var component15 = /* @__PURE__ */ function() {
    var render6 = function(v2) {
      if (v2.route instanceof Home) {
        return slot_1($$Proxy.value)(unit)(component14)(unit);
      }
      ;
      if (v2.route instanceof About) {
        return slot_22($$Proxy.value)(unit)(component22)(unit);
      }
      ;
      if (v2.route instanceof Instructions) {
        return slot_32($$Proxy.value)(unit)(component3)(unit);
      }
      ;
      if (v2.route instanceof LevelSelect) {
        return slot_4($$Proxy.value)(unit)(component32)(unit);
      }
      ;
      if (v2.route instanceof Level) {
        return fromMaybe(text("couldn't find that problem"))(bind36(lookup5(fromUnderscore(v2.route.value0.suiteName))(allLevelSuites))(function(levelSuite) {
          return bind36(lookup5(fromUnderscore(v2.route.value0.levelName))(levelSuite))(function(level2) {
            return pure36(slot_5($$Proxy.value)(unit)(component12)({
              levelId: {
                suiteName: fromUnderscore(v2.route.value0.suiteName),
                levelName: fromUnderscore(v2.route.value0.levelName)
              },
              level: level2
            }));
          });
        }));
      }
      ;
      throw new Error("Failed pattern match at Component.Routes (line 67, column 22 - line 80, column 105): " + [v2.route.constructor.name]);
    };
    var initialState5 = function(v2) {
      return {
        route: Home.value
      };
    };
    var $$eval3 = mkEval({
      finalize: Nothing.value,
      handleAction: function(v2) {
        return pure113(unit);
      },
      handleQuery: function(v2) {
        return bind114(get3)(function(v1) {
          return discard23(when8(notEq9(v1.route)(v2.value0))(discard23(lift11(debug5(empty2)("Navigated to " + show41(v2.value0))))(function() {
            return modify_11(function(v22) {
              var $49 = {};
              for (var $50 in v22) {
                if ({}.hasOwnProperty.call(v22, $50)) {
                  $49[$50] = v22[$50];
                }
                ;
              }
              ;
              $49.route = v2.value0;
              return $49;
            });
          })))(function() {
            return pure113(new Just(v2.value1));
          });
        });
      },
      initialize: Nothing.value,
      receive: function(v2) {
        return Nothing.value;
      }
    });
    return mkComponent({
      "eval": $$eval3,
      initialState: initialState5,
      render: render6
    });
  }();

  // output/Halogen.Aff.Util/index.js
  var bind37 = /* @__PURE__ */ bind(bindAff);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped9 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure37 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure114 = /* @__PURE__ */ pure(applicativeEffect);
  var map60 = /* @__PURE__ */ map(functorEffect);
  var selectElement = function(query3) {
    return bind37(liftEffect6(bindFlipped9(composeKleisliFlipped2(function() {
      var $16 = querySelector(query3);
      return function($17) {
        return $16(toParentNode($17));
      };
    }())(document2))(windowImpl)))(function(mel) {
      return pure37(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure114(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do5() {
      var rs = bindFlipped9(readyState)(bindFlipped9(document2)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map60(toEventTarget2)(windowImpl)();
        var listener = eventListener(function(v2) {
          return callback(new Right(unit));
        })();
        addEventListener2(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener2(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce;
  var unDriverStateX = unsafeCoerce;
  var renderStateX_ = function(dictApplicative) {
    var traverse_16 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_16(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce;
  var mapDriverState = function(f) {
    return function(v2) {
      return f(v2);
    };
  };
  var initDriverState = function(component16) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do5() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty4)();
            var childrenOut = $$new(empty4)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty2))();
            var forks = $$new(empty2)();
            var ds = {
              component: component16,
              state: component16.initialState(input3),
              refs: empty2,
              children: empty4,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write2(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_9 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped10 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup25 = /* @__PURE__ */ lookup2(ordSubscriptionId);
  var bind115 = /* @__PURE__ */ bind(bindAff);
  var liftEffect7 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard24 = /* @__PURE__ */ discard(discardUnit);
  var discard110 = /* @__PURE__ */ discard24(bindAff);
  var traverse_14 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_23 = /* @__PURE__ */ traverse_14(foldableList);
  var fork3 = /* @__PURE__ */ fork(monadForkAff);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var pure38 = /* @__PURE__ */ pure(applicativeAff);
  var map61 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel3 = /* @__PURE__ */ parallel(parallelAff);
  var map122 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map213 = /* @__PURE__ */ map(functorMaybe);
  var insert15 = /* @__PURE__ */ insert(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete9 = /* @__PURE__ */ $$delete2(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert16 = /* @__PURE__ */ insert(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_14(foldableMaybe);
  var lookup110 = /* @__PURE__ */ lookup2(ordForkId);
  var lookup26 = /* @__PURE__ */ lookup2(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter2 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref3) {
      return function __do5() {
        var v2 = read2(ref3)();
        var subs = read2(v2.subscriptions)();
        return traverse_9(unsubscribe)(bindFlipped10(lookup25(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref3) {
    return function(au) {
      return bind115(liftEffect7(read2(ref3)))(function(v2) {
        if (v2 instanceof Nothing) {
          return au;
        }
        ;
        if (v2 instanceof Just) {
          return liftEffect7(write2(new Just(new Cons(au, v2.value0)))(ref3));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v2.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard110(liftEffect7(write2({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind115(liftEffect7(f))(function(result) {
          return bind115(liftEffect7(read2(lchs)))(function(v2) {
            return discard110(traverse_23(fork3)(v2.finalizers))(function() {
              return discard110(parSequence_2(v2.initializers))(function() {
                return pure38(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref3) {
      return bind115(liftEffect7(read2(ref3)))(function(v2) {
        return liftEffect7(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v2.fresh));
      });
    };
  };
  var evalQ = function(render6) {
    return function(ref3) {
      return function(q3) {
        return bind115(liftEffect7(read2(ref3)))(function(v2) {
          return evalM(render6)(ref3)(v2["component"]["eval"](new Query(map61(Just.create)(liftCoyoneda(q3)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render6) {
    return function(initRef) {
      return function(v2) {
        var evalChildQuery = function(ref3) {
          return function(cqb) {
            return bind115(liftEffect7(read2(ref3)))(function(v1) {
              return unChildQueryBox(function(v22) {
                var evalChild = function(v3) {
                  return parallel3(bind115(liftEffect7(read2(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render6)(ds.selfRef)(v22.value1);
                    })(dsx);
                  }));
                };
                return map122(v22.value2)(sequential2(v22.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref3) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind115(liftEffect7(read2(ref3)))(function(v22) {
                var v3 = v1.value0(v22.state);
                if (unsafeRefEq(v22.state)(v3.value1)) {
                  return pure38(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard110(liftEffect7(write2({
                    component: v22.component,
                    refs: v22.refs,
                    children: v22.children,
                    childrenIn: v22.childrenIn,
                    childrenOut: v22.childrenOut,
                    selfRef: v22.selfRef,
                    handlerRef: v22.handlerRef,
                    pendingQueries: v22.pendingQueries,
                    pendingOuts: v22.pendingOuts,
                    pendingHandlers: v22.pendingHandlers,
                    rendering: v22.rendering,
                    fresh: v22.fresh,
                    subscriptions: v22.subscriptions,
                    forks: v22.forks,
                    lifecycleHandlers: v22.lifecycleHandlers,
                    state: v3.value1
                  })(ref3)))(function() {
                    return discard110(handleLifecycle(v22.lifecycleHandlers)(render6(v22.lifecycleHandlers)(ref3)))(function() {
                      return pure38(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind115(fresh(SubscriptionId)(ref3))(function(sid) {
                return bind115(liftEffect7(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render6)(ref3)(new Action(act)));
                })))(function(finalize) {
                  return bind115(liftEffect7(read2(ref3)))(function(v22) {
                    return discard110(liftEffect7(modify_(map213(insert15(sid)(finalize)))(v22.subscriptions)))(function() {
                      return pure38(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard110(liftEffect7(unsubscribe3(v1.value0)(ref3)))(function() {
                return pure38(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref3)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind115(liftEffect7(read2(ref3)))(function(v22) {
                return bind115(liftEffect7(read2(v22.handlerRef)))(function(handler3) {
                  return discard110(queueOrRun(v22.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure38(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp(function() {
                var $119 = evalM(render6)(ref3);
                return function($120) {
                  return parallel3($119($120));
                };
              }())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind115(fresh(ForkId)(ref3))(function(fid) {
                return bind115(liftEffect7(read2(ref3)))(function(v22) {
                  return bind115(liftEffect7($$new(false)))(function(doneRef) {
                    return bind115(fork3($$finally(liftEffect7(function __do5() {
                      modify_($$delete9(fid))(v22.forks)();
                      return write2(true)(doneRef)();
                    }))(evalM(render6)(ref3)(v1.value0))))(function(fiber) {
                      return discard110(liftEffect7(unlessM2(read2(doneRef))(modify_(insert16(fid)(fiber))(v22.forks))))(function() {
                        return pure38(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind115(liftEffect7(read2(ref3)))(function(v22) {
                return bind115(liftEffect7(read2(v22.forks)))(function(forkMap) {
                  return discard110(traverse_32(joinFiber)(lookup110(v1.value0)(forkMap)))(function() {
                    return pure38(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind115(liftEffect7(read2(ref3)))(function(v22) {
                return bind115(liftEffect7(read2(v22.forks)))(function(forkMap) {
                  return discard110(traverse_32(killFiber(error("Cancelled")))(lookup110(v1.value0)(forkMap)))(function() {
                    return pure38(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind115(liftEffect7(read2(ref3)))(function(v22) {
                return pure38(v1.value1(lookup26(v1.value0)(v22.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v2);
      };
    };
  };
  var evalF = function(render6) {
    return function(ref3) {
      return function(v2) {
        if (v2 instanceof RefUpdate) {
          return liftEffect7(flip(modify_)(ref3)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter2($$const(v2.value1))(v2.value0)(st.refs)
            };
          })));
        }
        ;
        if (v2 instanceof Action) {
          return bind115(liftEffect7(read2(ref3)))(function(v1) {
            return evalM(render6)(ref3)(v1["component"]["eval"](new Action2(v2.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v2.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind38 = /* @__PURE__ */ bind(bindEffect);
  var discard25 = /* @__PURE__ */ discard(discardUnit);
  var for_6 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_10 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork(monadForkAff);
  var bindFlipped11 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_15 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_24 = /* @__PURE__ */ traverse_15(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_15(foldableMap);
  var discard26 = /* @__PURE__ */ discard25(bindAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var liftEffect8 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure39 = /* @__PURE__ */ pure(applicativeEffect);
  var map62 = /* @__PURE__ */ map(functorEffect);
  var pure115 = /* @__PURE__ */ pure(applicativeAff);
  var when9 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void9 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM4 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft6 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind116 = /* @__PURE__ */ bind(bindAff);
  var liftEffect13 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  }();
  var handlePending = function(ref3) {
    return function __do5() {
      var queue = read2(ref3)();
      write2(Nothing.value)(ref3)();
      return for_6(queue)(function() {
        var $59 = traverse_10(fork4);
        return function($60) {
          return handleAff($59(reverse($60)));
        };
      }())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v2) {
    return function __do5() {
      bindFlipped11(traverse_24(traverse_33(unsubscribe)))(read2(v2.subscriptions))();
      write2(Nothing.value)(v2.subscriptions)();
      bindFlipped11(traverse_33(function() {
        var $61 = killFiber(error("finalized"));
        return function($62) {
          return handleAff($61($62));
        };
      }()))(read2(v2.forks))();
      return write2(empty2)(v2.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component16) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render6)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_(function(handlers) {
                return {
                  initializers: new Cons(discard26(parSequence_3(reverse(handlers.initializers)))(function() {
                    return discard26(parentInitializer)(function() {
                      return liftEffect8(function __do5() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j) {
              return unComponent(function(c2) {
                return function __do5() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c2)(j)(handler3)(lchs$prime)();
                  var pre2 = read2(lchs)();
                  write2({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped11(unDriverStateX(function() {
                    var $63 = render6(lchs);
                    return function($64) {
                      return $63(function(v2) {
                        return v2.selfRef;
                      }($64));
                    };
                  }()))(read2($$var2))();
                  bindFlipped11(squashChildInitializers(lchs)(pre2.initializers))(read2($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot15) {
                  return function __do5() {
                    var childrenIn = map62(slot15.pop)(read2(childrenInRef))();
                    var $$var2 = function() {
                      if (childrenIn instanceof Just) {
                        write2(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read2(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do6() {
                            flip(write2)(st.handlerRef)(function() {
                              var $65 = maybe(pure115(unit))(handler3);
                              return function($66) {
                                return $65(slot15.output($66));
                              };
                            }())();
                            return handleAff(evalM(render6)(st.selfRef)(st["component"]["eval"](new Receive(slot15.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)(function() {
                          var $67 = maybe(pure115(unit))(handler3);
                          return function($68) {
                            return $67(slot15.output($68));
                          };
                        }())(slot15.input)(slot15.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    }();
                    var isDuplicate = map62(function($69) {
                      return isJust(slot15.get($69));
                    })(read2(childrenOutRef))();
                    when9(isDuplicate)(warn2("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_(slot15.set($$var2))(childrenOutRef)();
                    return bind38(read2($$var2))(renderStateX2(function(v2) {
                      if (v2 instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v2 instanceof Just) {
                        return pure39(renderSpec2.renderChild(v2.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v2.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render6 = function(lchs) {
          return function($$var2) {
            return function __do5() {
              var v2 = read2($$var2)();
              var shouldProcessHandlers = map62(isNothing)(read2(v2.pendingHandlers))();
              when9(shouldProcessHandlers)(write2(new Just(Nil.value))(v2.pendingHandlers))();
              write2(empty4)(v2.childrenOut)();
              write2(v2.children)(v2.childrenIn)();
              var handler3 = function() {
                var $70 = queueOrRun(v2.pendingHandlers);
                var $71 = evalF(render6)(v2.selfRef);
                return function($72) {
                  return $70($$void9($71($72)));
                };
              }();
              var childHandler = function() {
                var $73 = queueOrRun(v2.pendingQueries);
                return function($74) {
                  return $73(handler3(Action.create($74)));
                };
              }();
              var rendering = renderSpec2.render(function($75) {
                return handleAff(handler3($75));
              })(renderChild(lchs)(childHandler)(v2.childrenIn)(v2.childrenOut))(v2.component.render(v2.state))(v2.rendering)();
              var children2 = read2(v2.childrenOut)();
              var childrenIn = read2(v2.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do6() {
                  var childDS = read2(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_)(v2.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when9(shouldProcessHandlers)(flip(tailRecM4)(unit)(function(v1) {
                return function __do6() {
                  var handlers = read2(v2.pendingHandlers)();
                  write2(new Just(Nil.value))(v2.pendingHandlers)();
                  traverse_24(function() {
                    var $76 = traverse_10(fork4);
                    return function($77) {
                      return handleAff($76(reverse($77)));
                    };
                  }())(handlers)();
                  var mmore = read2(v2.pendingHandlers)();
                  var $52 = maybe(false)($$null)(mmore);
                  if ($52) {
                    return voidLeft6(write2(Nothing.value)(v2.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do5() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render6)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v2) {
                return function __do6() {
                  var dsx = read2(v2)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref3) {
            return function(q3) {
              return bind116(liftEffect8(read2(disposed)))(function(v2) {
                if (v2) {
                  return pure115(Nothing.value);
                }
                ;
                return evalQ(render6)(ref3)(q3);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do5() {
                var v2 = read2(disposed)();
                if (v2) {
                  return unit;
                }
                ;
                write2(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do6() {
                    var v22 = liftEffect13(read2(v1.selfRef))();
                    return for_6(v22.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind116(liftEffect8(newLifecycleHandlers))(function(lchs) {
          return bind116(liftEffect8($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do5() {
              var sio = create();
              var dsx = bindFlipped11(read2)(runComponent(lchs)(function() {
                var $78 = notify(sio.listener);
                return function($79) {
                  return liftEffect8($78($79));
                };
              }())(i2)(component16))();
              return unDriverStateX(function(st) {
                return pure39({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map63 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ function() {
    var $6 = map63(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  }();
  var nextSibling = /* @__PURE__ */ function() {
    var $15 = map63(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  }();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy13 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var $$void10 = /* @__PURE__ */ $$void(functorEffect);
  var pure40 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_11 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap14 = /* @__PURE__ */ unwrap();
  var when10 = /* @__PURE__ */ when(applicativeEffect);
  var not5 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity20 = /* @__PURE__ */ identity(categoryFn);
  var bind117 = /* @__PURE__ */ bind(bindAff);
  var liftEffect9 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map64 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped12 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v1 instanceof Just && v22 instanceof Just) {
          return $$void10(insertBefore(v2)(v1.value0)(v22.value0));
        }
        ;
        if (v1 instanceof Nothing && v22 instanceof Just) {
          return $$void10(appendChild(v2)(v22.value0));
        }
        ;
        return pure40(unit);
      };
    };
  };
  var removeChild3 = function(v2) {
    return function __do5() {
      var npn = parentNode2(v2.node)();
      return traverse_11(function(pn) {
        return removeChild2(v2.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document3) {
        var getNode = unRenderStateX(function(v2) {
          return v2.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap14)(spec);
          var $lazy_patch = $runtime_lazy13("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot15) {
              if (st instanceof Just) {
                if (slot15 instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot15.value0);
                }
                ;
                if (slot15 instanceof ThunkSlot) {
                  var step$prime = step(st.value0, slot15.value0);
                  return mkStep(new Step2(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot15.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot15);
            };
          });
          var $lazy_render = $runtime_lazy13("render", "Halogen.VDom.Driver", function() {
            return function(slot15) {
              if (slot15 instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot15.value0);
              }
              ;
              if (slot15 instanceof ThunkSlot) {
                var step5 = buildThunk2(slot15.value0);
                return mkStep(new Step2(extract2(step5), new Just(step5), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot15.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy13("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read2(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step2(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch = $lazy_patch(91);
          var render6 = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render6;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document3
        };
      };
    };
  };
  var renderSpec = function(document3) {
    return function(container) {
      var render6 = function(handler3) {
        return function(child) {
          return function(v2) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do5() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler3)(renderChildRef)(document3);
                  var machine = buildVDom(spec)(v2);
                  var node = extract2(machine);
                  $$void10(appendChild(node)(toNode2(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do5() {
                  write2(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step(v1.value0.machine, v2);
                  var newNode = extract2(machine$prime);
                  when10(not5(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render: render6,
        renderChild: identity20,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component16) {
    return function(i2) {
      return function(element4) {
        return bind117(liftEffect9(map64(toDocument)(bindFlipped12(document2)(windowImpl))))(function(document3) {
          return runUI(renderSpec(document3)(element4))(component16)(i2);
        });
      };
    };
  };

  // output/Main/index.js
  var bind39 = /* @__PURE__ */ bind(bindAff);
  var $$void11 = /* @__PURE__ */ $$void(functorEffect);
  var matchesWith2 = /* @__PURE__ */ matchesWith(foldableEither);
  var when11 = /* @__PURE__ */ when(applicativeEffect);
  var notEq10 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(eqRoute));
  var discard27 = /* @__PURE__ */ discard(discardUnit)(bindAff);
  var bindFlipped13 = /* @__PURE__ */ bindFlipped(bindAff);
  var liftEffect10 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var rootElement = /* @__PURE__ */ bind39(/* @__PURE__ */ selectElement("#abed"))(/* @__PURE__ */ maybe(/* @__PURE__ */ throwError(monadThrowAff)(/* @__PURE__ */ error("Could not find element #abed")))(/* @__PURE__ */ pure(applicativeAff)));
  var initialiseRouting = function(onNewRoute) {
    return $$void11(matchesWith2(parse2(routeCodec))(function(old) {
      return function($$new2) {
        return when11(notEq10(old)(new Just($$new2)))(onNewRoute($$new2));
      };
    }));
  };
  var main2 = /* @__PURE__ */ function() {
    return runHalogenAff(discard27(runLoggerT(info(monadLoggerLoggerT(monadEffectAff))(empty2)("Starting ABED"))(logMessage(monadEffectAff)(Info.value)))(function() {
      return discard27(awaitLoad)(function() {
        return bind39(runAppM(component15))(function(rootComponent) {
          return bind39(bindFlipped13(runUI2(rootComponent)(unit))(rootElement))(function(v2) {
            return liftEffect10(initialiseRouting(function(route) {
              return runHalogenAff(v2.query(new Navigate(route, unit)));
            }));
          });
        });
      });
    }));
  }();

  // <stdin>
  main2();
})();
